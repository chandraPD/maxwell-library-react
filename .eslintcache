[{"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\BookManagement\\BookDetail.js":"1","C:\\Users\\ASUS\\maxwell-library-react\\src\\index.js":"2","C:\\Users\\ASUS\\maxwell-library-react\\src\\reportWebVitals.js":"3","C:\\Users\\ASUS\\maxwell-library-react\\src\\Services\\auth.service.js":"4","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\NavBar\\NavBar.js":"5","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Home\\Home.js":"6","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\TopUp.js":"7","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\BookManagement\\BookManagement.js":"8","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Wishlist\\Wishlist.js":"9","C:\\Users\\ASUS\\maxwell-library-react\\src\\Components\\Datatable\\Cell.js":"10","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\FormInput.js":"11","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Detail\\Detail.js":"12","C:\\Users\\ASUS\\maxwell-library-react\\src\\App.js":"13","C:\\Users\\ASUS\\maxwell-library-react\\src\\Navigations\\MainNavigations.js":"14","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Footer\\Footer.js":"15","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Payment\\PaymentInvoicePrint.js":"16","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUpManagement\\TopUpManagement.js":"17","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\DetailInvoice\\DetailInvoice.js":"18","C:\\Users\\ASUS\\maxwell-library-react\\src\\Components\\Datepicker\\Dates.js":"19","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Profile\\ChangePassword.js":"20","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\CategoryManagement\\CategoryManagement.js":"21","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\UserManagement\\UserManagement.js":"22","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\FineManagement\\FineManagement.js":"23","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Catalogue\\Catalogue.js":"24","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\Card.js":"25","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\Validate.js":"26","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Profile\\AdminProfile.js":"27","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Payment\\PaymentInvoicePrintPaid.js":"28","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Profile\\Profile.js":"29","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\DonationManagement\\DonationManagement.js":"30","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\ReturnBook\\CheckReturnBook.js":"31","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Author\\Author.js":"32"},{"size":19493,"mtime":1610447289135,"results":"33","hashOfConfig":"34"},{"size":937,"mtime":1609682650008,"results":"35","hashOfConfig":"34"},{"size":375,"mtime":1606198920915,"results":"36","hashOfConfig":"34"},{"size":1195,"mtime":1610359212744,"results":"37","hashOfConfig":"34"},{"size":3815,"mtime":1610092736195,"results":"38","hashOfConfig":"34"},{"size":8411,"mtime":1610370345907,"results":"39","hashOfConfig":"34"},{"size":573,"mtime":1610077835713,"results":"40","hashOfConfig":"34"},{"size":32074,"mtime":1610464005340,"results":"41","hashOfConfig":"34"},{"size":3382,"mtime":1610464006578,"results":"42","hashOfConfig":"34"},{"size":300,"mtime":1610259575640,"results":"43","hashOfConfig":"34"},{"size":574,"mtime":1609910917430,"results":"44","hashOfConfig":"34"},{"size":24997,"mtime":1610518831242,"results":"45","hashOfConfig":"34"},{"size":282,"mtime":1609682650000,"results":"46","hashOfConfig":"34"},{"size":8651,"mtime":1610464005288,"results":"47","hashOfConfig":"34"},{"size":519,"mtime":1606198920912,"results":"48","hashOfConfig":"34"},{"size":4202,"mtime":1606455043006,"results":"49","hashOfConfig":"34"},{"size":28361,"mtime":1610514053344,"results":"50","hashOfConfig":"34"},{"size":11635,"mtime":1610464005811,"results":"51","hashOfConfig":"34"},{"size":1475,"mtime":1610259575656,"results":"52","hashOfConfig":"34"},{"size":10606,"mtime":1609682650005,"results":"53","hashOfConfig":"34"},{"size":14203,"mtime":1610447289138,"results":"54","hashOfConfig":"34"},{"size":4502,"mtime":1610464006429,"results":"55","hashOfConfig":"34"},{"size":8698,"mtime":1610464005877,"results":"56","hashOfConfig":"34"},{"size":6708,"mtime":1610447289137,"results":"57","hashOfConfig":"34"},{"size":2440,"mtime":1610083686068,"results":"58","hashOfConfig":"34"},{"size":1069,"mtime":1609905735501,"results":"59","hashOfConfig":"34"},{"size":9745,"mtime":1606392264711,"results":"60","hashOfConfig":"34"},{"size":4270,"mtime":1606455043006,"results":"61","hashOfConfig":"34"},{"size":16243,"mtime":1610447289139,"results":"62","hashOfConfig":"34"},{"size":6975,"mtime":1610464005876,"results":"63","hashOfConfig":"34"},{"size":18501,"mtime":1610464006221,"results":"64","hashOfConfig":"34"},{"size":15659,"mtime":1610515579681,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},"11ui09a",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"69"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"69"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"69"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"69"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"69"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"103"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"103"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"103"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"103"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\BookManagement\\BookDetail.js",["147","148","149"],"import React, { Component } from \"react\";\r\nimport DataTable from \"../../../Components/Datatable/Table\";\r\nimport Action from \"../../../Components/Datatable/Action\";\r\nimport $ from \"jquery\";\r\nimport \"datatables.net-responsive/js/dataTables.responsive\";\r\nimport \"datatables.net-dt/css/jquery.dataTables.css\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Axios from '../../../Instances/axios-instances';\r\n\r\nclass BookDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      bookId: \"\",\r\n      fields: {},\r\n      errors: {},\r\n      data: [],\r\n      rows: [],\r\n      results: [],\r\n      title: \"\",\r\n      statusBookDetail: \"Available\"\r\n    };\r\n\r\n    this.detailBookChange = this.detailBookChange.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    const bookId = this.props.match.params.bookId;\r\n    console.log(bookId);\r\n    this.fetchData(bookId);\r\n  }\r\n\r\n  async fetchData(bookId) {\r\n    $('#example1').DataTable().destroy();\r\n    let results = [];\r\n\r\n    var no = 1;\r\n\r\n    await Axios.get(`/book-detail/get-by-book-id/${bookId}`)\r\n        .then((response) => {\r\n          const result = response.data;\r\n          this.setState({data: result})\r\n\r\n          result.map((detailBook) => {\r\n            let row = [];\r\n\r\n            row.push(<td className=\"text-center\">{no++}</td>);\r\n            row.push(\r\n              <td className=\"text-center py-0 align-middle\">\r\n                <div className=\"btn-group btn-group-sm\">\r\n                  <Action\r\n                    type=\"success\"\r\n                    title=\"Edit\"\r\n                    icon=\"pen\"\r\n                    dataToggle=\"modal\"\r\n                    dataTarget=\"#modal-edit\"\r\n                    onClick = {() => this.getDetailBook(detailBook.bookDetailId)}\r\n                  />\r\n                  <Action\r\n                    type=\"danger\"\r\n                    title=\"Delete\"\r\n                    icon=\"trash\"\r\n                    dataToggle=\"modal\"\r\n                    dataTarget=\"#modal-delete\"\r\n                    onClick = {() => this.getDetailBook(detailBook.bookDetailId)}\r\n                  />\r\n                </div>\r\n              </td>\r\n            );\r\n            row.push(<td className=\"text-center\">{detailBook.bookDetailCode}</td>);\r\n            row.push(<td className=\"text-center\">{detailBook.typeOfDamage}</td>);\r\n            row.push(<td className=\"text-center\">{detailBook.descOfDamage}</td>);\r\n            row.push(<td className=\"text-center\">{detailBook.statusBookDetail}</td>);\r\n            this.setState({ title: detailBook.bookEntity.title})\r\n            results.push(row);                        \r\n          })\r\n           this.setState({ rows: results });\r\n\r\n           $(\"#example1\").DataTable({\r\n            responsive: true,\r\n            autoWidth: false,\r\n            });\r\n\r\n            Axios.get('/book-detail/get-book-detail-count/Available/' + bookId)\r\n                  .then((response) => {\r\n                    console.log(response.data)\r\n\r\n                    const count = {\r\n                      qty: response.data\r\n                    }\r\n\r\n                    Axios.put(\"/book/update-qty-book/\" + bookId, count)\r\n                    .then((response) => {\r\n                      console.log(response)\r\n                    })  \r\n\r\n                  })  \r\n        })\r\n  }\r\n\r\n  resetModal() {\r\n    let fields = this.state.fields\r\n    fields[\"typeOfDamage\"] = \"\"\r\n    fields[\"descOfDamage\"] = \"\"\r\n\r\n    this.setState({fields: fields})\r\n  }\r\n\r\n  handleChange(field, e) {\r\n      let fields = this.state.fields\r\n      let errors = {}\r\n      errors[\"typeOfDamage\"] = \"\"\r\n      fields[field] = e.target.value\r\n      this.setState({fields})\r\n      this.setState({errors: errors})\r\n      console.log(this.state.fields)\r\n  }\r\n\r\n  detailBookChange = (event) => {\r\n      this.setState({\r\n          [event.target.name]: event.target.value\r\n      })\r\n  }\r\n\r\n  updateDetailBook = (id) => {\r\n      const detailBook = {\r\n          typeOfDamage: this.state.typeOfDamage,\r\n          descOfDamage: this.state.descOfDamage,\r\n          statusBookDetail: this.state.statusBookDetail,\r\n          bookId: this.props.match.params.bookId\r\n      }\r\n\r\n      Axios.put('/book-detail/update-detail/' + id, detailBook)\r\n        .then((response) => {\r\n            console.log(response)\r\n            $(\"#modal-edit\").modal(\"toggle\");\r\n            $('.modal-backdrop').remove();\r\n            Swal.fire({\r\n              icon: \"success\",\r\n              title: \"Success\",\r\n              text: \"Your Data has been Updated\",\r\n              confirmButtonText: `OK`,\r\n            }).then((result) => {\r\n              if (result.isConfirmed) {\r\n                this.fetchData(this.props.match.params.bookId)\r\n              }\r\n            });\r\n        })\r\n  }\r\n\r\n  deleteDetailBook = (id) => {\r\n    Axios.put('/book-detail/delete-detail/' + id)\r\n    .then((response) => {\r\n      console.log(response)\r\n      Swal.fire({\r\n        icon: \"success\",\r\n        title: \"Success\",\r\n        text: \"Your Data has been Deleted\",\r\n        confirmButtonText: `OK`,\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          this.fetchData(this.props.match.params.bookId)\r\n        }\r\n      });\r\n    })\r\n  }\r\n\r\n  getDetailBook = (id) => {\r\n      Axios.get(\"/book-detail/get-detail-book/\" + id)\r\n        .then((response) => {\r\n            console.log(response)\r\n            this.setState({\r\n                typeOfDamage: response.data.typeOfDamage,\r\n                descOfDamage: response.data.descOfDamage,\r\n                bookDetailId: id,\r\n                statusBookDetail: response.data.statusBookDetail\r\n            })\r\n        })\r\n  }\r\n\r\n  handleValidation() {\r\n      let fields = this.state.fields\r\n      let errors = {}\r\n      let formIsValid = true\r\n\r\n      // Type of Damage\r\n      if(!fields[\"typeOfDamage\"]) {\r\n          formIsValid = false\r\n          errors[\"typeOfDamage\"] = \"Type of Damage cannot be empty\"\r\n      }\r\n\r\n      this.setState({ errors: errors})\r\n      return formIsValid\r\n  }\r\n\r\n  contactSubmit(e) {\r\n      let fields = this.state.fields\r\n      e.preventDefault()\r\n      if(this.handleValidation()) {\r\n        $(\"#modal-add\").modal(\"toggle\")\r\n        $('.modal-backdrop').remove();\r\n\r\n        let descOfDamage;\r\n        let statusBookDetail;\r\n\r\n        if(document.getElementById(\"inputDescofDamage\").value.length == 0) {\r\n          descOfDamage = \"-\"\r\n        } else {\r\n          descOfDamage = fields[\"descOfDamage\"]\r\n        }\r\n\r\n        const detailBook = {\r\n            typeOfDamage: fields[\"typeOfDamage\"],\r\n            descOfDamage: descOfDamage,\r\n            statusBookDetail: this.state.statusBookDetail,\r\n            bookId: this.props.match.params.bookId\r\n        }\r\n\r\n        console.log(detailBook)\r\n\r\n        Axios.post(\"/book-detail/add-detail\", detailBook)\r\n            .then((response)=> {\r\n                console.log(response)\r\n                Swal.fire({\r\n                  icon: \"success\",\r\n                  title: \"Success\",\r\n                  text: \"Your Data has been Added\",\r\n                  confirmButtonText: `OK`,\r\n                }).then((result) => {\r\n                  if (result.isConfirmed) {\r\n                    this.fetchData(this.props.match.params.bookId)\r\n                    this.resetModal()\r\n                  }\r\n                });\r\n            })\r\n      } else {\r\n\r\n      }\r\n  }\r\n\r\n  render() {\r\n    const { rows } = this.state;\r\n    const headings = [\r\n      \"No.\",\r\n      \"Action\",\r\n      \"Book Detail ID\",\r\n      \"Type of Damage\",\r\n      \"Description\",\r\n      \"Status\"\r\n    ];\r\n\r\n    return (\r\n      <div className=\"content-wrapper\">\r\n        <section className=\"content-header\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col-sm-6\">\r\n                <h1>Detail Book</h1>\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <ol className=\"breadcrumb float-sm-right\">\r\n                  <li className=\"breadcrumb-item\">\r\n                    <Link to=\"/\">Home</Link>\r\n                  </li>\r\n                  <li className=\"breadcrumb-item\">\r\n                    <Link to='/BookManagement'>Book Management</Link>\r\n                  </li>\r\n                  <li className=\"breadcrumb-item active\">Detail Book</li>\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/* Main content */}\r\n        <section className=\"content\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-6 ctm-responsive\">\r\n                          <h3>{this.state.title}</h3>\r\n                      </div>\r\n                      <div className=\"col-md-6 ctm-responsive\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary add-btn\"\r\n                          data-toggle=\"modal\"\r\n                          data-target=\"#modal-add\"\r\n                          style={{ float: \"right\" }}\r\n                        >\r\n                          <i className=\"nav-icon fas fa-plus\"></i>\r\n                          &nbsp; Add Detail\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  {/* /.card-header */}\r\n                  <div className=\"card-body\">\r\n                    <DataTable headings={headings} rows={rows} />\r\n                    {/* /.card-body */}\r\n                  </div>\r\n                </div>\r\n                {/* /.card */}\r\n              </div>\r\n              {/* /.col */}\r\n            </div>\r\n            {/* /.row */}\r\n          </div>\r\n          {/* /.container-fluid */}\r\n        </section>\r\n        {/* /.content */}\r\n\r\n        {/* <!--Modal Add--> */}\r\n        <div className=\"modal fade\" id=\"modal-add\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Add Detail</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <form\r\n                id=\"addBookDetail\"\r\n                onSubmit={this.contactSubmit.bind(this)}\r\n              >\r\n                <div className=\"modal-body\">\r\n                  <div className=\"card-body\">\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"inputTypeofDamage\">Type of Damage <small className=\"red-asterisk\">*</small></label>\r\n                      <select\r\n                        name=\"typeOfDamage\"\r\n                        className=\"form-control\"\r\n                        id=\"inputTypeofDamage\"\r\n                        value={this.state.fields[\"typeOfDamage\"]}\r\n                        onChange={this.handleChange.bind(this, \"typeOfDamage\")}\r\n                      >\r\n                        <option value=\"null\">Choose Type of Damage</option>\r\n                        <option value=\"No Damage\">No Damage</option>\r\n                        <option value=\"Minor\">Minor</option>\r\n                        <option value=\"Major\">Major</option>\r\n                      </select>\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"typeOfDamage\"]}\r\n                      </span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"inputDescofDamage\">Description</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"inputDescofDamage\"\r\n                        name=\"descOfDamage\"\r\n                        placeholder=\"Enter Description of Damage\"\r\n                        onChange={this.handleChange.bind(this, \"descOfDamage\")}\r\n                        value={this.state.fields[\"descOfDamage\"]}\r\n                      />\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"descOfDamage\"]}\r\n                      </span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"inputStatusBookDetail\">Status</label>\r\n                      <select\r\n                        name=\"statusBookDetail\"\r\n                        className=\"form-control\"\r\n                        id=\"inputStatusBookDetail\"\r\n                        value={this.state.statusBookDetail}\r\n                        onChange={this.detailBookChange}\r\n                      >\r\n                        <option value=\"Available\" selected>Available</option>\r\n                        <option value=\"Unavailable\">Unavailable</option>\r\n                      </select>\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"statusBookDetail\"]}\r\n                      </span>\r\n                    </div>\r\n\r\n                    <small><span className=\"red-asterisk\">*</span> Required</small> \r\n\r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer justify-content-between\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-default\"\r\n                    data-dismiss=\"modal\"\r\n                    onClick={() => this.resetModal()}\r\n                  >\r\n                    Close\r\n                  </button>\r\n                  <button type=\"submit\" className=\"btn btn-warning\">\r\n                    Add\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n\r\n        {/* <!--Modal Edit--> */}\r\n        <div className=\"modal fade\" id=\"modal-edit\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Edit Detail Book</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <form id=\"editDetailBook\">\r\n                <div className=\"modal-body\">\r\n                  <div className=\"card-body\">\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"editTypeOfDamage\">Type of Damage</label>\r\n                      <select\r\n                        name=\"typeOfDamage\"\r\n                        className=\"form-control\"\r\n                        id=\"editTypeOfDamage\"\r\n                        value={this.state.typeOfDamage}\r\n                        onChange={this.detailBookChange}\r\n                      >\r\n                        <option value=\"No Damage\">No Damage</option>\r\n                        <option value=\"Minor\">Minor</option>\r\n                        <option value=\"Major\">Major</option>\r\n                      </select>\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"typeOfDamage\"]}\r\n                      </span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"editDescOfDamage\">Description</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"descOfDamage\"\r\n                        id=\"editDescOfDamage\"\r\n                        value={this.state.descOfDamage}\r\n                        onChange={this.detailBookChange}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"editStatusBookDetail\">Status</label>\r\n                      <select\r\n                        name=\"statusBookDetail\"\r\n                        className=\"form-control\"\r\n                        id=\"editStatusBookDetail\"\r\n                        value={this.state.statusBookDetail}\r\n                        onChange={this.detailBookChange}\r\n                      >\r\n                        <option value=\"Available\">Available</option>\r\n                        <option value=\"Unavailable\">Unavailable</option>\r\n                      </select>\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"statusBookDetail\"]}\r\n                      </span>\r\n                    </div>\r\n\r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer justify-content-between\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-default\"\r\n                    data-dismiss=\"modal\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button type=\"button\" onClick={() => this.updateDetailBook(this.state.bookDetailId)} className=\"btn btn-warning\">\r\n                    Save changes\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n\r\n        {/* <!--Modal Delete--> */}\r\n        <div className=\"modal fade\" id=\"modal-delete\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Delete Detail Book</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                If you Delete this, you can't be returned\r\n              </div>\r\n              <div className=\"modal-footer justify-content-between\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-default\"\r\n                  data-dismiss=\"modal\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-warning\"\r\n                  type=\"button\"\r\n                  data-dismiss=\"modal\"\r\n                  onClick={() => this.deleteDetailBook(this.state.bookDetailId)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n         \r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(BookDetail);\r\n",["150","151"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\index.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\reportWebVitals.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Services\\auth.service.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\NavBar\\NavBar.js",["152","153","154","155","156"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Home\\Home.js",["157","158","159","160"],"import React, { Component } from 'react';\r\nimport './Home.style.css';\r\nimport firstHero from '../../../Assets/Media/books/hero1.png';\r\nimport secondtHero from '../../../Assets/Media/books/hero2.png';\r\nimport thirdHero from '../../../Assets/Media/books/hero3.png';\r\nimport Flickity from 'react-flickity-component';\r\nimport { Link } from 'react-router-dom';\r\nimport Axios from '../../../Instances/axios-instances';\r\n\r\nclass Home extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       dataTop: [],\r\n       dataOld: [],\r\n       allBook: [],\r\n       slideShowActive : [],\r\n       recommendedBook: [],\r\n       recommendedCat: \"\"\r\n    }\r\n  }\r\n  \r\n\r\n  componentDidMount() {\r\n    this.getTopFive();\r\n    this.getAllBook();\r\n    this.getOldestFive();\r\n    this.getSlideShowActive();\r\n    this.getRecommendedBook();\r\n    let user = JSON.parse( localStorage.getItem('user'))\r\n    const userToken = user.token;\r\n    console.log(userToken);\r\n  }\r\n\r\n  async getTopFive() {\r\n    let fetchTop = await Axios.get('/book/get-recent-five')\r\n    const resultTop = fetchTop.data      \r\n    this.setState({dataTop: resultTop})      \r\n  }\r\n\r\n  async getOldestFive() {\r\n    let fetchOld = await Axios.get('/book/get-oldest-five')\r\n    const resultOld = fetchOld.data\r\n    this.setState({dataOld: resultOld})\r\n  }\r\n\r\n  async getAllBook() {\r\n    let fetchBook = await Axios.get('/book/get-all')\r\n    this.setState({allBook: fetchBook.data})\r\n  }\r\n\r\n  async getSlideShowActive() {\r\n    let fetchSlideShowActive = await Axios.get('/slideshow/get-all-active');\r\n    this.setState({ slideShowActive : fetchSlideShowActive.data});\r\n  }\r\n\r\n  async getRecommendedBook() {\r\n    let fetchRecommended = await Axios.get('/book/get-max-qty')\r\n    console.log(fetchRecommended)\r\n    this.setState({recommendedBook: fetchRecommended.data})\r\n  }\r\n\r\n  render() {\r\n    const flickityOptions = {\r\n      wrapAround: true,\r\n      autoPlay: 2000,\r\n      pageDots: false,\r\n      initialIndex: 2,\r\n    };\r\n\r\n    const { dataTop, allBook, dataOld, slideShowActive, recommendedBook, recommendedCat } = this.state\r\n\r\n    return (\r\n      <div className=\"content-wrapper\">\r\n        <section className=\"content\">\r\n          {/* Flickity init */}\r\n          <div className=\"carousel-main\">\r\n            <Flickity\r\n              className={'main-carousel carousel'}\r\n              elementType={'div'}\r\n              options={flickityOptions}\r\n              static={true}\r\n              reloadOnUpdate={true}\r\n            >\r\n              {slideShowActive.map((data) => {\r\n                    return (\r\n                          <div\r\n                          className=\"carousel-cell\"\r\n                          style={{\r\n                            backgroundImage: `url(${data.img})`,\r\n                            borderRadius: '30px'\r\n                          }}\r\n                        >\r\n                          <div className=\"carousel-info\">\r\n                            <div className=\"carousel-text\">\r\n                              <h2>{data.title}</h2>\r\n                              <h3>{data.subTitle}</h3>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                    )\r\n                  })}\r\n              \r\n\r\n            </Flickity>\r\n          </div>\r\n          {/* Flickity ends */}\r\n\r\n          {/* Top picks init */}\r\n          <div className=\"container-fluid book-list\">\r\n            <div className=\"list-book-content\">\r\n              <div className=\"col-12\">\r\n                <div className=\"custom-flex2\">\r\n                  <h2 className=\"title-container\">Recently Added</h2>\r\n                  <h4 className=\"title-container\">\r\n                    Stories sparking conversation\r\n                  </h4>\r\n                </div>\r\n                <div className=\"filter-container p-0 row custom-flex\">\r\n\r\n                  {dataTop.map((data) => {\r\n                    return (\r\n                      <div className=\"top-seller\">\r\n                        <div className=\"filtr-item list-book\" />\r\n                        <Link to={`Detail/${data.bookId}`}>\r\n                          <img\r\n                            src={data.imgDetail}\r\n                            className=\"img-fluid img-book\"\r\n                            alt=\"white sample\"\r\n                          />\r\n                          <span className=\"badge category-book\">{data.categoryEntity.category}</span>\r\n                        </Link>\r\n                    </div>\r\n                    )\r\n                  })}\r\n                  \r\n                </div>\r\n                <div className=\"books-nf\" style={{ display: 'none' }}>\r\n                  <h3 className=\"book-not-found\">Oops, Book Not Found</h3>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Top picks ends */}\r\n\r\n          <div className=\"list-book-content\">\r\n            <div className=\"col-12\">\r\n              <div className=\"custom-flex2\">\r\n                <h2 className=\"title-container\">Recommended Stories</h2>\r\n                <h4 className=\"title-container\">Binge from start to finish</h4>\r\n              </div>\r\n              <div className=\"hero-book\">\r\n                <div className=\"hero-book-cover\">\r\n                  <Link to={`Detail/${recommendedBook.bookId}`}>\r\n                    <img\r\n                      src={recommendedBook.imgDetail}\r\n                      alt={recommendedBook.title}\r\n                    />\r\n                  </Link>\r\n                </div>\r\n                <div>\r\n                  <Link\r\n                    className=\"title\"\r\n                    to={`Detail/${recommendedBook.bookId}`}\r\n                    aria-label={recommendedBook.title}\r\n                  >\r\n                    {recommendedBook.title}\r\n                  </Link>\r\n                  <br />\r\n                  <p className=\"description\">\r\n                    {recommendedBook.description}\r\n                  </p>\r\n                  \r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"filter-container p-0 row custom-flex\">\r\n             \r\n\r\n                {dataOld.map((data) => {\r\n                      return (\r\n                        <div className=\"top-seller\">\r\n                        <div className=\"filtr-item list-book\" >\r\n                          <Link to={`Detail/${data.bookId}`}>\r\n                            <img\r\n                              src={data.imgDetail}\r\n                              className=\"img-fluid img-book\"\r\n                              alt=\"white sample\"\r\n                            />\r\n                            <span className=\"badge category-book\">{data.categoryEntity.category}</span>\r\n                          </Link>\r\n                        </div>\r\n                        </div>\r\n                      )\r\n                    })}\r\n                    \r\n    \r\n            \r\n            <div className=\"books-nf\" style={{ display: 'none' }}>\r\n              <h3 className=\"book-not-found\">Oops, Book Not Found</h3>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"list-book-content\">\r\n            <div className=\"col-12\">\r\n              <div className=\"custom-flex2\">\r\n                <Link to='/Catalogue' ><h2 className=\"title-container\">View Book List </h2></Link>\r\n                <h4 className=\"title-container\">Find your best reads</h4>\r\n\r\n              </div>\r\n              <Flickity\r\n                className={'carousel carousel-main book-list-bottom'}\r\n                elementType={'div'}\r\n                options={flickityOptions}\r\n                static={true}\r\n                reloadOnUpdate={true}\r\n              >\r\n\r\n                {allBook.map((data) => {\r\n                    return (\r\n                      <div className=\"carousel-cell\">\r\n                        <Link to={`Detail/${data.bookId}`}>\r\n                          <img\r\n                            src={data.imgDetail}\r\n                            className=\"list-book-bottom carousel-cell-image\"\r\n                            alt=\"white sample\"\r\n                          />\r\n                        </Link>\r\n                      </div>\r\n                    )\r\n                  })}\r\n              </Flickity>\r\n            </div>\r\n          </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\TopUp.js",["161"],"import React, { Component } from 'react';\r\nimport './TopUp.style.css'\r\nimport Card from '../TopUp/Card';\r\nimport showResults from \"./showResult\";\r\nimport Axios from 'axios';\r\n\r\nclass TopUp extends Component {\r\n\r\n  constructor(props) {\r\n    let user = JSON.parse( localStorage.getItem('user'))  \r\n      super(props);    \r\n      this.state = {              \r\n        role:\"\",\r\n        userToken: user.token\r\n      };\r\n    }\r\n    \r\n   render () { \r\n      return(<Card onSubmit={showResults} >               \r\n        </Card>     )         \r\n    }\r\n  }\r\n\r\nexport default TopUp;",["162","163"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\BookManagement\\BookManagement.js",["164"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Wishlist\\Wishlist.js",["165","166","167","168"],"import React, { Component } from 'react';\r\nimport firstHero from '../../../Assets/Media/books/hero1.png';\r\nimport secondtHero from '../../../Assets/Media/books/hero2.png';\r\nimport thirdHero from '../../../Assets/Media/books/hero3.png';\r\nimport Flickity from 'react-flickity-component';\r\nimport { Link } from 'react-router-dom';\r\nimport Axios from '../../../Instances/axios-instances';\r\n\r\nclass Wishlist extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       \r\n       allBook: []\r\n       \r\n    }\r\n  }\r\n  \r\n\r\n  componentDidMount() {    \r\n    this.getAllWish();\r\n    let user = JSON.parse( localStorage.getItem('user'))\r\n    const userToken = user.token;\r\n    console.log(userToken);\r\n  }\r\n  async getAllWish() {\r\n    let fetchBook = await Axios.get('/wishlist/getAll')\r\n    console.log(fetchBook);\r\n    this.setState({allBook: fetchBook.data})\r\n  }\r\n\r\n  render() {\r\n    const { allBook} = this.state\r\n\r\n    return (\r\n      <div className=\"content-wrapper\">\r\n        <section className=\"content\">        \r\n\r\n          {/* Top picks init */}\r\n          <div className=\"container-fluid book-list\">\r\n            <div className=\"list-book-content\">\r\n              <div className=\"col-12\">\r\n                <div className=\"custom-flex2\">\r\n                  <h2 className=\"title-container\">Wishlist Book</h2>\r\n                  <h4 className=\"title-container\">\r\n                    This is where your favorite book place\r\n                  </h4>\r\n                  <hr></hr>\r\n                </div>\r\n\r\n                  {allBook.map((data) => {\r\n                    console.log(data)\r\n                    return (\r\n                      \r\n                      <div className=\"panel-body wishlist-card\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-1\"><Link to={`/Detail/${data.bookEntity.bookId}`}><img src={data.bookEntity.imgDetail} alt=\"media-object\" className=\"img-fluid\" style={{borderRadius: \"5px\"}} /> </Link></div>\r\n                        <div className=\"col-md-11\">\r\n                          <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                             <Link to={`/Detail/${data.bookEntity.bookId}`}>\r\n                              <span><strong>{data.bookEntity.title}</strong></span>\r\n                              </Link>\r\n                              <span className=\"label label-info-custom\">{data.bookEntity.categoryEntity.category}</span>\r\n                              <br />\r\n                              <div className=\"book-description\">\r\n                                <br/>\r\n                                <span>{data.bookEntity.description}</span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <br></br>\r\n                    </div>\r\n                   \r\n                   \r\n                    )\r\n                  })}\r\n\r\n                <div className=\"books-nf\" style={{ display: 'none' }}>\r\n                  <h3 className=\"book-not-found\">Oops, Book Not Found</h3>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Top picks ends */}        \r\n        </section>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Wishlist;\r\n","C:\\Users\\ASUS\\maxwell-library-react\\src\\Components\\Datatable\\Cell.js",["169"],"import React, { Component } from 'react'\r\n\r\nexport default function Cell({\r\n    content,\r\n    header,\r\n  }) {\r\n  \r\n    const cellMarkup = header ? (\r\n      <th className=\"text-center text-nowwrap\">\r\n        {content}\r\n      </th>\r\n    ) : (\r\n        content\r\n    );\r\n  \r\n    return (cellMarkup);\r\n  }","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\FormInput.js",["170"],"import React from 'react';\r\nimport { FormGroup, FormText, Input, Label } from 'reactstrap';\r\nimport { MDBIcon } from \"mdbreact\";\r\n\r\nconst FormInput = ({\r\n  input,\r\n  label,\r\n  type,\r\n  inputPlaceHolder,\r\n  maxDate,\r\n  minDate,\r\n  meta: { touched,error }\r\n}) => (\r\n  <FormGroup>\r\n    <Label>{label}</Label>\r\n    <Input\r\n      {...input}\r\n      type={type}\r\n      placeholder={inputPlaceHolder}      \r\n    />\r\n    <div>    \r\n      {touched && error &&<span><MDBIcon icon=\"exclamation-circle\"/> {error}</span>}\r\n    </div>    \r\n  </FormGroup>\r\n);\r\n\r\nexport default FormInput;\r\n","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Detail\\Detail.js",["171","172","173","174","175","176","177","178","179","180","181","182","183","184","185"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\App.js",["186"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Navigations\\MainNavigations.js",["187","188"],"import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Footer from '../Screens/Footer/Footer'\r\nimport NavBar from '../Screens/NavBar/NavBar'\r\nimport SideBar from '../Screens/SideBar/SideBar'\r\nimport Profile from '../Screens/Contents/Profile/Profile'\r\nimport ChangePassword from '../Screens/Contents/Profile/ChangePassword'\r\nimport RentManagement from '../Screens/Contents/RentManagement/RentManagement'\r\nimport Home from '../Screens/Contents/Home/Home'\r\nimport Detail from '../Screens/Contents/Detail/Detail'\r\nimport Auth from '../Screens/Auth/Auth'\r\nimport TopUp from '../Screens/Contents/TopUp/TopUp'\r\nimport CategoryManagement from '../Screens/Contents/CategoryManagement/CategoryManagement'\r\nimport SlideShowManagement from '../Screens/Contents/SlideShowManagement/SlideShowManagement'\r\nimport Payment from '../Screens/Contents/Payment/Payment'\r\nimport PaymentInvoicePrint from \"../Screens/Contents/Payment/PaymentInvoicePrint\"\r\nimport PaymentInvoicePrintPaid from \"../Screens/Contents/Payment/PaymentInvoicePrintPaid\"\r\nimport History from '../Screens/Contents/History/History'\r\nimport TopUpManagement from \"../Screens/Contents/TopUpManagement/TopUpManagement\"\r\nimport AdminProfile from '../Screens/Contents/Profile/AdminProfile'\r\nimport UserManagement from '../Screens/Contents/UserManagement/UserManagement'\r\nimport BookManagement from '../Screens/Contents/BookManagement/BookManagement'\r\nimport FineManagement from '../Screens/Contents/FineManagement/FineManagement'\r\nimport DetailInvoice from '../Screens/Contents/DetailInvoice/DetailInvoice'\r\nimport ReturnBook from '../Screens/Contents/ReturnBook/ReturnBook'\r\nimport CheckReturnBook from '../Screens/Contents/ReturnBook/CheckReturnBook'\r\nimport PaymentDetail from '../Screens/Contents/Payment/PaymentDetail'\r\nimport DonationManagement from '../Screens/Contents/DonationManagement/DonationManagement'\r\nimport Donation from '../Screens/Contents/Donation/Donation'\r\nimport BookDetail from '../Screens/Contents/BookManagement/BookDetail'\r\nimport LogManagement from \"../Screens/Contents/LogManagement/LogManagement\";\r\nimport Author from \"../Screens/Contents/Author/Author\"\r\nimport Wishlist from \"../Screens/Contents/Wishlist/Wishlist\"\r\nimport Catalogue from '../Screens/Contents/Catalogue/Catalogue'\r\nimport PrivateRoute from './PrivateRoute'\r\nimport Search from '../Screens/Contents/Search/Search'\r\nimport AuthRoute from './AuthRoute'\r\nimport Axios from '../Instances/axios-instances';\r\n\r\n\r\nclass MainNavigation extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isAuthenticated :  localStorage.getItem('user')\r\n        };\r\n      }\r\n      interval = null;\r\n\r\n      componentDidMount() {\r\n        this.interval = setInterval(this.getBalance, 30000);\r\n        this.getBalance();\r\n      }\r\n  \r\n      componentWillUnmount() {\r\n         clearInterval(this.interval);\r\n      }\r\n      getBalance = () => {\r\n        if(JSON.parse(localStorage.getItem('user')) != null){\r\n            let user = JSON.parse(localStorage.getItem('user'))\r\n            Axios.get('top_up_management/getBalance')\r\n            .then((balance) => {\r\n                localStorage.setItem('balance', JSON.stringify(balance.data));\r\n            })\r\n        }else{\r\n            localStorage.setItem('balance', 0);\r\n        }\r\n      }\r\n\r\n    render() {\r\n        return ( <Router >\r\n                <Switch>\r\n                    <AuthRoute path='/auth'\r\n                    authenticated={this.state.isAuthenticated}\r\n                    component={Auth}>\r\n                    </AuthRoute>\r\n                    <Route path='/PaymentPrint'>\r\n                        <PaymentInvoicePrint />\r\n                    </Route>\r\n                    <Route exact path='/PaymentPrintPaid'>\r\n                        <PaymentInvoicePrintPaid />\r\n                    </Route>\r\n                    <Route path='/'>\r\n                            <NavBar />\r\n                            <SideBar />\r\n                            <Switch>\r\n                                <PrivateRoute exact path='/'\r\n                                authenticated={this.state.isAuthenticated}\r\n                                component={Home}>\r\n                                </PrivateRoute>\r\n                                <Route path='/Profile'>\r\n                                    <Profile />\r\n                                </Route>\r\n                                <Route path='/ChangePassword'>\r\n                                    <ChangePassword/>\r\n                                </Route>\r\n                                <Route path='/AdminProfile'>\r\n                                    <AdminProfile/>\r\n                                </Route>\r\n                                <Route path='/Detail/:bookId'>\r\n                                    <Detail />\r\n                                </Route>\r\n                                <Route path='/Search/:title'>\r\n                                    <Search />\r\n                                </Route>\r\n                                <Route path='/RentManagement'>\r\n                                    <RentManagement />\r\n                                </Route>\r\n                                <Route path='/Author'>\r\n                                    <Author />\r\n                                </Route>\r\n                                <Route path='/FineManagement'>\r\n                                    <FineManagement />\r\n                                </Route>\r\n                                <Route path='/TopUp'>\r\n                                    <TopUp />\r\n                                </Route>\r\n                                <Route path='/CategoryManagement'>\r\n                                    <CategoryManagement />\r\n                                </Route>\r\n                                <Route path='/Catalogue'>\r\n                                    <Catalogue />\r\n                                </Route>\r\n                                <Route path='/TopUpManagement'>\r\n                                    <TopUpManagement />\r\n                                </Route>\r\n                                <Route path='/SlideShowManagement'>\r\n                                    <SlideShowManagement />\r\n                                </Route>\r\n                                <Route path='/Payment/:invoiceId?'>\r\n                                    <Payment />\r\n                                </Route>\r\n                                <Route path='/Wishlist'>\r\n                                    <Wishlist/>\r\n                                </Route>\r\n                                <Route path='/PaymentDetail/:userId'>\r\n                                    <PaymentDetail />\r\n                                </Route>\r\n                                <Route path='/History'>\r\n                                    <History />\r\n                                </Route>\r\n                                <Route path='/usermanagement'>\r\n                                    <UserManagement />\r\n                                </Route>\r\n                                <Route path='/bookmanagement'>\r\n                                    <BookManagement />\r\n                                </Route>\r\n                                <Route path='/bookdetail/:bookId'>\r\n                                    <BookDetail />\r\n                                </Route>\r\n                                <Route path='/DetailInvoice/:invoiceId'>\r\n                                    <DetailInvoice />\r\n                                </Route>\r\n                                <Route path='/ReturnBook'>\r\n                                    <ReturnBook />\r\n                                </Route>\r\n                                <Route path='/CheckReturnBook'>\r\n                                    <CheckReturnBook />\r\n                                </Route>\r\n                                <Route path='/DonationManagement'>\r\n                                    <DonationManagement />\r\n                                </Route>\r\n                                 <Route path='/Donation'>\r\n                                    <Donation />\r\n                                </Route>\r\n                                <Route path='/LogManagement'>\r\n                                    <LogManagement />\r\n                                </Route>\r\n                            </Switch>\r\n                            <Footer />\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\nexport default MainNavigation\r\n",["189","190"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Footer\\Footer.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Payment\\PaymentInvoicePrint.js",["191"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUpManagement\\TopUpManagement.js",["192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\DetailInvoice\\DetailInvoice.js",["210","211"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Components\\Datepicker\\Dates.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Profile\\ChangePassword.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\CategoryManagement\\CategoryManagement.js",["212"],"import React, { Component } from \"react\";\r\nimport \"./customtable.css\";\r\nimport \"bootstrap\";\r\nimport DataTable from \"../../../Components/Datatable/Table\";\r\nimport Action from \"../../../Components/Datatable/Action\";\r\nimport $ from \"jquery\";\r\nimport \"bootstrap\";\r\nimport Swal from \"sweetalert2\";\r\nimport Axios from '../../../Instances/axios-instances';\r\n\r\nclass CategoryManagement extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      fields: [],\r\n      errors: {},\r\n      data: [],\r\n      rows: [],\r\n      results: [],\r\n    };\r\n\r\n    this.categoryChange = this.categoryChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  async fetchData() {\r\n    $('#example1').DataTable().destroy();\r\n    const results = [];\r\n    \r\n    var no = 1;\r\n\r\n    await Axios.get('/category/get-all-active')\r\n          .then((response) => {\r\n            const result = response.data;\r\n            this.setState({data: result})\r\n            result.map((category) => {\r\n              console.log(category)\r\n              var row = [];\r\n              row.push(<td className=\"text-center\">{no++}</td>);\r\n              row.push(\r\n                <td className=\"text-center py-0 align-middle\">\r\n                  <div className=\"btn-group btn-group-sm\">\r\n                    <Action\r\n                      type=\"success\"\r\n                      title=\"Edit\"\r\n                      icon=\"pen\"\r\n                      dataToggle=\"modal\"\r\n                      dataTarget=\"#modal-edit\"\r\n                      onClick={() => this.getCategory(category.categoryId)}\r\n                    />\r\n                    <Action\r\n                      type=\"danger\"\r\n                      title=\"Delete\"\r\n                      icon=\"trash\"\r\n                      dataToggle=\"modal\"\r\n                      dataTarget=\"#modal-delete\"\r\n                      onClick={() => this.getCategory(category.categoryId)}\r\n                    />\r\n                  </div>\r\n                </td>\r\n              );\r\n              row.push(<td>{category.categoryId}</td>);\r\n              row.push(<td>{category.category}</td>);\r\n              results.push(row);\r\n            })\r\n            this.setState({ rows: results });\r\n\r\n            $(\"#example1\").DataTable({\r\n              responsive: true,\r\n              autoWidth: false,\r\n              });\r\n          })\r\n  }\r\n\r\n  getCategory = (id) => {\r\n    Axios\r\n      .get(\"/category/get-by-id/\" + id)\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({\r\n          category: response.data.category,\r\n          categoryId: id,\r\n        });\r\n      });\r\n  };\r\n\r\n  updateCategory = (id) => {\r\n\r\n    const category = {\r\n      category: this.state.category,\r\n    };\r\n\r\n    console.log(category)\r\n\r\n    if(this.handleValidationUpdate()) {\r\n      Axios\r\n      .put(\"/category/update-category/\" + id, category)\r\n      .then((response) => {\r\n        console.log(response);\r\n        $(\"#modal-edit\").modal(\"toggle\");\r\n        $('.modal-backdrop').remove();\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          title: \"Success\",\r\n          text: \"Your Data has been Updated\",\r\n          confirmButtonText: `OK`,\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            this.fetchData()\r\n          }\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  handleValidationUpdate() {\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    if(this.state.category === \"\") {\r\n      formIsValid = false;\r\n      errors[\"categoryName\"] = \"Category cannot be empty\";\r\n    }\r\n\r\n    this.setState({errors: errors})\r\n    return formIsValid\r\n  }\r\n\r\n  deleteCategory = (id) => {\r\n    Axios\r\n      .put(\"/category/delete-category/\" + id)\r\n      .then((response) => {\r\n        console.log(response);\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          title: \"Success\",\r\n          text: \"Your Data has been Deleted\",\r\n          confirmButtonText: `OK`,\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            this.fetchData()\r\n          }\r\n        });\r\n      });\r\n  };\r\n\r\n  categoryChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  resetModal() {\r\n    let fields = this.state.fields;\r\n    let errors = {}\r\n    fields[\"CategoryName\"] = \"\";\r\n    errors[\"CategoryName\"] = \"\";\r\n\r\n    this.setState({fields: fields});\r\n    this.setState({errors: errors});\r\n  }\r\n\r\n  handleValidation() {\r\n    let fields = this.state.fields;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    //Category Name\r\n    if (!fields[\"CategoryName\"]) {\r\n      formIsValid = false;\r\n      errors[\"CategoryName\"] = \"Category Name cannot be empty\";\r\n    }\r\n\r\n    this.setState({ errors: errors });\r\n    return formIsValid;\r\n  }\r\n\r\n  contactSubmit(e) {\r\n    let fields = this.state.fields;\r\n    e.preventDefault();\r\n    if (this.handleValidation()) {\r\n      $(\"#modal-add\").modal(\"hide\");\r\n      $('.modal-backdrop').remove();\r\n      const category = {\r\n        category: fields[\"CategoryName\"],\r\n      };\r\n      console.log(category);\r\n      Axios\r\n        .post(\"/category/add-category\", category)\r\n        .then((response) => {\r\n          console.log(response);\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: \"Success\",\r\n            text: \"Your Data has been Added\",\r\n            confirmButtonText: `OK`,\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              this.fetchData()\r\n              this.resetModal()\r\n            }\r\n          });\r\n        })\r\n        .catch((error) =>\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Error\",\r\n            text: \"Category already exist!\",\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              $(\"#modal-add\").modal(\"toggle\");\r\n            }\r\n          })\r\n        );\r\n    }\r\n  }\r\n\r\n  handleChange(field, e) {\r\n    let fields = this.state.fields;\r\n    let errors = {}\r\n    errors[\"CategoryName\"] = \"\";\r\n    fields[field] = e.target.value;\r\n    this.setState({ fields });\r\n    this.setState({ errors: errors})\r\n  }\r\n\r\n  render() {\r\n    const { rows } = this.state;\r\n    const headings = [\"No\", \"Action\", \"Category ID(s)\", \"Category Name\"];\r\n    return (\r\n      <div className=\"content-wrapper\">\r\n        {/* <!-- Content Header (Page header) --> */}\r\n        <section className=\"content-header\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col-sm-6\">\r\n                <h3>Category Management</h3>\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <ol className=\"breadcrumb float-sm-right\">\r\n                  <li className=\"breadcrumb-item\">\r\n                    <a href=\"/\">Home</a>\r\n                  </li>\r\n                  <li className=\"breadcrumb-item active\">Category</li>\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* <!-- /.container-fluid --> */}\r\n        </section>\r\n\r\n        <section className=\"content pdg-btm\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12 ctm-responsive\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-primary add-btn\"\r\n                      data-toggle=\"modal\"\r\n                      data-target=\"#modal-add\"\r\n                      style={{ float: \"right\" }}\r\n                    >\r\n                      <i className=\"nav-icon fas fa-plus\"></i>\r\n                      &nbsp; Add Category\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card-body\">\r\n                <DataTable headings={headings} rows={rows} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* <!--Modal Add--> */}\r\n        <div className=\"modal fade\" id=\"modal-add\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Add Category</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <form id=\"addCategory\" onSubmit={this.contactSubmit.bind(this)}>\r\n                <div className=\"modal-body\">\r\n                  <div className=\"card-body\">\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"inputCategoryName\">Category Name <small className=\"red-asterisk\">*</small></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"inputCategoryName\"\r\n                        name=\"category\"\r\n                        placeholder=\"Enter Category\"\r\n                        onChange={this.handleChange.bind(this, \"CategoryName\")}\r\n                        value={this.state.fields[\"CategoryName\"]}\r\n                      />\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"CategoryName\"]}\r\n                      </span>\r\n                    </div>\r\n                    <small><span className=\"red-asterisk\">*</span> Required</small> \r\n                  </div>\r\n                  \r\n                </div>\r\n                <div className=\"modal-footer justify-content-between\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-default\"\r\n                    data-dismiss=\"modal\"\r\n                    onClick={() => this.resetModal()}\r\n                  >\r\n                    Close\r\n                  </button>\r\n                  <button type=\"submit\" className=\"btn btn-warning\">\r\n                    Add\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n\r\n        {/* <!--Modal Edit--> */}\r\n        <div className=\"modal fade\" id=\"modal-edit\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Edit Category</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <form id=\"editCategory\">\r\n                <div className=\"modal-body\">\r\n                  <div className=\"card-body\">\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"editCategoryName\">Category Name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"category\"\r\n                        id=\"editCategoryName\"\r\n                        value={this.state.category}\r\n                        onChange={this.categoryChange}\r\n                      />\r\n                      <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"categoryName\"]}\r\n                          </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer justify-content-between\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-default\"\r\n                    data-dismiss=\"modal\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => this.updateCategory(this.state.categoryId)}\r\n                    className=\"btn btn-warning\"\r\n                  >\r\n                    Save changes\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n\r\n        {/* <!--Modal Delete--> */}\r\n        <div className=\"modal fade\" id=\"modal-delete\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Delete Category</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                If you Delete this, you can't be returned\r\n              </div>\r\n              <div className=\"modal-footer justify-content-between\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-default\"\r\n                  data-dismiss=\"modal\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-warning\"\r\n                  data-dismiss=\"modal\"\r\n                  onClick={() => this.deleteCategory(this.state.categoryId)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CategoryManagement;\r\n","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\UserManagement\\UserManagement.js",["213","214","215","216"],"import React, { Component } from 'react';\r\nimport DataTable from '../../../Components/Datatable/Table';\r\nimport Status from '../../../Components/Datatable/Status';\r\nimport axios from 'axios';\r\nimport './UserManagement.style.css'\r\nimport { Link } from 'react-router-dom'\r\nimport $ from 'jquery';\r\nimport \"datatables.net-responsive/js/dataTables.responsive\"\r\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\r\nclass UserManagement extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: [],\r\n      rows: [],\r\n      results: [],\r\n      isLoading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchDataUser();\r\n  }\r\n\r\n  async fetchDataUser() {\r\n    let fetchedData = await axios.get(\r\n      'https://dummyapi.io/data/api/user?limit=100',\r\n      {\r\n        headers: {\r\n          'app-id': '5fb34a83ea9b56971e58ca12',\r\n        },\r\n      }\r\n    );\r\n\r\n    this.setState.isLoading = false;\r\n    const resultUser = fetchedData.data.data;\r\n    this.setState({ data: resultUser });\r\n    $('#example1').DataTable().destroy();\r\n    this.fetchData();\r\n    $(\"#example1\").DataTable({\r\n      responsive: true,\r\n      autoWidth: false,\r\n    });\r\n  }\r\n\r\n  fetchData() {\r\n    let results = [];\r\n    let result = this.state.data;\r\n    result.map((user) => {\r\n      this.setState({ isLoading: true });\r\n      let row = [];\r\n      let statusVal = '';\r\n      let actVal = (\r\n        <div className=\"btn-group btn-group-sm\">\r\n          <div className=\"input-group-prepend\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-default dropdown-toggle\"\r\n              data-toggle=\"dropdown\"\r\n            >\r\n              User\r\n            </button>\r\n            <div className=\"dropdown-menu\">\r\n              <a className=\"dropdown-item\" href=\"#\">\r\n                Librarian\r\n              </a>\r\n              <a className=\"dropdown-item\" href=\"#\">\r\n                Superadmin\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n      if (user.title == 'mr') {\r\n        statusVal = <Status type=\"success\" val=\"active\" />;\r\n      } else {\r\n        statusVal = <Status type=\"danger\" val=\"inactive\" />;\r\n      }\r\n\r\n      row.push(<td className=\"text-center\">{user.id}</td>);\r\n      row.push(\r\n        <td class=\"user-info\">\r\n          <img src={user.picture} alt=\"avatar\" />\r\n        </td>\r\n      );\r\n      row.push(\r\n        <td className=\"text-center\">{`${user.firstName} ${user.lastName}`}</td>\r\n      );\r\n      row.push(<td className=\"text-center\">{user.email}</td>);\r\n      row.push(<td className=\"text-center\">{statusVal}</td>);\r\n      row.push(<td className=\"text-center\">{user.title}</td>);\r\n      row.push(<td className=\"text-center\">{actVal}</td>);\r\n      results.push(row);\r\n    });\r\n    this.setState({ rows: results });\r\n    this.setState({ isLoading: false });\r\n  }\r\n\r\n  render() {\r\n    const { rows } = this.state;\r\n    const headings = [\r\n      'ID',\r\n      'Photo',\r\n      'Fullname',\r\n      'Email',\r\n      'Status',\r\n      'Last Activity',\r\n      'Level',\r\n    ];\r\n\r\n    return (\r\n      <div className=\"content-wrapper\">\r\n        <section className=\"content-header\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col-sm-6\">\r\n                <h1>User Management</h1>\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <ol className=\"breadcrumb float-sm-right\">\r\n                  <li className=\"breadcrumb-item\"><Link to=\"/index\">Home</Link></li>\r\n                  <li className=\"breadcrumb-item active\">User Management</li>\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/* Main content */}\r\n        <section className=\"content\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <div className=\"card\">\r\n                  {/* /.card-header */}\r\n                  <div className=\"card-body\">\r\n                    <DataTable headings={headings} rows={rows} />\r\n                    {/* /.card-body */}\r\n                  </div>\r\n                </div>\r\n                {/* /.card */}\r\n              </div>\r\n              {/* /.col */}\r\n            </div>\r\n            {/* /.row */}\r\n          </div>\r\n          {/* /.container-fluid */}\r\n        </section>\r\n        {/* /.content */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserManagement;\r\n","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\FineManagement\\FineManagement.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Catalogue\\Catalogue.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\Card.js",["217"],"import React, { Component } from 'react';\r\nimport './TopUp.style.css'\r\nimport Stepper from 'react-stepper-horizontal';\r\nimport TopUp1 from '../TopUp/TopUp1'\r\nimport TopUp2 from '../TopUp/TopUp2'\r\nimport TopUp3 from '../TopUp/TopUp3'\r\nimport TopUp4 from '../TopUp/TopUp4'\r\nimport {reset} from 'redux-form';\r\n\r\nclass Card extends Component {\r\n    \r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.nextPage = this.nextPage.bind(this);\r\n        this.previousPage = this.previousPage.bind(this);\r\n        this.state = {\r\n          page: 0,\r\n          steps: [\r\n            {title: 'Nominal'},\r\n            {title: 'Payment'},\r\n            {title: 'Confirm'},\r\n            {title: 'Password'},\r\n          ]\r\n        };\r\n      }    \r\n    \r\n      nextPage() {\r\n        this.setState({ page: this.state.page + 1 });\r\n      }\r\n    \r\n      previousPage() {\r\n        this.setState({ page: this.state.page - 1 });\r\n      }\r\n    render () {\r\n        const { onSubmit } = this.props;\r\n    const { page, steps } = this.state;\r\n    \r\n      return (\r\n        \r\n        <div className=\"content-wrapper ctm-wrap-tpup\">          \r\n        {/* {dispatch(reset('TopUpForm'))} */}\r\n        <section className=\"signup-step-container\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row justify-content-center\">\r\n              <div className=\"col-11 col-sm-9 col-md-7 col-lg-6 col-xl-5 text-center p-0 mt-3 mb-2\">\r\n                <div className=\"card px-4 pt-4 pb-4 mt-6 mb-6\">\r\n                  <h2 id=\"heading\">Top Up Your User Account</h2>\r\n                  <p>Fill all form field to go to next step</p>\r\n        <Stepper steps={ steps } activeStep={ page } />                               \r\n        {page === 0 && <TopUp1 onSubmit={this.nextPage}   /> }\r\n        {page === 1 && (\r\n          <TopUp2\r\n            previousPage={this.previousPage}\r\n            onSubmit={this.nextPage}\r\n          />\r\n        )}        \r\n        {page === 2 && (\r\n          <TopUp3\r\n            previousPage={this.previousPage}\r\n            onSubmit={this.nextPage}\r\n          />\r\n        )}\r\n        {page === 3 && (\r\n          <TopUp4\r\n            previousPage={this.previousPage}\r\n            onSubmit={onSubmit}\r\n          />\r\n        )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/* /.content */}\r\n      </div>\r\n      )\r\n    }\r\n  }\r\n  \r\n\r\nexport default Card;","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\Validate.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Profile\\AdminProfile.js",["218","219","220","221","222","223","224","225"],"import React, { Component, Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport avatarUser from '../../../Assets/Media/admin.png'\r\nimport swal from 'sweetalert'\r\n\r\n\r\nclass Profile extends Component {\r\n\r\n    displayEditForm() {\r\n        const editForm = document.querySelector('#container-editform');\r\n        editForm.style.display = 'block';\r\n\r\n    }\r\n\r\n    hiddenEditForm(){\r\n        const editForm = document.querySelector('#container-editform');\r\n        editForm.style.display = 'none';\r\n    }\r\n\r\n    submitEditProfile() {\r\n        const editButton = document.querySelector('button.edit-profile');\r\n        const editForm = document.querySelector('#container-editform');\r\n        const cancelForm = document.querySelector('.btn-editform button');\r\n        \r\n        editForm.style.display = 'none';\r\n    \r\n        var firstName = document.getElementById('user-firstname').value;\r\n        var lastName = document.getElementById('user-lastname').value;\r\n        var dateOfBirth = document.getElementById('date-birth').value;\r\n        var emailUser = document.getElementById('user-email').value;\r\n        var addressUser = document.getElementById('user-address').value;\r\n        var phoneNumber = document.getElementById('user-number').value;\r\n    \r\n        if (firstName == '' || lastName == '' || dateOfBirth == '' || emailUser == '' || addressUser == '' || phoneNumber == ''){\r\n                swal(\r\n                    'Submit Failed !',\r\n                    'You should fill in the blank',\r\n                    'error'\r\n                );\r\n                editForm.style.display = 'none';\r\n            }else{\r\n                swal(\r\n                    'Submitted !',\r\n                    'You clicked the button!',\r\n                    'success'\r\n                );\r\n    \r\n                document.getElementById('firstname').innerHTML = firstName;\r\n                document.getElementById('lastname').innerHTML = lastName;\r\n                document.getElementById('birthday').innerHTML = dateOfBirth;\r\n                document.getElementById('email').innerHTML = emailUser;\r\n                document.getElementById('address').innerHTML = addressUser;\r\n                document.getElementById('phonenumber').innerHTML = phoneNumber;\r\n                \r\n            }\r\n    \r\n    }\r\n    render(){\r\n        return(\r\n            <Fragment>\r\n            <div className=\"content-wrapper\">\r\n                <section className=\"content-user\">\r\n                    <div className=\"container-profile\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <div className=\"profile-account\">\r\n                                    <div className=\"picture\">\r\n                                        <img src={avatarUser} alt=\"Admin Profile\" width='300' height='300'/>\r\n                                    </div>\r\n                                    <button \r\n                                    type=\"button\" \r\n                                    className=\"btn btn-primary edit-profile\"\r\n                                    name=\"editProfile\"\r\n                                    onClick={() => this.displayEditForm()}\r\n                                    >\r\n                                    Edit Profile\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        \r\n                        </div>\r\n                        <h1 className=\"title-profile\">\r\n                        My Profile\r\n                        </h1>\r\n                        <div className=\"data-user\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-6\">\r\n                                <div className=\"data\">\r\n                                    <h5 >Full Name</h5>\r\n                                    <span id=\"firstname\">Admin</span>\r\n                                    <hr/>\r\n                                </div>\r\n                                <div className=\"data\">\r\n                                    <h5 >ID Admin</h5>\r\n                                    <span id=\"lastname\">01</span>\r\n                                    <hr/>\r\n                                </div>\r\n                                <div className=\"data\">\r\n                                    <h5>Date of Birth</h5>\r\n                                    <span id=\"birthday\">19/06/2020</span>\r\n                                    <hr/>\r\n                                </div>\r\n                                <div className=\"data\">\r\n                                    <h5>Address</h5>\r\n                                    <span id=\"address\">Indonesia</span>\r\n                                    <hr/>\r\n                                </div>\r\n                                </div>\r\n                                <div className=\"col-lg-6\">\r\n                                <div className=\"data\">\r\n                                    <h5>Email</h5>\r\n                                    <span id=\"email\">example@gmail.com</span>\r\n                                    <hr/>\r\n                                </div>\r\n                                <div className=\"data\">\r\n                                    <h5 >Phone Number</h5>\r\n                                    <span id=\"phonenumber\">+628123456789</span>\r\n                                    <hr/>\r\n                                </div>\r\n                                <div className=\"data\">\r\n                                    {/* <a href=\"change_password.html\"><strong><u>Change Password</u></strong></a> */}\r\n                                    <Link to='/ChangePassword'>Change Password</Link>\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>  \r\n                    </div>\r\n                </section>\r\n\r\n                {/* Edit Form  */}\r\n                <section className=\"padding-editform\">\r\n                <div id=\"container-editform\">\r\n                <h3 style={{textAlign: 'center'}}>Edit Admin Profile</h3>\r\n                    <div className=\"form-item\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-8\">\r\n                        <label className=\"input-title\">Full Name</label>\r\n                        </div>\r\n                        <div className=\"col-lg-12\">\r\n                        <input className=\"input-value\" id=\"user-firstname\" type=\"text\" name=\"user-firstname\"/>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-item\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-8\">\r\n                        <label className=\"input-title\">ID Admin</label>\r\n                        </div>\r\n                        <div className=\"col-lg-12\">\r\n                        <input className=\"input-value\" id=\"user-lastname\" type=\"text\" name=\"user-lastname\"/>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-item\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-8\">\r\n                        <label className=\"input-title\">Date of Birth</label>\r\n                        </div>\r\n                        <div className=\"col-lg-12\">\r\n                        <input className=\"input-value\" id=\"date-birth\" type=\"text\" name=\"date-birth\" placeholder=\"dd/mm/yyyy\"/>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-item\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-8\">\r\n                        <label className=\"input-title\">Address</label>\r\n                        </div>\r\n                        <div className=\"col-lg-12\">\r\n                        <input className=\"input-value\" id=\"user-address\" type=\"text\" name=\"user-address\"/>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-item\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-8\">\r\n                        <label className=\"input-title\">Email</label>\r\n                        </div>\r\n                        <div className=\"col-lg-12\">\r\n                        <input className=\"input-value\" id=\"user-email\" type=\"email\" name=\"user-email\" placeholder=\"example@gmail.com\"/>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-item\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-8\">\r\n                        <label className=\"input-title\">Phone Number</label>\r\n                        </div>\r\n                        <div className=\"col-lg-12\">\r\n                        <input className=\"input-value\" id=\"user-number\" type=\"text\" name=\"user-number\" placeholder=\"+62-812-345-6789\"/>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"btn-editform\">\r\n                    <input className=\"btn btn-primary mr-2\" type=\"submit\" value=\"Submit\" onClick={()=> this.submitEditProfile()}/>\r\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={() => this.hiddenEditForm()}>Close</button>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            </div>\r\n            </Fragment>\r\n\r\n        )\r\n    }\r\n}\r\nexport default Profile","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Payment\\PaymentInvoicePrintPaid.js",["226"],"import React, { Component } from \"react\";\r\nimport MaxIcon from '../../Auth/Assets/Images/bookshelf.png'\r\n\r\nclass PaymentInvoicePrintPaid extends Component {\r\n  \r\n  componentDidMount() {\r\n    window.addEventListener(\"load\", window.print());\r\n  }  \r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <section className=\"invoice\">\r\n          {/* <!-- title row --> */}\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <h4>\r\n                <img\r\n                  src={MaxIcon}\r\n                  style={{height: \"2rem\"}}\r\n                />{\" \"}\r\n                Maxwell Library\r\n                <small className=\"float-right\">Date: 19/11/2020</small>\r\n              </h4>\r\n            </div>\r\n            {/* <!-- /.col --> */}\r\n          </div>\r\n          {/* <!-- info row --> */}\r\n          <div className=\"row invoice-info\">\r\n            <div className=\"col-sm-4 invoice-col\">\r\n              From\r\n              <address>\r\n                <strong>Maxwell Library</strong>\r\n                <br />\r\n                795 Folsom Ave, Suite 600\r\n                <br />\r\n                San Francisco, CA 94107\r\n                <br />\r\n                Phone: (804) 123-5432\r\n                <br />\r\n                Email: maxwell@library.com\r\n              </address>\r\n            </div>\r\n            {/* <!-- /.col --> */}\r\n            <div className=\"col-sm-4 invoice-col\">\r\n              To\r\n              <address>\r\n                <strong>Niki Zefanya</strong>\r\n                <br />\r\n                795 Folsom Ave, Suite 600\r\n                <br />\r\n                San Francisco, CA 94107\r\n                <br />\r\n                Phone: (555) 539-1037\r\n                <br />\r\n                Email: john.doe@example.com\r\n              </address>\r\n            </div>\r\n            {/* <!-- /.col --> */}\r\n            <div className=\"col-sm-4 invoice-col\">\r\n              <b>Invoice #007612</b>\r\n              <br /><br/>\r\n             <h2><font color=\"green\">PAID</font></h2>\r\n            </div>\r\n            {/* <!-- /.col --> */}\r\n          </div>\r\n          {/* <!-- /.row --> */}\r\n\r\n          {/* <!-- Table row --> */}\r\n          <div className=\"row\">\r\n            <div className=\"col-12 table-responsive\">\r\n              <table className=\"table table-striped\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>No.</th>\r\n                    <th>Book Title</th>\r\n                    <th>Borrowed On</th>\r\n                    <th>Due On</th>\r\n                    <th>Late By</th>\r\n                    <th>Fine Amount</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>1</td>\r\n                    <td>Dilan 1990</td>\r\n                    <td>16/11/2020</td>\r\n                    <td>18/11/2020</td>\r\n                    <td>2 Days</td>\r\n                    <td>Rp. 10.000</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>2</td>\r\n                    <td>Harry Potter</td>\r\n                    <td>16/11/2020</td>\r\n                    <td>18/11/2020</td>\r\n                    <td>2 Days</td>\r\n                    <td>Rp. 10.000</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            {/* <!-- /.col --> */}\r\n          </div>\r\n          {/* <!-- /.row --> */}\r\n\r\n          <div className=\"row\">\r\n            {/* <!-- accepted payments column --> */}\r\n            <div className=\"col-6\"></div>\r\n            {/* <!-- /.col --> */}\r\n            <div className=\"col-6\">\r\n              <p className=\"lead\" style={{float:\"right\"}}>\r\n                Amount Due 25/11/2020\r\n              </p>\r\n\r\n              <div className=\"table-responsive\">\r\n                <table className=\"table\">\r\n                  <tr>\r\n                    <th style={{width:\"50%\"}}>Subtotal:</th>\r\n                    <td>Rp. 20.000</td>\r\n                  </tr>\r\n                </table>\r\n              </div>\r\n            </div>\r\n            {/* <!-- /.col --> */}\r\n          </div>\r\n          {/* <!-- /.row --> */}\r\n\r\n          {/* <!-- /.row --> */}\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PaymentInvoicePrintPaid;\r\n","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Profile\\Profile.js",["227"],"import React, { Component, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport axios from '../../../Instances/axios-instances';\r\nimport moment from 'moment';\r\nimport dayjs from 'dayjs';\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.submitUpdateProfile = this.submitUpdateProfile.bind(this);\r\n    this.state = {\r\n      firstname: '',\r\n      lastname: '',\r\n      datebirth: '',\r\n      email: '',\r\n      address: '',\r\n      number: '',\r\n      img: '',\r\n      balance: '',\r\n\r\n      profileimage: '',\r\n      updateFirstName: '',\r\n      updateLastName: '',\r\n      updateBirthDate: '',\r\n      updateAddress: '',\r\n      updatePhoneNumber: '',\r\n\r\n      dataLogUser : [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchDataUser();\r\n    this.getLogUser();\r\n  }\r\n\r\n  handleChangeProfile(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    console.log(this.state);\r\n  }\r\n\r\n  handleAddFile(e) {\r\n    this.getBase64(e.target.files[0]).then((data) =>\r\n      this.setState({\r\n        [e.target.name]: data.split(',').pop(),\r\n      })\r\n    );\r\n  }\r\n\r\n  getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n  }\r\n\r\n  submitUpdateProfile(e) {\r\n    e.preventDefault();\r\n\r\n    let {\r\n      profileimage,\r\n      updateFirstName,\r\n      updateLastName,\r\n      updateBirthDate,\r\n      updateAddress,\r\n      updatePhoneNumber,\r\n    } = this.state;\r\n\r\n    let postData = {\r\n      firstName: updateFirstName,\r\n      lastName: updateLastName,\r\n      address: updateAddress,\r\n      phoneNumber: updatePhoneNumber,\r\n      dateOfBirth: updateBirthDate,\r\n      img: profileimage,\r\n    };\r\n\r\n    axios\r\n      .post('profile', postData)\r\n      .then(() => {\r\n        this.hiddenEditForm();\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Update Profile Success!',\r\n          showCancelButton: false,\r\n          text: 'Update profile succes',\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            this.fetchDataUser();\r\n          }\r\n        });\r\n      })\r\n      .catch((error) =>\r\n        Swal.fire('Update Failed !', 'Incorrect parameter', 'error')\r\n      );\r\n  }\r\n\r\n  async fetchDataUser() {\r\n    let balance = JSON.parse(localStorage.getItem('balance'));\r\n    let date = null\r\n    await axios\r\n      .get('/profile')\r\n      .then((response) => {\r\n        const dataProfile = response.data;\r\n\r\n        if(dataProfile.dateOfBirth) {\r\n          date = new Date(dataProfile.dateOfBirth).toISOString().slice(0, 10);\r\n        }\r\n\r\n        this.setState({\r\n          firstname: dataProfile.firstName,\r\n          lastname: dataProfile.lastName,\r\n          img: dataProfile.img,\r\n          email: dataProfile.email,\r\n          balance: balance,\r\n          address: dataProfile.address,\r\n          datebirth: date,\r\n          number: dataProfile.phoneNumber,\r\n        });\r\n\r\n        this.setState({\r\n          updateFirstName: this.state.firstname,\r\n          updateLastName: this.state.lastname,\r\n          updateBirthDate: this.state.datebirth,\r\n          updateAddress: this.state.address,\r\n          updatePhoneNumber: this.state.number,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  async getLogUser() {\r\n      let fetchLogUser = await axios.get('log/get-log-user')\r\n      this.setState({ dataLogUser : fetchLogUser.data});\r\n      console.log(this.state.dataLogUser);\r\n  }\r\n\r\n\r\n  displayEditForm() {\r\n    const editForm = document.querySelector('#container-editform');\r\n    editForm.style.display = 'block';\r\n  }\r\n\r\n  hiddenEditForm() {\r\n    const editForm = document.querySelector('#container-editform');\r\n    editForm.style.display = 'none';\r\n  }\r\n\r\n  submitEditProfile() {\r\n    const editForm = document.querySelector('#container-editform');\r\n\r\n    editForm.style.display = 'none';\r\n\r\n    var firstName = document.getElementById('user-firstname').value;\r\n    var lastName = document.getElementById('user-lastname').value;\r\n    var dateOfBirth = document.getElementById('date-birth').value;\r\n    var emailUser = document.getElementById('user-email').value;\r\n    var addressUser = document.getElementById('user-address').value;\r\n    var phoneNumber = document.getElementById('user-number').value;\r\n\r\n    if (\r\n      firstName === '' ||\r\n      lastName === '' ||\r\n      dateOfBirth === '' ||\r\n      emailUser === '' ||\r\n      addressUser === '' ||\r\n      phoneNumber === ''\r\n    ) {\r\n      Swal.fire('Submit Failed !', 'You should fill in the blank', 'error');\r\n      editForm.style.display = 'none';\r\n    } else {\r\n      Swal.fire('Submitted !', 'You clicked the button!', 'success');\r\n\r\n      document.getElementById('firstname').innerHTML = firstName;\r\n      document.getElementById('lastname').innerHTML = lastName;\r\n      document.getElementById('birthday').innerHTML = dateOfBirth;\r\n      document.getElementById('email').innerHTML = emailUser;\r\n      document.getElementById('address').innerHTML = addressUser;\r\n      document.getElementById('phonenumber').innerHTML = phoneNumber;\r\n    }\r\n  }\r\n\r\n  convertToTime = (date) => {\r\n    if (date === null) {\r\n        return \"-\"\r\n    } else {\r\n        return moment.utc(date).format('HH:mm')\r\n    }\r\n  }\r\n\r\n  convertToDate = (date) => {\r\n    if (date === null) {\r\n        return \"-\"\r\n    } else {\r\n        return moment.utc(date).format('MMM Do, YYYY')\r\n    }\r\n  }\r\n\r\n  dateLog = (date) => {\r\n    var relativeTime = require('dayjs/plugin/relativeTime');\r\n    dayjs.extend(relativeTime);\r\n\r\n    if (date === null) {\r\n      return \"-\"\r\n    } else {\r\n        return dayjs().to(dayjs(date));\r\n    }\r\n  }\r\n  render() {\r\n\r\n    const { dataLogUser } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <section className=\"content-user\">\r\n            <div className=\"container-profile\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-12\">\r\n                  <div className=\"profile-account\">\r\n                    <div className=\"picture\">\r\n                      <img\r\n                        src={this.state.img}\r\n                        className=\"img-circle elevation-2 profile-img-custom\"\r\n                        style={{ height: '100px' }}\r\n                        alt=\"avatarUser\"\r\n                      />\r\n                    </div>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-primary edit-profile\"\r\n                      name=\"editProfile\"\r\n                      onClick={() => this.displayEditForm()}\r\n                    >\r\n                      Edit Profile\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <h1 className=\"title-profile\">My Profile</h1>\r\n              <div className=\"data-user\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-6\">\r\n                    <div className=\"data\">\r\n                      <h5>First Name</h5>\r\n                      <span id=\"firstname\">{this.state.firstname}</span>\r\n                      <hr />\r\n                    </div>\r\n                    <div className=\"data\">\r\n                      <h5>Last Name</h5>\r\n                      <span id=\"lastname\">{this.state.lastname}</span>\r\n                      <hr />\r\n                    </div>\r\n                    <div className=\"data\">\r\n                      <h5>Date of Birth</h5>\r\n                      <span id=\"birthday\">{this.state.datebirth}</span>\r\n                      <hr />\r\n                    </div>\r\n                    <div className=\"data\">\r\n                      <h5>Address</h5>\r\n                      <span id=\"address\">{this.state.address}</span>\r\n                      <hr />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-lg-6\">\r\n                    <div className=\"data\">\r\n                      <h5>Email</h5>\r\n                      <span id=\"email\">{this.state.email}</span>\r\n                      <hr />\r\n                    </div>\r\n                    <div className=\"data\">\r\n                      <h5>Phone Number</h5>\r\n                      <span id=\"phonenumber\">{this.state.number}</span>\r\n                      <hr />\r\n                    </div>\r\n                    <div className=\"data\">\r\n                      <h5>Your Balance</h5>\r\n                      <span id=\"mybalance\">{`Rp. ${this.state.balance},-`}</span>\r\n                      <hr />\r\n                    </div>\r\n                    <div className=\"data\">\r\n                      {/* <a href=\"change_password.html\"><strong><u>Change Password</u></strong></a> */}\r\n                      <Link to=\"/ChangePassword\">Change Password</Link>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>             \r\n        \r\n          {/* Edit Form  */}\r\n          <section className=\"padding-editform\">\r\n            <div id=\"container-editform\">\r\n              <h3 style={{ textAlign: 'center' }}>Edit Your Profile</h3>\r\n              <form onSubmit={this.submitUpdateProfile}>\r\n                <div className=\"form-item\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-8\">\r\n                      <label className=\"input-title\">Profile Image</label>\r\n                    </div>\r\n                    <div className=\"col-lg-12\">\r\n                      <input\r\n                        className=\"input-value\"\r\n                        id=\"user-image\"\r\n                        type=\"file\"\r\n                        accept=\"image/*\"\r\n                        name=\"profileimage\"\r\n                        onChange={this.handleAddFile.bind(this)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-item\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-8\">\r\n                      <label className=\"input-title\">First Name</label>\r\n                    </div>\r\n                    <div className=\"col-lg-12\">\r\n                      <input\r\n                        className=\"input-value\"\r\n                        id=\"user-firstname\"\r\n                        type=\"text\"\r\n                        name=\"updateFirstName\"\r\n                        placeholder=\"Input firstname\"\r\n                        value={this.state.updateFirstName}\r\n                        onChange={this.handleChangeProfile.bind(this)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-item\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-8\">\r\n                      <label className=\"input-title\">Last Name</label>\r\n                    </div>\r\n                    <div className=\"col-lg-12\">\r\n                      <input\r\n                        value={this.state.updateLastName}\r\n                        className=\"input-value\"\r\n                        id=\"user-lastname\"\r\n                        type=\"text\"\r\n                        name=\"updateLastName\"\r\n                        placeholder=\"Input lastname\"\r\n                        onChange={this.handleChangeProfile.bind(this)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-item\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-8\">\r\n                      <label className=\"input-title\">Date of Birth</label>\r\n                    </div>\r\n                    <div className=\"col-lg-12 input-group date\">\r\n                      <input\r\n                        value={this.state.updateBirthDate}\r\n                        className=\"input-value\"\r\n                        id=\"date-birth\"\r\n                        type=\"date\"\r\n                        min='1900-01-01'\r\n                        max='2015-12-12'\r\n                        name=\"updateBirthDate\"\r\n                        onChange={this.handleChangeProfile.bind(this)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-item\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-8\">\r\n                      <label className=\"input-title\">Address</label>\r\n                    </div>\r\n                    <div className=\"col-lg-12\">\r\n                      <input\r\n                        value={this.state.updateAddress}\r\n                        className=\"input-value\"\r\n                        id=\"user-address\"\r\n                        type=\"text\"\r\n                        name=\"updateAddress\"\r\n                        placeholder=\"Input address\"\r\n                        onChange={this.handleChangeProfile.bind(this)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-item\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-8\">\r\n                      <label className=\"input-title\">Phone Number</label>\r\n                    </div>\r\n                    <div className=\"col-lg-12\">\r\n                      <input\r\n                        value={this.state.updatePhoneNumber}\r\n                        className=\"input-value\"\r\n                        id=\"user-number\"\r\n                        type=\"text\"\r\n                        name=\"updatePhoneNumber\"\r\n                        placeholder=\"0858868999\"\r\n                        onChange={this.handleChangeProfile.bind(this)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"btn-editform\">\r\n                  <input\r\n                    className=\"btn btn-primary mr-2\"\r\n                    type=\"submit\"\r\n                    value=\"Submit\"\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={() => this.hiddenEditForm()}\r\n                  >\r\n                    Close\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </section>\r\n        \r\n        {/* Log Activity User */}\r\n        <section className = \"content-user\" sytle={{ margin : \"20px\"}}>\r\n          <h3 className=\"logTitle\" style={{ paddingLeft : \"20px\"}}>Your Activity</h3>\r\n        {dataLogUser.map((data) => {\r\n          return(\r\n            /* timeline */\r\n            <div className=\"row\" style={{marginLeft : \"20px\", paddingBottom :\"0px\", marginBottom : \"0px\"}}>\r\n              <div className=\"col-md-12\" style={{paddingBottom : \"0px\", marginBottom : \"0px\"}}>\r\n                <div className=\"timeline\" style={{marginBottom : \"0px\"}}>\r\n                  {/* timeline-label */}\r\n                    <div className=\"time-label\" style={{marginTop : \"0px\"}}>\r\n                      {/* <span className=\"bg-read\">{this.convertToDate(data.dateTime)}</span> */}\r\n                    </div>\r\n                \r\n                    <div>\r\n                      <i className=\"fas fa-user bg-green\"></i>\r\n                      <div className=\"timeline-item\">\r\n                        <span className=\"time\"><i class=\"fas fa-clock\"></i> {this.dateLog(data.dateTime)}</span>\r\n                        <small style={{ margin : \"10px\"}}>Your Activity : {data.action}</small>\r\n                        <h3 className=\"timeline-header no-border\" style={{ marginTop : \"0px\"}}><a href=\"#\">{data.name}</a> - {data.description}</h3>\r\n                      </div>\r\n                    </div>\r\n\r\n                                 \r\n                </div>\r\n              </div>\r\n            </div>\r\n          )\r\n        })}\r\n\r\n        </section>\r\n        \r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Profile;\r\n","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\DonationManagement\\DonationManagement.js",["228","229","230"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\ReturnBook\\CheckReturnBook.js",["231","232","233","234","235","236","237","238"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Author\\Author.js",["239","240","241"],"import React, { Component } from \"react\";\r\nimport \"./customtable.css\";\r\nimport \"bootstrap\";\r\nimport DataTable from \"../../../Components/Datatable/Table\";\r\nimport Action from \"../../../Components/Datatable/Action\";\r\nimport $ from \"jquery\";\r\nimport \"bootstrap\";\r\nimport Swal from \"sweetalert2\";\r\nimport Axios from '../../../Instances/axios-instances';\r\n\r\nclass Author extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      fields: [],\r\n      errors: {},\r\n      data: [],\r\n      rows: [],\r\n      results: [],\r\n    };\r\n\r\n    this.authorChange = this.authorChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  async fetchData() {\r\n    $('#example1').DataTable().destroy();\r\n    const results = [];\r\n    \r\n    var no = 1;\r\n\r\n    await Axios.get('/author/getAll')\r\n          .then((response) => {\r\n            const result = response.data;\r\n            this.setState({data: result})\r\n            result.map((author) => {\r\n              console.log(author)\r\n              var row = [];\r\n              row.push(<td className=\"text-center\">{no++}</td>);\r\n              row.push(\r\n                <td className=\"text-center py-0 align-middle\">\r\n                  <div className=\"btn-group btn-group-sm\">\r\n                    <Action\r\n                      type=\"success\"\r\n                      title=\"Edit\"\r\n                      icon=\"pen\"\r\n                      dataToggle=\"modal\"\r\n                      dataTarget=\"#modal-edit\"\r\n                      onClick={() => this.getAuthor(author.authorId)}\r\n                    />\r\n                    <Action\r\n                      type=\"danger\"\r\n                      title=\"Delete\"\r\n                      icon=\"trash\"\r\n                      dataToggle=\"modal\"\r\n                      dataTarget=\"#modal-delete\"\r\n                      onClick={() => this.getAuthor(author.authorId)}\r\n                    />\r\n                  </div>\r\n                </td>\r\n              );              \r\n              row.push(<td>{author.authorName}</td>);\r\n              results.push(row);\r\n            })\r\n            this.setState({ rows: results });\r\n\r\n            $(\"#example1\").DataTable({\r\n              responsive: true,\r\n              autoWidth: false,\r\n              });\r\n          })\r\n  }\r\n\r\n  getAuthor(id) {    \r\n    let errors = {}    \r\n    errors[\"AuthorName\"] = \"\";\r\n    this.setState({errors: errors});\r\n    \r\n    Axios\r\n      .get(\"/author/getid/\" + id)\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({\r\n          authorName: response.data.authorName,\r\n          authorId: id,\r\n          name: response.data.authorName\r\n        });\r\n      });      \r\n  };\r\n\r\n  updateAuthor = (id) => {\r\n    var name=this.state.name\r\n    console.log(name)\r\n    const author = {\r\n      authorName: this.state.authorName,\r\n\r\n    };\r\n    console.log(author.authorName)\r\n    console.log(author)\r\n    if(this.handleValidationUpdate()) {\r\n    Axios\r\n      .get(\"/author/getAuthor/\" + author.authorName)\r\n      .then((response) => {\r\n        const result2= response.data;\r\n        Axios\r\n      .get(\"/author/getCount/\" + id)\r\n      .then((response) => {\r\n        console.log(response);\r\n        if(author.authorName==name){\r\n          Swal.fire({\r\n            icon: \"warning\",\r\n            title: \"Warning\",\r\n            text: \"You Enter the same Name\",\r\n            confirmButtonText: `OK`,\r\n          })\r\n        } else if(author.authorName==result2){\r\n          Swal.fire({\r\n            icon: \"warning\",\r\n            title: \"Warning\",\r\n            text: \"Name Already saved\",\r\n            confirmButtonText: `OK`,\r\n          })\r\n        } else if(response.data>0){\r\n          Swal.fire({\r\n            icon: \"warning\",\r\n            title: \"Warning\",\r\n            text: \"You can't update Data already used\",\r\n            confirmButtonText: `OK`,\r\n          })\r\n        } else{\r\n          Axios\r\n        .put(\"/author/update/\" + id, author)\r\n        .then((response) => {\r\n          console.log(response);\r\n          $(\"#modal-edit\").modal(\"toggle\");\r\n          $('.modal-backdrop').remove();\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: \"Success\",\r\n            text: \"Your Data has been Updated\",\r\n            confirmButtonText: `OK`,\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              this.fetchData()\r\n            }\r\n          });\r\n        });\r\n        }\r\n      });\r\n        \r\n        console.log(result2)\r\n         \r\n          \r\n         \r\n      })\r\n    }\r\n  };\r\n\r\n  handleValidationUpdate() {\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    if(this.state.authorName === \"\") {\r\n      formIsValid = false;\r\n      errors[\"AuthorName\"] = \"Author Name cannot be empty\";\r\n    }\r\n\r\n    this.setState({errors: errors})\r\n    return formIsValid\r\n  }\r\n\r\n  deleteAuthor = (id) => {\r\n    Axios\r\n      .get(\"/author/getCount/\" + id)\r\n      .then((response) => {\r\n        console.log(response);\r\n         if(response.data>0){\r\n          Swal.fire({\r\n            icon: \"warning\",\r\n            title: \"Warning\",\r\n            text: \"You can't delete Data already used\",\r\n            confirmButtonText: `OK`,\r\n          })\r\n        } else{\r\n          Axios\r\n          .put(\"/author/delete/\" + id)\r\n          .then((response) => {\r\n            console.log(response);\r\n            Swal.fire({\r\n              icon: \"success\",\r\n              title: \"Success\",\r\n              text: \"Your Data has been Deleted\",\r\n              confirmButtonText: `OK`,\r\n            }).then((result) => {\r\n              if (result.isConfirmed) {\r\n                this.fetchData()\r\n              }\r\n            });\r\n          });\r\n        }\r\n      });\r\n    \r\n  };\r\n\r\n  authorChange = (event) => {    \r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });    \r\n  };\r\n\r\n  resetModal() {\r\n    let fields = this.state.fields;\r\n    let errors = {}\r\n    fields[\"AuthorName\"] = \"\";\r\n    errors[\"AuthorName\"] = \"\";\r\n\r\n    this.setState({fields: fields});\r\n    this.setState({errors: errors});\r\n  }\r\n\r\n  handleValidation() {\r\n    let fields = this.state.fields;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    //Author Name\r\n    if (!fields[\"AuthorName\"]) {\r\n      formIsValid = false;\r\n      errors[\"AuthorName\"] = \"Author Name cannot be empty\";\r\n    }   \r\n\r\n    this.setState({ errors: errors });\r\n    return formIsValid;\r\n  }\r\n\r\n  contactSubmit(e) {\r\n    let fields = this.state.fields;\r\n    e.preventDefault();\r\n    if (this.handleValidation()) {\r\n      $(\"#modal-add\").modal(\"hide\");\r\n      $('.modal-backdrop').remove();\r\n      const author = {\r\n        authorName: fields[\"AuthorName\"],\r\n      };      \r\n      console.log(author)\r\n      Axios\r\n        .post(\"/author/post\", author)\r\n        .then((response) => {\r\n          console.log(response);\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: \"Success\",\r\n            text: \"Your Data has been Added\",\r\n            confirmButtonText: `OK`,\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              this.fetchData()\r\n              this.resetModal()\r\n            }\r\n          });\r\n        })\r\n        .catch((error) =>\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Error\",\r\n            text: \"Author already exist!\",\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              $(\"#modal-add\").modal(\"toggle\");\r\n            }\r\n          })\r\n        );\r\n    }\r\n  }\r\n\r\n  handleChange(field, e) {\r\n    let fields = this.state.fields;\r\n    let errors = {}\r\n    errors[\"AuthorName\"] = \"\";\r\n    fields[field] = e.target.value;\r\n    this.setState({ fields });\r\n    this.setState({ errors: errors})\r\n  }\r\n\r\n  render() {\r\n    const { rows } = this.state;\r\n    const headings = [\"No\", \"Action\", \"Author Name\"];\r\n    return (\r\n      <div className=\"content-wrapper\">\r\n        {/* <!-- Content Header (Page header) --> */}\r\n        <section className=\"content-header\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col-sm-6\">\r\n                <h3>Author Management</h3>\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <ol className=\"breadcrumb float-sm-right\">\r\n                  <li className=\"breadcrumb-item\">\r\n                    <a href=\"/\">Home</a>\r\n                  </li>\r\n                  <li className=\"breadcrumb-item active\">Author</li>\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* <!-- /.container-fluid --> */}\r\n        </section>\r\n\r\n        <section className=\"content pdg-btm\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12 ctm-responsive\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-primary add-btn\"\r\n                      data-toggle=\"modal\"\r\n                      data-target=\"#modal-add\"\r\n                      onClick={()=>{this.resetModal()}}\r\n                      style={{ float: \"right\" }}\r\n                    >\r\n                      <i className=\"nav-icon fas fa-plus\"></i>\r\n                      &nbsp; Add Author\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card-body\">\r\n                <DataTable headings={headings} rows={rows} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* <!--Modal Add--> */}\r\n        <div className=\"modal fade\" id=\"modal-add\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Add Author</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <form id=\"addAuthor\" onSubmit={this.contactSubmit.bind(this)}>\r\n                <div className=\"modal-body\">\r\n                  <div className=\"card-body\">\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"inputAuthorName\">Author Name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"inputAuthorName\"\r\n                        name=\"author\"\r\n                        placeholder=\"Enter Author Name\"\r\n                        onChange={this.handleChange.bind(this, \"AuthorName\")}\r\n                        value={this.state.fields[\"AuthorName\"]}\r\n                      />\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"AuthorName\"]}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer justify-content-between\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-default\"\r\n                    data-dismiss=\"modal\"\r\n                    onClick={() => this.resetModal()}\r\n                  >\r\n                    Close\r\n                  </button>\r\n                  <button type=\"submit\" className=\"btn btn-warning\">\r\n                    Add\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n\r\n        {/* <!--Modal Edit--> */}\r\n        <div className=\"modal fade\" id=\"modal-edit\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Edit Author</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <form id=\"editAuthor\">\r\n                <div className=\"modal-body\">\r\n                  <div className=\"card-body\">\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"editAuthorName\">Author Name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"authorName\"\r\n                        id=\"editAuthorName\"\r\n                        value={this.state.authorName}\r\n                        onChange={this.authorChange}\r\n                      />\r\n                      <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"AuthorName\"]}\r\n                          </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer justify-content-between\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-default\"\r\n                    data-dismiss=\"modal\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => this.updateAuthor(this.state.authorId)}\r\n                    className=\"btn btn-warning\"\r\n                  >\r\n                    Save changes\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n\r\n        {/* <!--Modal Delete--> */}\r\n        <div className=\"modal fade\" id=\"modal-delete\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Delete Author</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                If you Delete this, you can't be returned\r\n              </div>\r\n              <div className=\"modal-footer justify-content-between\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-default\"\r\n                  data-dismiss=\"modal\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-warning\"\r\n                  data-dismiss=\"modal\"\r\n                  onClick={() => this.deleteAuthor(this.state.authorId)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Author;\r\n",{"ruleId":"242","severity":1,"message":"243","line":46,"column":35,"nodeType":"244","messageId":"245","endLine":46,"endColumn":37},{"ruleId":"246","severity":1,"message":"247","line":206,"column":13,"nodeType":"248","messageId":"249","endLine":206,"endColumn":29},{"ruleId":"250","severity":1,"message":"251","line":208,"column":70,"nodeType":"252","messageId":"253","endLine":208,"endColumn":72},{"ruleId":"254","replacedBy":"255"},{"ruleId":"256","replacedBy":"257"},{"ruleId":"246","severity":1,"message":"258","line":2,"column":28,"nodeType":"248","messageId":"249","endLine":2,"endColumn":39},{"ruleId":"246","severity":1,"message":"259","line":4,"column":9,"nodeType":"248","messageId":"249","endLine":4,"endColumn":13},{"ruleId":"260","severity":1,"message":"261","line":30,"column":17,"nodeType":"262","endLine":30,"endColumn":168},{"ruleId":"260","severity":1,"message":"261","line":44,"column":17,"nodeType":"262","endLine":44,"endColumn":168},{"ruleId":"260","severity":1,"message":"261","line":66,"column":21,"nodeType":"262","endLine":66,"endColumn":91},{"ruleId":"246","severity":1,"message":"263","line":3,"column":8,"nodeType":"248","messageId":"249","endLine":3,"endColumn":17},{"ruleId":"246","severity":1,"message":"264","line":4,"column":8,"nodeType":"248","messageId":"249","endLine":4,"endColumn":19},{"ruleId":"246","severity":1,"message":"265","line":5,"column":8,"nodeType":"248","messageId":"249","endLine":5,"endColumn":17},{"ruleId":"246","severity":1,"message":"266","line":73,"column":74,"nodeType":"248","messageId":"249","endLine":73,"endColumn":88},{"ruleId":"246","severity":1,"message":"267","line":5,"column":8,"nodeType":"248","messageId":"249","endLine":5,"endColumn":13},{"ruleId":"254","replacedBy":"268"},{"ruleId":"256","replacedBy":"269"},{"ruleId":"242","severity":1,"message":"243","line":65,"column":29,"nodeType":"244","messageId":"245","endLine":65,"endColumn":31},{"ruleId":"246","severity":1,"message":"263","line":2,"column":8,"nodeType":"248","messageId":"249","endLine":2,"endColumn":17},{"ruleId":"246","severity":1,"message":"264","line":3,"column":8,"nodeType":"248","messageId":"249","endLine":3,"endColumn":19},{"ruleId":"246","severity":1,"message":"265","line":4,"column":8,"nodeType":"248","messageId":"249","endLine":4,"endColumn":17},{"ruleId":"246","severity":1,"message":"270","line":5,"column":8,"nodeType":"248","messageId":"249","endLine":5,"endColumn":16},{"ruleId":"246","severity":1,"message":"271","line":1,"column":17,"nodeType":"248","messageId":"249","endLine":1,"endColumn":26},{"ruleId":"246","severity":1,"message":"272","line":2,"column":21,"nodeType":"248","messageId":"249","endLine":2,"endColumn":29},{"ruleId":"246","severity":1,"message":"273","line":12,"column":10,"nodeType":"248","messageId":"249","endLine":12,"endColumn":17},{"ruleId":"250","severity":1,"message":"251","line":69,"column":49,"nodeType":"252","messageId":"253","endLine":69,"endColumn":51},{"ruleId":"274","severity":1,"message":"275","line":75,"column":11,"nodeType":"248","messageId":"276","endLine":75,"endColumn":17},{"ruleId":"250","severity":1,"message":"251","line":95,"column":25,"nodeType":"252","messageId":"253","endLine":95,"endColumn":27},{"ruleId":"277","severity":1,"message":"278","line":96,"column":64,"nodeType":"279","messageId":"253","endLine":96,"endColumn":69},{"ruleId":"277","severity":1,"message":"278","line":98,"column":65,"nodeType":"279","messageId":"253","endLine":98,"endColumn":70},{"ruleId":"250","severity":1,"message":"251","line":197,"column":24,"nodeType":"252","messageId":"253","endLine":197,"endColumn":26},{"ruleId":"250","severity":1,"message":"251","line":240,"column":33,"nodeType":"252","messageId":"253","endLine":240,"endColumn":35},{"ruleId":"246","severity":1,"message":"280","line":344,"column":11,"nodeType":"248","messageId":"249","endLine":344,"endColumn":17},{"ruleId":"250","severity":1,"message":"251","line":359,"column":30,"nodeType":"252","messageId":"253","endLine":359,"endColumn":32},{"ruleId":"246","severity":1,"message":"281","line":447,"column":52,"nodeType":"248","messageId":"249","endLine":447,"endColumn":56},{"ruleId":"246","severity":1,"message":"282","line":447,"column":57,"nodeType":"248","messageId":"249","endLine":447,"endColumn":68},{"ruleId":"283","severity":1,"message":"284","line":463,"column":21,"nodeType":"262","endLine":463,"endColumn":104},{"ruleId":"283","severity":1,"message":"284","line":470,"column":23,"nodeType":"262","endLine":470,"endColumn":77},{"ruleId":"260","severity":1,"message":"285","line":549,"column":21,"nodeType":"262","endLine":549,"endColumn":157},{"ruleId":"246","severity":1,"message":"286","line":4,"column":8,"nodeType":"248","messageId":"249","endLine":4,"endColumn":19},{"ruleId":"246","severity":1,"message":"287","line":2,"column":35,"nodeType":"248","messageId":"249","endLine":2,"endColumn":43},{"ruleId":"246","severity":1,"message":"288","line":62,"column":17,"nodeType":"248","messageId":"249","endLine":62,"endColumn":21},{"ruleId":"254","replacedBy":"289"},{"ruleId":"256","replacedBy":"290"},{"ruleId":"283","severity":1,"message":"284","line":18,"column":17,"nodeType":"262","endLine":21,"endColumn":19},{"ruleId":"246","severity":1,"message":"259","line":4,"column":10,"nodeType":"248","messageId":"249","endLine":4,"endColumn":14},{"ruleId":"246","severity":1,"message":"291","line":5,"column":8,"nodeType":"248","messageId":"249","endLine":5,"endColumn":12},{"ruleId":"246","severity":1,"message":"273","line":11,"column":10,"nodeType":"248","messageId":"249","endLine":11,"endColumn":17},{"ruleId":"246","severity":1,"message":"286","line":13,"column":8,"nodeType":"248","messageId":"249","endLine":13,"endColumn":19},{"ruleId":"277","severity":1,"message":"292","line":28,"column":7,"nodeType":"279","messageId":"253","endLine":28,"endColumn":11},{"ruleId":"250","severity":1,"message":"251","line":46,"column":25,"nodeType":"252","messageId":"253","endLine":46,"endColumn":27},{"ruleId":"250","severity":1,"message":"251","line":171,"column":31,"nodeType":"252","messageId":"253","endLine":171,"endColumn":33},{"ruleId":"250","severity":1,"message":"251","line":178,"column":38,"nodeType":"252","messageId":"253","endLine":178,"endColumn":40},{"ruleId":"250","severity":1,"message":"251","line":200,"column":15,"nodeType":"252","messageId":"253","endLine":200,"endColumn":17},{"ruleId":"250","severity":1,"message":"251","line":220,"column":25,"nodeType":"252","messageId":"253","endLine":220,"endColumn":27},{"ruleId":"250","severity":1,"message":"251","line":232,"column":26,"nodeType":"252","messageId":"253","endLine":232,"endColumn":28},{"ruleId":"250","severity":1,"message":"251","line":280,"column":15,"nodeType":"252","messageId":"253","endLine":280,"endColumn":17},{"ruleId":"250","severity":1,"message":"251","line":331,"column":26,"nodeType":"252","messageId":"253","endLine":331,"endColumn":28},{"ruleId":"246","severity":1,"message":"288","line":386,"column":35,"nodeType":"248","messageId":"249","endLine":386,"endColumn":39},{"ruleId":"260","severity":1,"message":"261","line":411,"column":19,"nodeType":"262","endLine":411,"endColumn":167},{"ruleId":"293","severity":1,"message":"294","line":427,"column":17,"nodeType":"262","endLine":431,"endColumn":18},{"ruleId":"260","severity":1,"message":"261","line":586,"column":19,"nodeType":"262","endLine":586,"endColumn":145},{"ruleId":"293","severity":1,"message":"294","line":599,"column":17,"nodeType":"262","endLine":603,"endColumn":18},{"ruleId":"250","severity":1,"message":"295","line":61,"column":25,"nodeType":"252","messageId":"253","endLine":61,"endColumn":27},{"ruleId":"283","severity":1,"message":"284","line":70,"column":37,"nodeType":"262","endLine":70,"endColumn":85},{"ruleId":"242","severity":1,"message":"243","line":40,"column":35,"nodeType":"244","messageId":"245","endLine":40,"endColumn":37},{"ruleId":"242","severity":1,"message":"243","line":49,"column":23,"nodeType":"244","messageId":"245","endLine":49,"endColumn":25},{"ruleId":"260","severity":1,"message":"261","line":64,"column":15,"nodeType":"262","endLine":64,"endColumn":53},{"ruleId":"260","severity":1,"message":"261","line":67,"column":15,"nodeType":"262","endLine":67,"endColumn":53},{"ruleId":"250","severity":1,"message":"251","line":74,"column":22,"nodeType":"252","messageId":"253","endLine":74,"endColumn":24},{"ruleId":"246","severity":1,"message":"296","line":8,"column":9,"nodeType":"248","messageId":"249","endLine":8,"endColumn":14},{"ruleId":"246","severity":1,"message":"297","line":21,"column":15,"nodeType":"248","messageId":"249","endLine":21,"endColumn":25},{"ruleId":"246","severity":1,"message":"298","line":23,"column":15,"nodeType":"248","messageId":"249","endLine":23,"endColumn":25},{"ruleId":"250","severity":1,"message":"251","line":34,"column":23,"nodeType":"252","messageId":"253","endLine":34,"endColumn":25},{"ruleId":"250","severity":1,"message":"251","line":34,"column":41,"nodeType":"252","messageId":"253","endLine":34,"endColumn":43},{"ruleId":"250","severity":1,"message":"251","line":34,"column":62,"nodeType":"252","messageId":"253","endLine":34,"endColumn":64},{"ruleId":"250","severity":1,"message":"251","line":34,"column":81,"nodeType":"252","messageId":"253","endLine":34,"endColumn":83},{"ruleId":"250","severity":1,"message":"251","line":34,"column":102,"nodeType":"252","messageId":"253","endLine":34,"endColumn":104},{"ruleId":"250","severity":1,"message":"251","line":34,"column":123,"nodeType":"252","messageId":"253","endLine":34,"endColumn":125},{"ruleId":"283","severity":1,"message":"284","line":18,"column":17,"nodeType":"262","endLine":21,"endColumn":19},{"ruleId":"260","severity":1,"message":"261","line":453,"column":96,"nodeType":"262","endLine":453,"endColumn":108},{"ruleId":"246","severity":1,"message":"299","line":5,"column":13,"nodeType":"248","messageId":"249","endLine":5,"endColumn":18},{"ruleId":"246","severity":1,"message":"300","line":5,"column":20,"nodeType":"248","messageId":"249","endLine":5,"endColumn":25},{"ruleId":"246","severity":1,"message":"301","line":51,"column":9,"nodeType":"248","messageId":"249","endLine":51,"endColumn":11},{"ruleId":"242","severity":1,"message":"243","line":29,"column":50,"nodeType":"244","messageId":"245","endLine":29,"endColumn":52},{"ruleId":"242","severity":1,"message":"243","line":43,"column":50,"nodeType":"244","messageId":"245","endLine":43,"endColumn":52},{"ruleId":"242","severity":1,"message":"243","line":64,"column":50,"nodeType":"244","messageId":"245","endLine":64,"endColumn":52},{"ruleId":"250","severity":1,"message":"251","line":100,"column":41,"nodeType":"252","messageId":"253","endLine":100,"endColumn":43},{"ruleId":"250","severity":1,"message":"251","line":114,"column":78,"nodeType":"252","messageId":"253","endLine":114,"endColumn":80},{"ruleId":"250","severity":1,"message":"295","line":115,"column":19,"nodeType":"252","messageId":"253","endLine":115,"endColumn":21},{"ruleId":"250","severity":1,"message":"251","line":126,"column":101,"nodeType":"252","messageId":"253","endLine":126,"endColumn":103},{"ruleId":"250","severity":1,"message":"295","line":214,"column":18,"nodeType":"252","messageId":"253","endLine":214,"endColumn":20},{"ruleId":"242","severity":1,"message":"243","line":40,"column":33,"nodeType":"244","messageId":"245","endLine":40,"endColumn":35},{"ruleId":"250","severity":1,"message":"251","line":113,"column":29,"nodeType":"252","messageId":"253","endLine":113,"endColumn":31},{"ruleId":"250","severity":1,"message":"251","line":120,"column":36,"nodeType":"252","messageId":"253","endLine":120,"endColumn":38},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'statusBookDetail' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["302"],"no-negated-in-lhs",["303"],"'useCallback' is defined but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'firstHero' is defined but never used.","'secondtHero' is defined but never used.","'thirdHero' is defined but never used.","'recommendedCat' is assigned a value but never used.","'Axios' is defined but never used.",["302"],["303"],"'Flickity' is defined but never used.","'Component' is defined but never used.","'FormText' is defined but never used.","'MDBIcon' is defined but never used.","no-redeclare","'status' is already defined.","redeclared","no-dupe-keys","Duplicate key 'role2'.","ObjectExpression","'config' is assigned a value but never used.","'star' is assigned a value but never used.","'description' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'AuthService' is defined but never used.","'Redirect' is defined but never used.","'user' is assigned a value but never used.",["302"],["303"],"'Card' is defined but never used.","Duplicate key 'data'.","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","Expected '!==' and instead saw '!='.","'reset' is defined but never used.","'editButton' is assigned a value but never used.","'cancelForm' is assigned a value but never used.","'error' is defined but never used.","'event' is defined but never used.","'no' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]