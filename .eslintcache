[{"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\BookManagement\\BookDetail.js":"1","C:\\Users\\ASUS\\maxwell-library-react\\src\\index.js":"2","C:\\Users\\ASUS\\maxwell-library-react\\src\\reportWebVitals.js":"3","C:\\Users\\ASUS\\maxwell-library-react\\src\\Services\\auth.service.js":"4","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\NavBar\\NavBar.js":"5","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Home\\Home.js":"6","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\TopUp.js":"7","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\BookManagement\\BookManagement.js":"8","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Wishlist\\Wishlist.js":"9","C:\\Users\\ASUS\\maxwell-library-react\\src\\Components\\Datatable\\Cell.js":"10","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\FormInput.js":"11","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Detail\\Detail.js":"12","C:\\Users\\ASUS\\maxwell-library-react\\src\\App.js":"13","C:\\Users\\ASUS\\maxwell-library-react\\src\\Navigations\\MainNavigations.js":"14","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Footer\\Footer.js":"15","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Payment\\PaymentInvoicePrint.js":"16","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUpManagement\\TopUpManagement.js":"17","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\DetailInvoice\\DetailInvoice.js":"18","C:\\Users\\ASUS\\maxwell-library-react\\src\\Components\\Datepicker\\Dates.js":"19","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Profile\\ChangePassword.js":"20","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\CategoryManagement\\CategoryManagement.js":"21","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\UserManagement\\UserManagement.js":"22","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\FineManagement\\FineManagement.js":"23","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Catalogue\\Catalogue.js":"24","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\Card.js":"25","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\Validate.js":"26","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Profile\\AdminProfile.js":"27","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Payment\\PaymentInvoicePrintPaid.js":"28","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Profile\\Profile.js":"29","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\DonationManagement\\DonationManagement.js":"30","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\ReturnBook\\CheckReturnBook.js":"31","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Author\\Author.js":"32"},{"size":19493,"mtime":1610447289135,"results":"33","hashOfConfig":"34"},{"size":937,"mtime":1609682650008,"results":"35","hashOfConfig":"34"},{"size":375,"mtime":1606198920915,"results":"36","hashOfConfig":"34"},{"size":1195,"mtime":1610359212744,"results":"37","hashOfConfig":"34"},{"size":3815,"mtime":1610092736195,"results":"38","hashOfConfig":"34"},{"size":8411,"mtime":1610370345907,"results":"39","hashOfConfig":"34"},{"size":573,"mtime":1610077835713,"results":"40","hashOfConfig":"34"},{"size":32075,"mtime":1610447289136,"results":"41","hashOfConfig":"34"},{"size":3382,"mtime":1610464006578,"results":"42","hashOfConfig":"34"},{"size":300,"mtime":1610259575640,"results":"43","hashOfConfig":"34"},{"size":574,"mtime":1609910917430,"results":"44","hashOfConfig":"34"},{"size":24024,"mtime":1610466800379,"results":"45","hashOfConfig":"34"},{"size":282,"mtime":1609682650000,"results":"46","hashOfConfig":"34"},{"size":8651,"mtime":1610464005288,"results":"47","hashOfConfig":"34"},{"size":519,"mtime":1606198920912,"results":"48","hashOfConfig":"34"},{"size":4202,"mtime":1606455043006,"results":"49","hashOfConfig":"34"},{"size":28344,"mtime":1610423824954,"results":"50","hashOfConfig":"34"},{"size":11635,"mtime":1610464005811,"results":"51","hashOfConfig":"34"},{"size":1475,"mtime":1610259575656,"results":"52","hashOfConfig":"34"},{"size":10606,"mtime":1609682650005,"results":"53","hashOfConfig":"34"},{"size":14203,"mtime":1610447289138,"results":"54","hashOfConfig":"34"},{"size":4502,"mtime":1610464006429,"results":"55","hashOfConfig":"34"},{"size":8698,"mtime":1610464005877,"results":"56","hashOfConfig":"34"},{"size":6708,"mtime":1610447289137,"results":"57","hashOfConfig":"34"},{"size":2440,"mtime":1610083686068,"results":"58","hashOfConfig":"34"},{"size":1069,"mtime":1609905735501,"results":"59","hashOfConfig":"34"},{"size":9745,"mtime":1606392264711,"results":"60","hashOfConfig":"34"},{"size":4270,"mtime":1606455043006,"results":"61","hashOfConfig":"34"},{"size":16243,"mtime":1610447289139,"results":"62","hashOfConfig":"34"},{"size":6975,"mtime":1610464005876,"results":"63","hashOfConfig":"34"},{"size":18501,"mtime":1610464006221,"results":"64","hashOfConfig":"34"},{"size":14957,"mtime":1610469466364,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},"11ui09a",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"69"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"69"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"69"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"69"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"69"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"69"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\BookManagement\\BookDetail.js",["142","143","144"],"import React, { Component } from \"react\";\r\nimport DataTable from \"../../../Components/Datatable/Table\";\r\nimport Action from \"../../../Components/Datatable/Action\";\r\nimport $ from \"jquery\";\r\nimport \"datatables.net-responsive/js/dataTables.responsive\";\r\nimport \"datatables.net-dt/css/jquery.dataTables.css\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Axios from '../../../Instances/axios-instances';\r\n\r\nclass BookDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      bookId: \"\",\r\n      fields: {},\r\n      errors: {},\r\n      data: [],\r\n      rows: [],\r\n      results: [],\r\n      title: \"\",\r\n      statusBookDetail: \"Available\"\r\n    };\r\n\r\n    this.detailBookChange = this.detailBookChange.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    const bookId = this.props.match.params.bookId;\r\n    console.log(bookId);\r\n    this.fetchData(bookId);\r\n  }\r\n\r\n  async fetchData(bookId) {\r\n    $('#example1').DataTable().destroy();\r\n    let results = [];\r\n\r\n    var no = 1;\r\n\r\n    await Axios.get(`/book-detail/get-by-book-id/${bookId}`)\r\n        .then((response) => {\r\n          const result = response.data;\r\n          this.setState({data: result})\r\n\r\n          result.map((detailBook) => {\r\n            let row = [];\r\n\r\n            row.push(<td className=\"text-center\">{no++}</td>);\r\n            row.push(\r\n              <td className=\"text-center py-0 align-middle\">\r\n                <div className=\"btn-group btn-group-sm\">\r\n                  <Action\r\n                    type=\"success\"\r\n                    title=\"Edit\"\r\n                    icon=\"pen\"\r\n                    dataToggle=\"modal\"\r\n                    dataTarget=\"#modal-edit\"\r\n                    onClick = {() => this.getDetailBook(detailBook.bookDetailId)}\r\n                  />\r\n                  <Action\r\n                    type=\"danger\"\r\n                    title=\"Delete\"\r\n                    icon=\"trash\"\r\n                    dataToggle=\"modal\"\r\n                    dataTarget=\"#modal-delete\"\r\n                    onClick = {() => this.getDetailBook(detailBook.bookDetailId)}\r\n                  />\r\n                </div>\r\n              </td>\r\n            );\r\n            row.push(<td className=\"text-center\">{detailBook.bookDetailCode}</td>);\r\n            row.push(<td className=\"text-center\">{detailBook.typeOfDamage}</td>);\r\n            row.push(<td className=\"text-center\">{detailBook.descOfDamage}</td>);\r\n            row.push(<td className=\"text-center\">{detailBook.statusBookDetail}</td>);\r\n            this.setState({ title: detailBook.bookEntity.title})\r\n            results.push(row);                        \r\n          })\r\n           this.setState({ rows: results });\r\n\r\n           $(\"#example1\").DataTable({\r\n            responsive: true,\r\n            autoWidth: false,\r\n            });\r\n\r\n            Axios.get('/book-detail/get-book-detail-count/Available/' + bookId)\r\n                  .then((response) => {\r\n                    console.log(response.data)\r\n\r\n                    const count = {\r\n                      qty: response.data\r\n                    }\r\n\r\n                    Axios.put(\"/book/update-qty-book/\" + bookId, count)\r\n                    .then((response) => {\r\n                      console.log(response)\r\n                    })  \r\n\r\n                  })  \r\n        })\r\n  }\r\n\r\n  resetModal() {\r\n    let fields = this.state.fields\r\n    fields[\"typeOfDamage\"] = \"\"\r\n    fields[\"descOfDamage\"] = \"\"\r\n\r\n    this.setState({fields: fields})\r\n  }\r\n\r\n  handleChange(field, e) {\r\n      let fields = this.state.fields\r\n      let errors = {}\r\n      errors[\"typeOfDamage\"] = \"\"\r\n      fields[field] = e.target.value\r\n      this.setState({fields})\r\n      this.setState({errors: errors})\r\n      console.log(this.state.fields)\r\n  }\r\n\r\n  detailBookChange = (event) => {\r\n      this.setState({\r\n          [event.target.name]: event.target.value\r\n      })\r\n  }\r\n\r\n  updateDetailBook = (id) => {\r\n      const detailBook = {\r\n          typeOfDamage: this.state.typeOfDamage,\r\n          descOfDamage: this.state.descOfDamage,\r\n          statusBookDetail: this.state.statusBookDetail,\r\n          bookId: this.props.match.params.bookId\r\n      }\r\n\r\n      Axios.put('/book-detail/update-detail/' + id, detailBook)\r\n        .then((response) => {\r\n            console.log(response)\r\n            $(\"#modal-edit\").modal(\"toggle\");\r\n            $('.modal-backdrop').remove();\r\n            Swal.fire({\r\n              icon: \"success\",\r\n              title: \"Success\",\r\n              text: \"Your Data has been Updated\",\r\n              confirmButtonText: `OK`,\r\n            }).then((result) => {\r\n              if (result.isConfirmed) {\r\n                this.fetchData(this.props.match.params.bookId)\r\n              }\r\n            });\r\n        })\r\n  }\r\n\r\n  deleteDetailBook = (id) => {\r\n    Axios.put('/book-detail/delete-detail/' + id)\r\n    .then((response) => {\r\n      console.log(response)\r\n      Swal.fire({\r\n        icon: \"success\",\r\n        title: \"Success\",\r\n        text: \"Your Data has been Deleted\",\r\n        confirmButtonText: `OK`,\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          this.fetchData(this.props.match.params.bookId)\r\n        }\r\n      });\r\n    })\r\n  }\r\n\r\n  getDetailBook = (id) => {\r\n      Axios.get(\"/book-detail/get-detail-book/\" + id)\r\n        .then((response) => {\r\n            console.log(response)\r\n            this.setState({\r\n                typeOfDamage: response.data.typeOfDamage,\r\n                descOfDamage: response.data.descOfDamage,\r\n                bookDetailId: id,\r\n                statusBookDetail: response.data.statusBookDetail\r\n            })\r\n        })\r\n  }\r\n\r\n  handleValidation() {\r\n      let fields = this.state.fields\r\n      let errors = {}\r\n      let formIsValid = true\r\n\r\n      // Type of Damage\r\n      if(!fields[\"typeOfDamage\"]) {\r\n          formIsValid = false\r\n          errors[\"typeOfDamage\"] = \"Type of Damage cannot be empty\"\r\n      }\r\n\r\n      this.setState({ errors: errors})\r\n      return formIsValid\r\n  }\r\n\r\n  contactSubmit(e) {\r\n      let fields = this.state.fields\r\n      e.preventDefault()\r\n      if(this.handleValidation()) {\r\n        $(\"#modal-add\").modal(\"toggle\")\r\n        $('.modal-backdrop').remove();\r\n\r\n        let descOfDamage;\r\n        let statusBookDetail;\r\n\r\n        if(document.getElementById(\"inputDescofDamage\").value.length == 0) {\r\n          descOfDamage = \"-\"\r\n        } else {\r\n          descOfDamage = fields[\"descOfDamage\"]\r\n        }\r\n\r\n        const detailBook = {\r\n            typeOfDamage: fields[\"typeOfDamage\"],\r\n            descOfDamage: descOfDamage,\r\n            statusBookDetail: this.state.statusBookDetail,\r\n            bookId: this.props.match.params.bookId\r\n        }\r\n\r\n        console.log(detailBook)\r\n\r\n        Axios.post(\"/book-detail/add-detail\", detailBook)\r\n            .then((response)=> {\r\n                console.log(response)\r\n                Swal.fire({\r\n                  icon: \"success\",\r\n                  title: \"Success\",\r\n                  text: \"Your Data has been Added\",\r\n                  confirmButtonText: `OK`,\r\n                }).then((result) => {\r\n                  if (result.isConfirmed) {\r\n                    this.fetchData(this.props.match.params.bookId)\r\n                    this.resetModal()\r\n                  }\r\n                });\r\n            })\r\n      } else {\r\n\r\n      }\r\n  }\r\n\r\n  render() {\r\n    const { rows } = this.state;\r\n    const headings = [\r\n      \"No.\",\r\n      \"Action\",\r\n      \"Book Detail ID\",\r\n      \"Type of Damage\",\r\n      \"Description\",\r\n      \"Status\"\r\n    ];\r\n\r\n    return (\r\n      <div className=\"content-wrapper\">\r\n        <section className=\"content-header\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col-sm-6\">\r\n                <h1>Detail Book</h1>\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <ol className=\"breadcrumb float-sm-right\">\r\n                  <li className=\"breadcrumb-item\">\r\n                    <Link to=\"/\">Home</Link>\r\n                  </li>\r\n                  <li className=\"breadcrumb-item\">\r\n                    <Link to='/BookManagement'>Book Management</Link>\r\n                  </li>\r\n                  <li className=\"breadcrumb-item active\">Detail Book</li>\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/* Main content */}\r\n        <section className=\"content\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-6 ctm-responsive\">\r\n                          <h3>{this.state.title}</h3>\r\n                      </div>\r\n                      <div className=\"col-md-6 ctm-responsive\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary add-btn\"\r\n                          data-toggle=\"modal\"\r\n                          data-target=\"#modal-add\"\r\n                          style={{ float: \"right\" }}\r\n                        >\r\n                          <i className=\"nav-icon fas fa-plus\"></i>\r\n                          &nbsp; Add Detail\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  {/* /.card-header */}\r\n                  <div className=\"card-body\">\r\n                    <DataTable headings={headings} rows={rows} />\r\n                    {/* /.card-body */}\r\n                  </div>\r\n                </div>\r\n                {/* /.card */}\r\n              </div>\r\n              {/* /.col */}\r\n            </div>\r\n            {/* /.row */}\r\n          </div>\r\n          {/* /.container-fluid */}\r\n        </section>\r\n        {/* /.content */}\r\n\r\n        {/* <!--Modal Add--> */}\r\n        <div className=\"modal fade\" id=\"modal-add\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Add Detail</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <form\r\n                id=\"addBookDetail\"\r\n                onSubmit={this.contactSubmit.bind(this)}\r\n              >\r\n                <div className=\"modal-body\">\r\n                  <div className=\"card-body\">\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"inputTypeofDamage\">Type of Damage <small className=\"red-asterisk\">*</small></label>\r\n                      <select\r\n                        name=\"typeOfDamage\"\r\n                        className=\"form-control\"\r\n                        id=\"inputTypeofDamage\"\r\n                        value={this.state.fields[\"typeOfDamage\"]}\r\n                        onChange={this.handleChange.bind(this, \"typeOfDamage\")}\r\n                      >\r\n                        <option value=\"null\">Choose Type of Damage</option>\r\n                        <option value=\"No Damage\">No Damage</option>\r\n                        <option value=\"Minor\">Minor</option>\r\n                        <option value=\"Major\">Major</option>\r\n                      </select>\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"typeOfDamage\"]}\r\n                      </span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"inputDescofDamage\">Description</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"inputDescofDamage\"\r\n                        name=\"descOfDamage\"\r\n                        placeholder=\"Enter Description of Damage\"\r\n                        onChange={this.handleChange.bind(this, \"descOfDamage\")}\r\n                        value={this.state.fields[\"descOfDamage\"]}\r\n                      />\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"descOfDamage\"]}\r\n                      </span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"inputStatusBookDetail\">Status</label>\r\n                      <select\r\n                        name=\"statusBookDetail\"\r\n                        className=\"form-control\"\r\n                        id=\"inputStatusBookDetail\"\r\n                        value={this.state.statusBookDetail}\r\n                        onChange={this.detailBookChange}\r\n                      >\r\n                        <option value=\"Available\" selected>Available</option>\r\n                        <option value=\"Unavailable\">Unavailable</option>\r\n                      </select>\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"statusBookDetail\"]}\r\n                      </span>\r\n                    </div>\r\n\r\n                    <small><span className=\"red-asterisk\">*</span> Required</small> \r\n\r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer justify-content-between\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-default\"\r\n                    data-dismiss=\"modal\"\r\n                    onClick={() => this.resetModal()}\r\n                  >\r\n                    Close\r\n                  </button>\r\n                  <button type=\"submit\" className=\"btn btn-warning\">\r\n                    Add\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n\r\n        {/* <!--Modal Edit--> */}\r\n        <div className=\"modal fade\" id=\"modal-edit\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Edit Detail Book</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <form id=\"editDetailBook\">\r\n                <div className=\"modal-body\">\r\n                  <div className=\"card-body\">\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"editTypeOfDamage\">Type of Damage</label>\r\n                      <select\r\n                        name=\"typeOfDamage\"\r\n                        className=\"form-control\"\r\n                        id=\"editTypeOfDamage\"\r\n                        value={this.state.typeOfDamage}\r\n                        onChange={this.detailBookChange}\r\n                      >\r\n                        <option value=\"No Damage\">No Damage</option>\r\n                        <option value=\"Minor\">Minor</option>\r\n                        <option value=\"Major\">Major</option>\r\n                      </select>\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"typeOfDamage\"]}\r\n                      </span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"editDescOfDamage\">Description</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"descOfDamage\"\r\n                        id=\"editDescOfDamage\"\r\n                        value={this.state.descOfDamage}\r\n                        onChange={this.detailBookChange}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"editStatusBookDetail\">Status</label>\r\n                      <select\r\n                        name=\"statusBookDetail\"\r\n                        className=\"form-control\"\r\n                        id=\"editStatusBookDetail\"\r\n                        value={this.state.statusBookDetail}\r\n                        onChange={this.detailBookChange}\r\n                      >\r\n                        <option value=\"Available\">Available</option>\r\n                        <option value=\"Unavailable\">Unavailable</option>\r\n                      </select>\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"statusBookDetail\"]}\r\n                      </span>\r\n                    </div>\r\n\r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer justify-content-between\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-default\"\r\n                    data-dismiss=\"modal\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button type=\"button\" onClick={() => this.updateDetailBook(this.state.bookDetailId)} className=\"btn btn-warning\">\r\n                    Save changes\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n\r\n        {/* <!--Modal Delete--> */}\r\n        <div className=\"modal fade\" id=\"modal-delete\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Delete Detail Book</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                If you Delete this, you can't be returned\r\n              </div>\r\n              <div className=\"modal-footer justify-content-between\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-default\"\r\n                  data-dismiss=\"modal\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-warning\"\r\n                  type=\"button\"\r\n                  data-dismiss=\"modal\"\r\n                  onClick={() => this.deleteDetailBook(this.state.bookDetailId)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n         \r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(BookDetail);\r\n",["145","146"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\index.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\reportWebVitals.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Services\\auth.service.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\NavBar\\NavBar.js",["147","148","149","150","151"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Home\\Home.js",["152","153","154","155"],"import React, { Component } from 'react';\r\nimport './Home.style.css';\r\nimport firstHero from '../../../Assets/Media/books/hero1.png';\r\nimport secondtHero from '../../../Assets/Media/books/hero2.png';\r\nimport thirdHero from '../../../Assets/Media/books/hero3.png';\r\nimport Flickity from 'react-flickity-component';\r\nimport { Link } from 'react-router-dom';\r\nimport Axios from '../../../Instances/axios-instances';\r\n\r\nclass Home extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       dataTop: [],\r\n       dataOld: [],\r\n       allBook: [],\r\n       slideShowActive : [],\r\n       recommendedBook: [],\r\n       recommendedCat: \"\"\r\n    }\r\n  }\r\n  \r\n\r\n  componentDidMount() {\r\n    this.getTopFive();\r\n    this.getAllBook();\r\n    this.getOldestFive();\r\n    this.getSlideShowActive();\r\n    this.getRecommendedBook();\r\n    let user = JSON.parse( localStorage.getItem('user'))\r\n    const userToken = user.token;\r\n    console.log(userToken);\r\n  }\r\n\r\n  async getTopFive() {\r\n    let fetchTop = await Axios.get('/book/get-recent-five')\r\n    const resultTop = fetchTop.data      \r\n    this.setState({dataTop: resultTop})      \r\n  }\r\n\r\n  async getOldestFive() {\r\n    let fetchOld = await Axios.get('/book/get-oldest-five')\r\n    const resultOld = fetchOld.data\r\n    this.setState({dataOld: resultOld})\r\n  }\r\n\r\n  async getAllBook() {\r\n    let fetchBook = await Axios.get('/book/get-all')\r\n    this.setState({allBook: fetchBook.data})\r\n  }\r\n\r\n  async getSlideShowActive() {\r\n    let fetchSlideShowActive = await Axios.get('/slideshow/get-all-active');\r\n    this.setState({ slideShowActive : fetchSlideShowActive.data});\r\n  }\r\n\r\n  async getRecommendedBook() {\r\n    let fetchRecommended = await Axios.get('/book/get-max-qty')\r\n    console.log(fetchRecommended)\r\n    this.setState({recommendedBook: fetchRecommended.data})\r\n  }\r\n\r\n  render() {\r\n    const flickityOptions = {\r\n      wrapAround: true,\r\n      autoPlay: 2000,\r\n      pageDots: false,\r\n      initialIndex: 2,\r\n    };\r\n\r\n    const { dataTop, allBook, dataOld, slideShowActive, recommendedBook, recommendedCat } = this.state\r\n\r\n    return (\r\n      <div className=\"content-wrapper\">\r\n        <section className=\"content\">\r\n          {/* Flickity init */}\r\n          <div className=\"carousel-main\">\r\n            <Flickity\r\n              className={'main-carousel carousel'}\r\n              elementType={'div'}\r\n              options={flickityOptions}\r\n              static={true}\r\n              reloadOnUpdate={true}\r\n            >\r\n              {slideShowActive.map((data) => {\r\n                    return (\r\n                          <div\r\n                          className=\"carousel-cell\"\r\n                          style={{\r\n                            backgroundImage: `url(${data.img})`,\r\n                            borderRadius: '30px'\r\n                          }}\r\n                        >\r\n                          <div className=\"carousel-info\">\r\n                            <div className=\"carousel-text\">\r\n                              <h2>{data.title}</h2>\r\n                              <h3>{data.subTitle}</h3>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                    )\r\n                  })}\r\n              \r\n\r\n            </Flickity>\r\n          </div>\r\n          {/* Flickity ends */}\r\n\r\n          {/* Top picks init */}\r\n          <div className=\"container-fluid book-list\">\r\n            <div className=\"list-book-content\">\r\n              <div className=\"col-12\">\r\n                <div className=\"custom-flex2\">\r\n                  <h2 className=\"title-container\">Recently Added</h2>\r\n                  <h4 className=\"title-container\">\r\n                    Stories sparking conversation\r\n                  </h4>\r\n                </div>\r\n                <div className=\"filter-container p-0 row custom-flex\">\r\n\r\n                  {dataTop.map((data) => {\r\n                    return (\r\n                      <div className=\"top-seller\">\r\n                        <div className=\"filtr-item list-book\" />\r\n                        <Link to={`Detail/${data.bookId}`}>\r\n                          <img\r\n                            src={data.imgDetail}\r\n                            className=\"img-fluid img-book\"\r\n                            alt=\"white sample\"\r\n                          />\r\n                          <span className=\"badge category-book\">{data.categoryEntity.category}</span>\r\n                        </Link>\r\n                    </div>\r\n                    )\r\n                  })}\r\n                  \r\n                </div>\r\n                <div className=\"books-nf\" style={{ display: 'none' }}>\r\n                  <h3 className=\"book-not-found\">Oops, Book Not Found</h3>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Top picks ends */}\r\n\r\n          <div className=\"list-book-content\">\r\n            <div className=\"col-12\">\r\n              <div className=\"custom-flex2\">\r\n                <h2 className=\"title-container\">Recommended Stories</h2>\r\n                <h4 className=\"title-container\">Binge from start to finish</h4>\r\n              </div>\r\n              <div className=\"hero-book\">\r\n                <div className=\"hero-book-cover\">\r\n                  <Link to={`Detail/${recommendedBook.bookId}`}>\r\n                    <img\r\n                      src={recommendedBook.imgDetail}\r\n                      alt={recommendedBook.title}\r\n                    />\r\n                  </Link>\r\n                </div>\r\n                <div>\r\n                  <Link\r\n                    className=\"title\"\r\n                    to={`Detail/${recommendedBook.bookId}`}\r\n                    aria-label={recommendedBook.title}\r\n                  >\r\n                    {recommendedBook.title}\r\n                  </Link>\r\n                  <br />\r\n                  <p className=\"description\">\r\n                    {recommendedBook.description}\r\n                  </p>\r\n                  \r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"filter-container p-0 row custom-flex\">\r\n             \r\n\r\n                {dataOld.map((data) => {\r\n                      return (\r\n                        <div className=\"top-seller\">\r\n                        <div className=\"filtr-item list-book\" >\r\n                          <Link to={`Detail/${data.bookId}`}>\r\n                            <img\r\n                              src={data.imgDetail}\r\n                              className=\"img-fluid img-book\"\r\n                              alt=\"white sample\"\r\n                            />\r\n                            <span className=\"badge category-book\">{data.categoryEntity.category}</span>\r\n                          </Link>\r\n                        </div>\r\n                        </div>\r\n                      )\r\n                    })}\r\n                    \r\n    \r\n            \r\n            <div className=\"books-nf\" style={{ display: 'none' }}>\r\n              <h3 className=\"book-not-found\">Oops, Book Not Found</h3>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"list-book-content\">\r\n            <div className=\"col-12\">\r\n              <div className=\"custom-flex2\">\r\n                <Link to='/Catalogue' ><h2 className=\"title-container\">View Book List </h2></Link>\r\n                <h4 className=\"title-container\">Find your best reads</h4>\r\n\r\n              </div>\r\n              <Flickity\r\n                className={'carousel carousel-main book-list-bottom'}\r\n                elementType={'div'}\r\n                options={flickityOptions}\r\n                static={true}\r\n                reloadOnUpdate={true}\r\n              >\r\n\r\n                {allBook.map((data) => {\r\n                    return (\r\n                      <div className=\"carousel-cell\">\r\n                        <Link to={`Detail/${data.bookId}`}>\r\n                          <img\r\n                            src={data.imgDetail}\r\n                            className=\"list-book-bottom carousel-cell-image\"\r\n                            alt=\"white sample\"\r\n                          />\r\n                        </Link>\r\n                      </div>\r\n                    )\r\n                  })}\r\n              </Flickity>\r\n            </div>\r\n          </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\TopUp.js",["156"],"import React, { Component } from 'react';\r\nimport './TopUp.style.css'\r\nimport Card from '../TopUp/Card';\r\nimport showResults from \"./showResult\";\r\nimport Axios from 'axios';\r\n\r\nclass TopUp extends Component {\r\n\r\n  constructor(props) {\r\n    let user = JSON.parse( localStorage.getItem('user'))  \r\n      super(props);    \r\n      this.state = {              \r\n        role:\"\",\r\n        userToken: user.token\r\n      };\r\n    }\r\n    \r\n   render () { \r\n      return(<Card onSubmit={showResults} >               \r\n        </Card>     )         \r\n    }\r\n  }\r\n\r\nexport default TopUp;",["157","158"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\BookManagement\\BookManagement.js",["159"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Wishlist\\Wishlist.js",["160","161","162","163"],"import React, { Component } from 'react';\r\nimport firstHero from '../../../Assets/Media/books/hero1.png';\r\nimport secondtHero from '../../../Assets/Media/books/hero2.png';\r\nimport thirdHero from '../../../Assets/Media/books/hero3.png';\r\nimport Flickity from 'react-flickity-component';\r\nimport { Link } from 'react-router-dom';\r\nimport Axios from '../../../Instances/axios-instances';\r\n\r\nclass Wishlist extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       \r\n       allBook: []\r\n       \r\n    }\r\n  }\r\n  \r\n\r\n  componentDidMount() {    \r\n    this.getAllWish();\r\n    let user = JSON.parse( localStorage.getItem('user'))\r\n    const userToken = user.token;\r\n    console.log(userToken);\r\n  }\r\n  async getAllWish() {\r\n    let fetchBook = await Axios.get('/wishlist/getAll')\r\n    console.log(fetchBook);\r\n    this.setState({allBook: fetchBook.data})\r\n  }\r\n\r\n  render() {\r\n    const { allBook} = this.state\r\n\r\n    return (\r\n      <div className=\"content-wrapper\">\r\n        <section className=\"content\">        \r\n\r\n          {/* Top picks init */}\r\n          <div className=\"container-fluid book-list\">\r\n            <div className=\"list-book-content\">\r\n              <div className=\"col-12\">\r\n                <div className=\"custom-flex2\">\r\n                  <h2 className=\"title-container\">Wishlist Book</h2>\r\n                  <h4 className=\"title-container\">\r\n                    This is where your favorite book place\r\n                  </h4>\r\n                  <hr></hr>\r\n                </div>\r\n\r\n                  {allBook.map((data) => {\r\n                    console.log(data)\r\n                    return (\r\n                      \r\n                      <div className=\"panel-body wishlist-card\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-1\"><Link to={`/Detail/${data.bookEntity.bookId}`}><img src={data.bookEntity.imgDetail} alt=\"media-object\" className=\"img-fluid\" style={{borderRadius: \"5px\"}} /> </Link></div>\r\n                        <div className=\"col-md-11\">\r\n                          <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                             <Link to={`/Detail/${data.bookEntity.bookId}`}>\r\n                              <span><strong>{data.bookEntity.title}</strong></span>\r\n                              </Link>\r\n                              <span className=\"label label-info-custom\">{data.bookEntity.categoryEntity.category}</span>\r\n                              <br />\r\n                              <div className=\"book-description\">\r\n                                <br/>\r\n                                <span>{data.bookEntity.description}</span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <br></br>\r\n                    </div>\r\n                   \r\n                   \r\n                    )\r\n                  })}\r\n\r\n                <div className=\"books-nf\" style={{ display: 'none' }}>\r\n                  <h3 className=\"book-not-found\">Oops, Book Not Found</h3>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Top picks ends */}        \r\n        </section>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Wishlist;\r\n","C:\\Users\\ASUS\\maxwell-library-react\\src\\Components\\Datatable\\Cell.js",["164"],"import React, { Component } from 'react'\r\n\r\nexport default function Cell({\r\n    content,\r\n    header,\r\n  }) {\r\n  \r\n    const cellMarkup = header ? (\r\n      <th className=\"text-center text-nowwrap\">\r\n        {content}\r\n      </th>\r\n    ) : (\r\n        content\r\n    );\r\n  \r\n    return (cellMarkup);\r\n  }","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\FormInput.js",["165"],"import React from 'react';\r\nimport { FormGroup, FormText, Input, Label } from 'reactstrap';\r\nimport { MDBIcon } from \"mdbreact\";\r\n\r\nconst FormInput = ({\r\n  input,\r\n  label,\r\n  type,\r\n  inputPlaceHolder,\r\n  maxDate,\r\n  minDate,\r\n  meta: { touched,error }\r\n}) => (\r\n  <FormGroup>\r\n    <Label>{label}</Label>\r\n    <Input\r\n      {...input}\r\n      type={type}\r\n      placeholder={inputPlaceHolder}      \r\n    />\r\n    <div>    \r\n      {touched && error &&<span><MDBIcon icon=\"exclamation-circle\"/> {error}</span>}\r\n    </div>    \r\n  </FormGroup>\r\n);\r\n\r\nexport default FormInput;\r\n","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Detail\\Detail.js",["166","167","168","169","170","171","172","173","174","175","176","177","178","179","180"],"import React, { Component } from 'react';\r\nimport './Detail.style.css'\r\nimport Swal from 'sweetalert2';\r\nimport Date from '../../../Components/Datepicker/Dates'\r\nimport Axios from '../../../Instances/axios-instances';\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport moment from 'moment';\r\nimport Axios2 from '../../../Instances/axios-instances';\r\nimport $ from 'jquery'\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport Rating from 'react-rating'\r\nimport { MDBIcon } from \"mdbreact\";\r\n\r\nclass Detail extends Component {\r\n\r\n  constructor(props) {\r\n    let activeRole    \r\n    let user = JSON.parse(localStorage.getItem('user'))\r\n    console.log(user)\r\n    let userEmail = JSON.parse(localStorage.getItem('user')).userInfo.email\r\n    if (user) {\r\n      activeRole = JSON.parse(localStorage.getItem('user')).userInfo.activeRole\r\n    } else {\r\n      activeRole = false;\r\n    }        \r\n    super(props)\r\n    console.log(props);\r\n    this.state = {\r\n      fields: {},\r\n      errors: {},\r\n      data2: [],\r\n      data: [],\r\n      status: \"\",\r\n      status2:\"\",      \r\n      startDate: null,\r\n      show: true,\r\n      endDate: null,\r\n      role: activeRole,\r\n      emailToken: userEmail,\r\n      category: [],\r\n      description:\"\",      \r\n      recommendedData: [],\r\n      data3:[],\r\n      star: \"\",\r\n      rate: 1,\r\n      bookId:this.props.match.params.bookId\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const bookId = this.props.match.params.bookId;\r\n    this.getRate(bookId);\r\n    this.getData();\r\n    this.getData2(bookId);\r\n    this.fetchData(bookId);\r\n    this.getStatus(bookId);\r\n    console.log(this.state.emailToken)\r\n    this.getStatus2(bookId);\r\n    this.show();\r\n    this.setState({\r\n      startDate: moment(),\r\n      endDate: moment()\r\n    })\r\n    \r\n  }\r\n\r\n  async getRate(id) {\r\n    await Axios2.get('review/rate/' + id).then((getStatus) => {\r\n      if (getStatus.data==null || getStatus.data==\"\"){\r\n        console.log(getStatus)\r\n      var status = getStatus.data;\r\n      return status\r\n      } else{\r\n        console.log(getStatus)\r\n      var status = getStatus.data;\r\n      this.setState({ rate: getStatus.data })\r\n      console.log(this.state.rate)\r\n      return status\r\n      }      \r\n    })\r\n  }\r\n\r\n  handleChange(field, e) {\r\n    let fields = this.state.fields;\r\n    let errors = {}    \r\n    errors[\"description\"] = \"\"    \r\n    fields[field] = e.target.value;\r\n    this.setState({ fields });\r\n    this.setState({errors: errors})\r\n    \r\n  }\r\n\r\n  async show() {\r\n    console.log(this.state.role)\r\n    if (this.state.role == \"ROLE_USER\") {\r\n      this.setState({ show: true, role2: \"User\", show2: false, role2: \"User\" })\r\n    } else {\r\n      this.setState({ show: false, role2: \"Admin\", show2: true, role2: \"Admin\" })\r\n    }\r\n  }\r\n\r\n \r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.match.params.bookId !== this.props.match.params.bookId) {\r\n      this.fetchData(this.props.match.params.bookId)\r\n      window.scrollTo(0, 0)\r\n    }\r\n  }\r\n\r\n  getStartDate = (start) => {\r\n    this.setState({ startDate: start })\r\n  }\r\n\r\n  getEndDate = (end) => {\r\n    this.setState({ endDate: end })\r\n  }\r\n\r\n  borrow = (id) => {\r\n    console.log(this.state.startDate);\r\n    console.log(this.state.endDate);\r\n    // console.log(Date.getStart());\r\n    const dataBorrow = {\r\n      bookId: id,\r\n      borrowedDate: this.state.startDate,\r\n      returnedDate: this.state.endDate,\r\n    }\r\n    console.log(dataBorrow);\r\n    Axios.post(\"borrow/save\", dataBorrow)\r\n      .then((data) => {\r\n        const result = data.data;\r\n        if (result.status === 400) {\r\n          Swal.fire(\r\n            'Ups, Sorry',\r\n            result.message,\r\n            'warning'\r\n          )\r\n        } else {\r\n\r\n          Swal.fire({\r\n            title: \"Success Borrow Book!\",\r\n            text: \"Borrowed Book Success!\",\r\n            icon: \"success\",\r\n            buttons: true,\r\n          })\r\n        }\r\n      })\r\n\r\n  }\r\n\r\n  bookChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n    console.log(this.state.description)\r\n  };\r\n\r\n  async getData() {\r\n    await Axios2.get('wishlist/getAll').then((getData) => {\r\n      const result = getData.data;\r\n      $(\"#example1\").DataTable().destroy();\r\n      this.setState({ data2: result });\r\n      this.fetchData(this.state.role);\r\n      $(\"#example1\").DataTable({\r\n        responsive: true,\r\n        autoWidth: false,\r\n      });\r\n    });\r\n  }\r\n\r\n  async getData2(id) {\r\n    await Axios2.get('review/getAll/' + id).then((getData) => {\r\n      console.log(getData.data);\r\n      const result = getData.data;      \r\n      this.setState({ data3: result });  \r\n    });\r\n  }\r\n\r\n  async fetchData(bookId) {\r\n    let fetchData = await Axios.get('/book/get-by-id/' + bookId)\r\n    console.log(fetchData.data);\r\n    this.setState({ data: fetchData.data })\r\n    this.setState({ category: fetchData.data.categoryEntity })\r\n    this.fetchRecommended(fetchData.data.categoryEntity.categoryId, bookId)\r\n  }\r\n\r\n  handleValidation() {\r\n    let fields = this.state.fields;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n    \r\n    if (!fields[\"description\"]) {\r\n      formIsValid = false;\r\n      errors[\"description\"] = \"Description cannot be empty\";\r\n    }\r\n\r\n    if (this.state.star==\"\") {\r\n      formIsValid = false;\r\n      errors[\"rate\"] = \"Rate cannot be empty\";\r\n    }\r\n\r\n    this.setState({ errors: errors });\r\n    return formIsValid;\r\n  }\r\n\r\n  async fetchRecommended(categoryId, bookId) {\r\n    let fetchRecommend = await Axios.get('/book/get-rec-detail/' + categoryId + '/' + bookId)\r\n    console.log(fetchRecommend)\r\n    this.setState({ recommendedData: fetchRecommend.data })\r\n  }\r\n\r\n  async getStatus(id) {\r\n    await Axios2.get('wishlist/get/' + id).then((getStatus) => {\r\n      console.log(getStatus)\r\n      var status = getStatus.data;\r\n      this.setState({ status: getStatus.data })\r\n      return status\r\n    })\r\n  }\r\n\r\n  async getStatus2(id) {\r\n    await Axios2.get('review/get/' + id).then((getStatus) => {\r\n      console.log(getStatus)\r\n      var status = getStatus.data;\r\n      this.setState({ status2: getStatus.data })\r\n      return status\r\n    })\r\n  }\r\n\r\n  getId = (id) => {\r\n    Swal.fire({\r\n      icon: 'warning',\r\n      title: 'Warning!',\r\n      showCancelButton: true,\r\n      text: 'Are you sure want to confirm this?',\r\n    })\r\n      .then((result) => {\r\n        if (result.isConfirmed) {\r\n          console.log(this.state.status)\r\n          if (this.state.status == true) {\r\n            Axios2.post('wishlist/post/' + id)\r\n              .then((res) => {\r\n                console.log(res);\r\n                this.getStatus(id);\r\n                Swal.fire({\r\n                  icon: 'success',\r\n                  title: 'Success!',\r\n                  showCancelButton: false,\r\n                  text: 'Wishlist Cancel Already Success!',\r\n                })\r\n              })\r\n          } else {\r\n            Axios2.post('wishlist/post/' + id)\r\n              .then((res) => {\r\n                console.log(res);\r\n                this.getStatus(id);\r\n                Swal.fire({\r\n                  icon: 'success',\r\n                  title: 'Success!',\r\n                  showCancelButton: false,\r\n                  text: 'Wishlist Already Success!',\r\n                })\r\n              })\r\n          }\r\n\r\n        }\r\n      })\r\n  }\r\n\r\n  getId2 = (id) => {\r\n    $('#RateModal').modal('show');\r\n\r\n  }\r\n  printStatusBook = (statusBook) => {\r\n    if (statusBook === 'Available') {\r\n      return <h1 className=\"statustextgreen\">{statusBook}</h1>\r\n    } else if (statusBook === 'Unavailable') {\r\n      return <h1 className=\"statustextred\">{statusBook}</h1>\r\n    }\r\n  }\r\n\r\n  printBorrowButton = (statusBook) => {\r\n    if (statusBook === 'Available') {\r\n      return <div className=\"borrowbutton\">\r\n        <button id=\"button_borrow\" value=\"borrow\" className=\"btn btn-warning\" href=\"#\" data-toggle=\"modal\" data-target=\"#BorrowModal\">Borrow</button>\r\n      </div>\r\n    } else {\r\n      // nothing\r\n    }\r\n\r\n  }\r\n\r\n  refresh() {        \r\n    let errors = {}\r\n    errors[\"rate\"] = \"\"\r\n    errors[\"description\"] = \"\"    \r\n    this.setState({star:\"\"})\r\n    this.setState({errors: errors})\r\n    this.setState({fields:[],userId:\"\",errors:[]})  \r\n  $('#editDescription').val('');  \r\n  }\r\n\r\n  delete(id) {\r\n        Swal.fire({\r\n          icon: 'warning',\r\n          title: 'Warning!',\r\n          showCancelButton: true,\r\n          text: 'Are you sure want to Delete this?',\r\n        }).then((result) => {\r\n          /* Read more about isConfirmed, isDenied below */\r\n          if (result.isConfirmed) {\r\n            Axios2.put('review/delete/' + id,result)\r\n              .then((response) => {\r\n                console.log(response);\r\n              })\r\n            Swal.fire({\r\n              icon: 'success',\r\n              title: 'Success!',\r\n              showCancelButton: false,\r\n              text: 'Delete Review Already Success!',\r\n            })\r\n          }\r\n        })\r\n      \r\n  }\r\n\r\n\r\n  contactSubmit(e) {\r\n    let fields = this.state.fields;\r\n    let user = JSON.parse(localStorage.getItem(\"user\"));\r\n    const token = user.token;\r\n    const config = {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    };\r\n\r\n    e.preventDefault();\r\n    if (this.handleValidation()) {\r\n      $(\"#modal-add\").modal(\"toggle\");\r\n      $('.modal-backdrop').remove();\r\n      const book = {\r\n        rate: this.state.star,\r\n        comment: fields[\"description\"] ,\r\n        book_id:this.state.bookId      \r\n      };\r\n\r\n      console.log(book);    \r\n      if (this.state.status2 == true) {\r\n        Swal.fire({\r\n          icon: 'warning',\r\n          title: 'Warning!',\r\n          showCancelButton: false,\r\n          text: 'Ini akan update data review anda sebelumnya,apakah anda yakin?',\r\n        }).then((isConfirmed) => {\r\n          if (isConfirmed) {                \r\n            Axios2.post('review/post/' + this.state.bookId,book)\r\n          .then((res) => {\r\n            console.log(res);\r\n            this.getStatus2(this.state.bookId);\r\n            this.getData();                        \r\n                $('#RateModal').modal('hide');  \r\n                $('.modal-backdrop').remove(); \r\n                this.refresh();\r\n            Swal.fire({\r\n              icon: 'success',\r\n              title: 'Success!',\r\n              showCancelButton: false,\r\n              text: 'Data Terupdate',\r\n            })\r\n          })\r\n          }\r\n        })\r\n        \r\n      } else {\r\n        Axios2.post('review/post/' + this.state.bookId,book)\r\n          .then((res) => {\r\n            console.log(res);\r\n            this.getStatus2(this.state.bookId);\r\n            Swal.fire({\r\n              icon: 'success',\r\n              title: 'Success!',\r\n              showCancelButton: false,\r\n              text: 'Review Success!',\r\n            })\r\n            .then((isConfirmed) => {\r\n              if (isConfirmed) {                \r\n                this.getData();                        \r\n                $('#RateModal').modal('hide');  \r\n                $('.modal-backdrop').remove(); \r\n                this.refresh();\r\n              }\r\n            })\r\n          })\r\n      }  \r\n    }\r\n  }\r\n\r\n  render() {    \r\n    const rateStar = {\r\n      size: 25,\r\n      count: 5,\r\n      color: \"black\",\r\n      activeColor: \"yellow\",\r\n      a11y: true,\r\n      isHalf: true,\r\n      emptyIcon: <i className=\"far fa-star\" />,\r\n      halfIcon: <i className=\"fa fa-star-half-alt\" />,\r\n      filledIcon: <i className=\"fa fa-star\" />,\r\n      onChange: (newValue) => {\r\n        this.setState({ star: newValue })\r\n      }\r\n    };    \r\n    const rateStar2 = {\r\n      size: 25,\r\n      count: 5,\r\n      color: \"black\",\r\n      edit:false,      \r\n      activeColor: \"yellow\",\r\n      value: this.state.rate,\r\n      a11y: true,\r\n      isHalf: true,\r\n      emptyIcon: <i className=\"far fa-star\" />,\r\n      halfIcon: <i className=\"fa fa-star-half-alt\" />,\r\n      filledIcon: <i className=\"fa fa-star\" />,\r\n      \r\n    };  \r\n    console.log(rateStar2)\r\n    const { data, category, recommendedData, show, star,description,rate,data3 } = this.state\r\n    return (\r\n      <div>\r\n        <div className=\"wrapper\">\r\n          {/* Content Wrapper. Contains page content */}\r\n          <div className=\"content-wrapper\">\r\n            {/* Content Header (Page header) */}                    \r\n            <section className=\"content-header\">\r\n              <div className=\"container-fluid\">\r\n                <div className=\"button\">\r\n                  <div className=\"back-btn\">\r\n                    <a href=\"/\" className=\"button-arrow\" role=\"button\"><i className=\"fas fa-arrow-left arrow\" /></a>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-12\">                  \r\n                    <img className=\"big-preview\" src={data.imgBanner} width=\"1600px\" height=\"1200px\" />\r\n\r\n                    <div className=\"menu-right\">\r\n                      {/* <ul className=\"menuhead\">\r\n                        <li><a href=\"#\" data-toggle=\"modal\" data-target=\"#ModalBook\">Edit</a></li>\r\n                        <li><a href=\"#\" data-toggle=\"modal\" data-target=\"#deleteModal\">Delete</a></li>\r\n                      </ul> */}\r\n                      <img className=\"small-preview\" src={data.imgDetail} />\r\n                    </div>\r\n\r\n                  </div>\r\n\r\n                </div>\r\n              </div>{/* /.container-fluid */}\r\n            </section>\r\n            {/* Main content */}\r\n            <section className=\"content\">\r\n              <div className=\"category\">\r\n                <p>{category.category}</p>\r\n              </div>      \r\n\r\n              <div className=\"container-fluid\">\r\n              \r\n              <div className=\"star-review\">\r\n                  <Rating \r\n                  initialRating={rate} \r\n                  readonly\r\n                  emptySymbol={<i className=\"far fa-star\" />}\r\n                  fullSymbol={<i className=\"fa fa-star\" />}\r\n                  />\r\n                  {/* {rate}<MDBIcon icon=\"star\"/> */}\r\n                  <br/>\r\n                </div>\r\n                \r\n           \r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-6\">\r\n                    <h1 className=\"titletext\">{data.title}</h1>\r\n                  </div>\r\n                  <div className=\"col-sm-6\">\r\n                    {this.printStatusBook(data.statusBook)}\r\n                  </div>\r\n\r\n                </div>\r\n                \r\n              </div>\r\n              <p className=\"date\">{data.publishDate}</p>\r\n              <p className=\"date\">Available Stock: {data.qty}</p>\r\n              <div className=\"row\">\r\n                <div className=\"col-sm-8\">\r\n                  <p className=\"content\">\r\n                    {data.description}\r\n                  </p>\r\n                </div>\r\n                \r\n                {this.printBorrowButton(data.statusBook)}\r\n                <div>\r\n                  {show ? <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-warning add-btn\"\r\n                    onClick={() => { this.getId(data.bookId) }}\r\n                    style={{ float: \"right\" }}\r\n                  >\r\n                    <i className=\"nav-icon fas fa-heart\"></i>\r\n                  </button> : null}\r\n                 \r\n                </div>\r\n                \r\n                <div>\r\n                {show ? <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-warning add-btn\"\r\n                    onClick={() => { this.getId2(data.bookId) }}\r\n                    style={{ float: \"right\" }}\r\n                  >\r\n                    <i className=\"nav-icon fas fa-star\"></i>\r\n                  </button> : null}\r\n                  </div>\r\n              </div>\r\n\r\n              \r\n\r\n              <section>\r\n                  <div className=\"card shadow mb-4 mr-4\">\r\n                    <a  className=\"d-block card-header py-3\" data-toggle=\"collapse\" role=\"button\" aria-expanded=\"true\" aria-controls=\"collapseCardExamplee\">\r\n                      <h6 className=\"m-0 font-weight-bold text-dark\">User Reviews</h6>\r\n                    </a>\r\n                    <div className=\"collapse show\" id=\"collapseCardExamplee\">\r\n                      <div className=\"card-body\">                                   \r\n                        \r\n                        \r\n                        <div className=\"p-2 hover\">              \r\n                        {data3.map((person) => {\r\n                            if(person.userEntity.email === this.state.emailToken) {\r\n                              return(\r\n                                <div className=\"row\">\r\n    \r\n                                  <div className=\"col-sm-6\">\r\n                                    <div className=\"font-weight-bold text-dark\">{person.userEntity.email}</div>\r\n                                    <hr className=\"divider\" />\r\n                                    <div className=\"text-dark mb-5\"><i className=\"nav-icon fas fa-star\"></i> {person.rate} : {person.comment}</div>\r\n                                  </div>\r\n    \r\n                                  <div className=\"col-sm-6\">\r\n                                    \r\n                                    <button type=\"button\" className=\"btn btn-danger float-right\" onClick={() => {this.delete(person.bookEntity.bookId)}}>Delete</button>\r\n                                    \r\n                                  </div>\r\n    \r\n                                </div>\r\n                                ) \r\n                            } else {\r\n                              return(\r\n                                <div className=\"row\">\r\n    \r\n                                  <div className=\"col-sm-6\">\r\n                                    <div className=\"font-weight-bold text-dark\">{person.userEntity.email}</div>\r\n                                    <hr className=\"divider\" />\r\n                                    <div className=\"text-dark mb-5\"><i className=\"nav-icon fas fa-star\"></i> {person.rate} : {person.comment}</div>\r\n                                  </div>\r\n    \r\n                                  <div className=\"col-sm-6\">\r\n                                    \r\n                                    \r\n                                    \r\n                                  </div>\r\n    \r\n                                </div>\r\n                                ) \r\n                            }\r\n                          }\r\n                        )}                                                                  \r\n                        \r\n                          <hr className=\"divider\" />\r\n                        </div>            \r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n              </section>\r\n            </section>\r\n            \r\n            <section>\r\n            \r\n              {/*Adding list books*/}\r\n              <div className=\"list-title\">\r\n                <h4>Recommended</h4><br />\r\n              </div>\r\n              <div className=\"row\" id=\"recomended\">\r\n                {recommendedData.map((data, index) => {\r\n                  return (\r\n                    <div key={index} className=\"col-xs-4 col-sm-4 col-lg-4\">\r\n                      <div className=\"card\" id=\"recomendedcard\">\r\n                        <img src={data.imgDetail} className=\"card-img-top\" alt=\"Dilan 1991\" />\r\n                        <div className=\"card-body\">\r\n                          <h5 className=\"recommend-title\">{data.title}</h5>\r\n                          <p className=\"card-text max-desc\">{data.description} </p>\r\n                          <Link to={`${data.bookId}`}>Read More</Link>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                })}\r\n              </div>\r\n            </section>\r\n            {/* /.content */}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"modal fade\" id=\"BorrowModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabesl\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog modal-md\" role=\"document\">\r\n            <div className=\"modal-content\" id=\"edit-module\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Borrow Book</h5>\r\n                <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">×</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-3\">\r\n                    <label className=\"title-module\">Date Borrow:</label>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"input-group date\" id=\"datetimepicker5\" data-target-input=\"nearest\">\r\n                      <Date startDateCallback={this.getStartDate} endDateCallBack={this.getEndDate} />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\">Close</button>\r\n                  <button type=\"submit\" className=\"btn btn-warning\" id=\"btn-delete\" href=\"#\" data-dismiss=\"modal\" onClick={() => this.borrow(data.bookId)}>Confirm</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"modal fade\" id=\"RateModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabesl\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog modal-md\" role=\"document\">\r\n            <div className=\"modal-content\" id=\"edit-module\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Borrow Book</h5>\r\n                <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">×</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n              <form id=\"addBook\" onSubmit={this.contactSubmit.bind(this)}>\r\n                <div>\r\n                  <div >\r\n                    <div className=\"input-group date\" id=\"datetimepicker5\" data-target-input=\"nearest\">\r\n                      <ReactStars {...rateStar} />\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"rate\"]}\r\n                      </span>\r\n                    </div>                    \r\n                  </div>\r\n                  <br></br>\r\n                  <div className=\"form-group\">                      \r\n                      <textarea\r\n                        className=\"form-control\"\r\n                        id=\"editDescription\"\r\n                        name=\"description\"\r\n                        placeholder=\"Enter Your Comment Here\"\r\n                        rows=\"4\"\r\n                        cols=\"50\"\r\n                        onChange={this.handleChange.bind(this, \"description\")}\r\n                        value={this.state.fields[\"description\"]}\r\n                      ></textarea>\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"description\"]}\r\n                      </span>\r\n                    </div>\r\n                    \r\n                </div>\r\n                \r\n                <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\" onClick={()=>this.refresh()}>Close</button>\r\n                  <button type=\"submit\" className=\"btn btn-warning\">\r\n                    Add\r\n                  </button>\r\n                </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Detail);","C:\\Users\\ASUS\\maxwell-library-react\\src\\App.js",["181"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Navigations\\MainNavigations.js",["182","183"],"import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Footer from '../Screens/Footer/Footer'\r\nimport NavBar from '../Screens/NavBar/NavBar'\r\nimport SideBar from '../Screens/SideBar/SideBar'\r\nimport Profile from '../Screens/Contents/Profile/Profile'\r\nimport ChangePassword from '../Screens/Contents/Profile/ChangePassword'\r\nimport RentManagement from '../Screens/Contents/RentManagement/RentManagement'\r\nimport Home from '../Screens/Contents/Home/Home'\r\nimport Detail from '../Screens/Contents/Detail/Detail'\r\nimport Auth from '../Screens/Auth/Auth'\r\nimport TopUp from '../Screens/Contents/TopUp/TopUp'\r\nimport CategoryManagement from '../Screens/Contents/CategoryManagement/CategoryManagement'\r\nimport SlideShowManagement from '../Screens/Contents/SlideShowManagement/SlideShowManagement'\r\nimport Payment from '../Screens/Contents/Payment/Payment'\r\nimport PaymentInvoicePrint from \"../Screens/Contents/Payment/PaymentInvoicePrint\"\r\nimport PaymentInvoicePrintPaid from \"../Screens/Contents/Payment/PaymentInvoicePrintPaid\"\r\nimport History from '../Screens/Contents/History/History'\r\nimport TopUpManagement from \"../Screens/Contents/TopUpManagement/TopUpManagement\"\r\nimport AdminProfile from '../Screens/Contents/Profile/AdminProfile'\r\nimport UserManagement from '../Screens/Contents/UserManagement/UserManagement'\r\nimport BookManagement from '../Screens/Contents/BookManagement/BookManagement'\r\nimport FineManagement from '../Screens/Contents/FineManagement/FineManagement'\r\nimport DetailInvoice from '../Screens/Contents/DetailInvoice/DetailInvoice'\r\nimport ReturnBook from '../Screens/Contents/ReturnBook/ReturnBook'\r\nimport CheckReturnBook from '../Screens/Contents/ReturnBook/CheckReturnBook'\r\nimport PaymentDetail from '../Screens/Contents/Payment/PaymentDetail'\r\nimport DonationManagement from '../Screens/Contents/DonationManagement/DonationManagement'\r\nimport Donation from '../Screens/Contents/Donation/Donation'\r\nimport BookDetail from '../Screens/Contents/BookManagement/BookDetail'\r\nimport LogManagement from \"../Screens/Contents/LogManagement/LogManagement\";\r\nimport Author from \"../Screens/Contents/Author/Author\"\r\nimport Wishlist from \"../Screens/Contents/Wishlist/Wishlist\"\r\nimport Catalogue from '../Screens/Contents/Catalogue/Catalogue'\r\nimport PrivateRoute from './PrivateRoute'\r\nimport Search from '../Screens/Contents/Search/Search'\r\nimport AuthRoute from './AuthRoute'\r\nimport Axios from '../Instances/axios-instances';\r\n\r\n\r\nclass MainNavigation extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isAuthenticated :  localStorage.getItem('user')\r\n        };\r\n      }\r\n      interval = null;\r\n\r\n      componentDidMount() {\r\n        this.interval = setInterval(this.getBalance, 30000);\r\n        this.getBalance();\r\n      }\r\n  \r\n      componentWillUnmount() {\r\n         clearInterval(this.interval);\r\n      }\r\n      getBalance = () => {\r\n        if(JSON.parse(localStorage.getItem('user')) != null){\r\n            let user = JSON.parse(localStorage.getItem('user'))\r\n            Axios.get('top_up_management/getBalance')\r\n            .then((balance) => {\r\n                localStorage.setItem('balance', JSON.stringify(balance.data));\r\n            })\r\n        }else{\r\n            localStorage.setItem('balance', 0);\r\n        }\r\n      }\r\n\r\n    render() {\r\n        return ( <Router >\r\n                <Switch>\r\n                    <AuthRoute path='/auth'\r\n                    authenticated={this.state.isAuthenticated}\r\n                    component={Auth}>\r\n                    </AuthRoute>\r\n                    <Route path='/PaymentPrint'>\r\n                        <PaymentInvoicePrint />\r\n                    </Route>\r\n                    <Route exact path='/PaymentPrintPaid'>\r\n                        <PaymentInvoicePrintPaid />\r\n                    </Route>\r\n                    <Route path='/'>\r\n                            <NavBar />\r\n                            <SideBar />\r\n                            <Switch>\r\n                                <PrivateRoute exact path='/'\r\n                                authenticated={this.state.isAuthenticated}\r\n                                component={Home}>\r\n                                </PrivateRoute>\r\n                                <Route path='/Profile'>\r\n                                    <Profile />\r\n                                </Route>\r\n                                <Route path='/ChangePassword'>\r\n                                    <ChangePassword/>\r\n                                </Route>\r\n                                <Route path='/AdminProfile'>\r\n                                    <AdminProfile/>\r\n                                </Route>\r\n                                <Route path='/Detail/:bookId'>\r\n                                    <Detail />\r\n                                </Route>\r\n                                <Route path='/Search/:title'>\r\n                                    <Search />\r\n                                </Route>\r\n                                <Route path='/RentManagement'>\r\n                                    <RentManagement />\r\n                                </Route>\r\n                                <Route path='/Author'>\r\n                                    <Author />\r\n                                </Route>\r\n                                <Route path='/FineManagement'>\r\n                                    <FineManagement />\r\n                                </Route>\r\n                                <Route path='/TopUp'>\r\n                                    <TopUp />\r\n                                </Route>\r\n                                <Route path='/CategoryManagement'>\r\n                                    <CategoryManagement />\r\n                                </Route>\r\n                                <Route path='/Catalogue'>\r\n                                    <Catalogue />\r\n                                </Route>\r\n                                <Route path='/TopUpManagement'>\r\n                                    <TopUpManagement />\r\n                                </Route>\r\n                                <Route path='/SlideShowManagement'>\r\n                                    <SlideShowManagement />\r\n                                </Route>\r\n                                <Route path='/Payment/:invoiceId?'>\r\n                                    <Payment />\r\n                                </Route>\r\n                                <Route path='/Wishlist'>\r\n                                    <Wishlist/>\r\n                                </Route>\r\n                                <Route path='/PaymentDetail/:userId'>\r\n                                    <PaymentDetail />\r\n                                </Route>\r\n                                <Route path='/History'>\r\n                                    <History />\r\n                                </Route>\r\n                                <Route path='/usermanagement'>\r\n                                    <UserManagement />\r\n                                </Route>\r\n                                <Route path='/bookmanagement'>\r\n                                    <BookManagement />\r\n                                </Route>\r\n                                <Route path='/bookdetail/:bookId'>\r\n                                    <BookDetail />\r\n                                </Route>\r\n                                <Route path='/DetailInvoice/:invoiceId'>\r\n                                    <DetailInvoice />\r\n                                </Route>\r\n                                <Route path='/ReturnBook'>\r\n                                    <ReturnBook />\r\n                                </Route>\r\n                                <Route path='/CheckReturnBook'>\r\n                                    <CheckReturnBook />\r\n                                </Route>\r\n                                <Route path='/DonationManagement'>\r\n                                    <DonationManagement />\r\n                                </Route>\r\n                                 <Route path='/Donation'>\r\n                                    <Donation />\r\n                                </Route>\r\n                                <Route path='/LogManagement'>\r\n                                    <LogManagement />\r\n                                </Route>\r\n                            </Switch>\r\n                            <Footer />\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\nexport default MainNavigation\r\n","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Footer\\Footer.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Payment\\PaymentInvoicePrint.js",["184"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUpManagement\\TopUpManagement.js",["185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\DetailInvoice\\DetailInvoice.js",["204","205"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Components\\Datepicker\\Dates.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Profile\\ChangePassword.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\CategoryManagement\\CategoryManagement.js",["206"],"import React, { Component } from \"react\";\r\nimport \"./customtable.css\";\r\nimport \"bootstrap\";\r\nimport DataTable from \"../../../Components/Datatable/Table\";\r\nimport Action from \"../../../Components/Datatable/Action\";\r\nimport $ from \"jquery\";\r\nimport \"bootstrap\";\r\nimport Swal from \"sweetalert2\";\r\nimport Axios from '../../../Instances/axios-instances';\r\n\r\nclass CategoryManagement extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      fields: [],\r\n      errors: {},\r\n      data: [],\r\n      rows: [],\r\n      results: [],\r\n    };\r\n\r\n    this.categoryChange = this.categoryChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  async fetchData() {\r\n    $('#example1').DataTable().destroy();\r\n    const results = [];\r\n    \r\n    var no = 1;\r\n\r\n    await Axios.get('/category/get-all-active')\r\n          .then((response) => {\r\n            const result = response.data;\r\n            this.setState({data: result})\r\n            result.map((category) => {\r\n              console.log(category)\r\n              var row = [];\r\n              row.push(<td className=\"text-center\">{no++}</td>);\r\n              row.push(\r\n                <td className=\"text-center py-0 align-middle\">\r\n                  <div className=\"btn-group btn-group-sm\">\r\n                    <Action\r\n                      type=\"success\"\r\n                      title=\"Edit\"\r\n                      icon=\"pen\"\r\n                      dataToggle=\"modal\"\r\n                      dataTarget=\"#modal-edit\"\r\n                      onClick={() => this.getCategory(category.categoryId)}\r\n                    />\r\n                    <Action\r\n                      type=\"danger\"\r\n                      title=\"Delete\"\r\n                      icon=\"trash\"\r\n                      dataToggle=\"modal\"\r\n                      dataTarget=\"#modal-delete\"\r\n                      onClick={() => this.getCategory(category.categoryId)}\r\n                    />\r\n                  </div>\r\n                </td>\r\n              );\r\n              row.push(<td>{category.categoryId}</td>);\r\n              row.push(<td>{category.category}</td>);\r\n              results.push(row);\r\n            })\r\n            this.setState({ rows: results });\r\n\r\n            $(\"#example1\").DataTable({\r\n              responsive: true,\r\n              autoWidth: false,\r\n              });\r\n          })\r\n  }\r\n\r\n  getCategory = (id) => {\r\n    Axios\r\n      .get(\"/category/get-by-id/\" + id)\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({\r\n          category: response.data.category,\r\n          categoryId: id,\r\n        });\r\n      });\r\n  };\r\n\r\n  updateCategory = (id) => {\r\n\r\n    const category = {\r\n      category: this.state.category,\r\n    };\r\n\r\n    console.log(category)\r\n\r\n    if(this.handleValidationUpdate()) {\r\n      Axios\r\n      .put(\"/category/update-category/\" + id, category)\r\n      .then((response) => {\r\n        console.log(response);\r\n        $(\"#modal-edit\").modal(\"toggle\");\r\n        $('.modal-backdrop').remove();\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          title: \"Success\",\r\n          text: \"Your Data has been Updated\",\r\n          confirmButtonText: `OK`,\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            this.fetchData()\r\n          }\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  handleValidationUpdate() {\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    if(this.state.category === \"\") {\r\n      formIsValid = false;\r\n      errors[\"categoryName\"] = \"Category cannot be empty\";\r\n    }\r\n\r\n    this.setState({errors: errors})\r\n    return formIsValid\r\n  }\r\n\r\n  deleteCategory = (id) => {\r\n    Axios\r\n      .put(\"/category/delete-category/\" + id)\r\n      .then((response) => {\r\n        console.log(response);\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          title: \"Success\",\r\n          text: \"Your Data has been Deleted\",\r\n          confirmButtonText: `OK`,\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            this.fetchData()\r\n          }\r\n        });\r\n      });\r\n  };\r\n\r\n  categoryChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  resetModal() {\r\n    let fields = this.state.fields;\r\n    let errors = {}\r\n    fields[\"CategoryName\"] = \"\";\r\n    errors[\"CategoryName\"] = \"\";\r\n\r\n    this.setState({fields: fields});\r\n    this.setState({errors: errors});\r\n  }\r\n\r\n  handleValidation() {\r\n    let fields = this.state.fields;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    //Category Name\r\n    if (!fields[\"CategoryName\"]) {\r\n      formIsValid = false;\r\n      errors[\"CategoryName\"] = \"Category Name cannot be empty\";\r\n    }\r\n\r\n    this.setState({ errors: errors });\r\n    return formIsValid;\r\n  }\r\n\r\n  contactSubmit(e) {\r\n    let fields = this.state.fields;\r\n    e.preventDefault();\r\n    if (this.handleValidation()) {\r\n      $(\"#modal-add\").modal(\"hide\");\r\n      $('.modal-backdrop').remove();\r\n      const category = {\r\n        category: fields[\"CategoryName\"],\r\n      };\r\n      console.log(category);\r\n      Axios\r\n        .post(\"/category/add-category\", category)\r\n        .then((response) => {\r\n          console.log(response);\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: \"Success\",\r\n            text: \"Your Data has been Added\",\r\n            confirmButtonText: `OK`,\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              this.fetchData()\r\n              this.resetModal()\r\n            }\r\n          });\r\n        })\r\n        .catch((error) =>\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Error\",\r\n            text: \"Category already exist!\",\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              $(\"#modal-add\").modal(\"toggle\");\r\n            }\r\n          })\r\n        );\r\n    }\r\n  }\r\n\r\n  handleChange(field, e) {\r\n    let fields = this.state.fields;\r\n    let errors = {}\r\n    errors[\"CategoryName\"] = \"\";\r\n    fields[field] = e.target.value;\r\n    this.setState({ fields });\r\n    this.setState({ errors: errors})\r\n  }\r\n\r\n  render() {\r\n    const { rows } = this.state;\r\n    const headings = [\"No\", \"Action\", \"Category ID(s)\", \"Category Name\"];\r\n    return (\r\n      <div className=\"content-wrapper\">\r\n        {/* <!-- Content Header (Page header) --> */}\r\n        <section className=\"content-header\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col-sm-6\">\r\n                <h3>Category Management</h3>\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <ol className=\"breadcrumb float-sm-right\">\r\n                  <li className=\"breadcrumb-item\">\r\n                    <a href=\"/\">Home</a>\r\n                  </li>\r\n                  <li className=\"breadcrumb-item active\">Category</li>\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* <!-- /.container-fluid --> */}\r\n        </section>\r\n\r\n        <section className=\"content pdg-btm\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12 ctm-responsive\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-primary add-btn\"\r\n                      data-toggle=\"modal\"\r\n                      data-target=\"#modal-add\"\r\n                      style={{ float: \"right\" }}\r\n                    >\r\n                      <i className=\"nav-icon fas fa-plus\"></i>\r\n                      &nbsp; Add Category\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card-body\">\r\n                <DataTable headings={headings} rows={rows} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* <!--Modal Add--> */}\r\n        <div className=\"modal fade\" id=\"modal-add\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Add Category</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <form id=\"addCategory\" onSubmit={this.contactSubmit.bind(this)}>\r\n                <div className=\"modal-body\">\r\n                  <div className=\"card-body\">\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"inputCategoryName\">Category Name <small className=\"red-asterisk\">*</small></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"inputCategoryName\"\r\n                        name=\"category\"\r\n                        placeholder=\"Enter Category\"\r\n                        onChange={this.handleChange.bind(this, \"CategoryName\")}\r\n                        value={this.state.fields[\"CategoryName\"]}\r\n                      />\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"CategoryName\"]}\r\n                      </span>\r\n                    </div>\r\n                    <small><span className=\"red-asterisk\">*</span> Required</small> \r\n                  </div>\r\n                  \r\n                </div>\r\n                <div className=\"modal-footer justify-content-between\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-default\"\r\n                    data-dismiss=\"modal\"\r\n                    onClick={() => this.resetModal()}\r\n                  >\r\n                    Close\r\n                  </button>\r\n                  <button type=\"submit\" className=\"btn btn-warning\">\r\n                    Add\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n\r\n        {/* <!--Modal Edit--> */}\r\n        <div className=\"modal fade\" id=\"modal-edit\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Edit Category</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <form id=\"editCategory\">\r\n                <div className=\"modal-body\">\r\n                  <div className=\"card-body\">\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"editCategoryName\">Category Name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"category\"\r\n                        id=\"editCategoryName\"\r\n                        value={this.state.category}\r\n                        onChange={this.categoryChange}\r\n                      />\r\n                      <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"categoryName\"]}\r\n                          </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer justify-content-between\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-default\"\r\n                    data-dismiss=\"modal\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => this.updateCategory(this.state.categoryId)}\r\n                    className=\"btn btn-warning\"\r\n                  >\r\n                    Save changes\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n\r\n        {/* <!--Modal Delete--> */}\r\n        <div className=\"modal fade\" id=\"modal-delete\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Delete Category</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                If you Delete this, you can't be returned\r\n              </div>\r\n              <div className=\"modal-footer justify-content-between\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-default\"\r\n                  data-dismiss=\"modal\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-warning\"\r\n                  data-dismiss=\"modal\"\r\n                  onClick={() => this.deleteCategory(this.state.categoryId)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CategoryManagement;\r\n","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\UserManagement\\UserManagement.js",["207","208","209","210"],"import React, { Component } from 'react';\r\nimport DataTable from '../../../Components/Datatable/Table';\r\nimport Status from '../../../Components/Datatable/Status';\r\nimport axios from 'axios';\r\nimport './UserManagement.style.css'\r\nimport { Link } from 'react-router-dom'\r\nimport $ from 'jquery';\r\nimport \"datatables.net-responsive/js/dataTables.responsive\"\r\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\r\nclass UserManagement extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: [],\r\n      rows: [],\r\n      results: [],\r\n      isLoading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchDataUser();\r\n  }\r\n\r\n  async fetchDataUser() {\r\n    let fetchedData = await axios.get(\r\n      'https://dummyapi.io/data/api/user?limit=100',\r\n      {\r\n        headers: {\r\n          'app-id': '5fb34a83ea9b56971e58ca12',\r\n        },\r\n      }\r\n    );\r\n\r\n    this.setState.isLoading = false;\r\n    const resultUser = fetchedData.data.data;\r\n    this.setState({ data: resultUser });\r\n    $('#example1').DataTable().destroy();\r\n    this.fetchData();\r\n    $(\"#example1\").DataTable({\r\n      responsive: true,\r\n      autoWidth: false,\r\n    });\r\n  }\r\n\r\n  fetchData() {\r\n    let results = [];\r\n    let result = this.state.data;\r\n    result.map((user) => {\r\n      this.setState({ isLoading: true });\r\n      let row = [];\r\n      let statusVal = '';\r\n      let actVal = (\r\n        <div className=\"btn-group btn-group-sm\">\r\n          <div className=\"input-group-prepend\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-default dropdown-toggle\"\r\n              data-toggle=\"dropdown\"\r\n            >\r\n              User\r\n            </button>\r\n            <div className=\"dropdown-menu\">\r\n              <a className=\"dropdown-item\" href=\"#\">\r\n                Librarian\r\n              </a>\r\n              <a className=\"dropdown-item\" href=\"#\">\r\n                Superadmin\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n      if (user.title == 'mr') {\r\n        statusVal = <Status type=\"success\" val=\"active\" />;\r\n      } else {\r\n        statusVal = <Status type=\"danger\" val=\"inactive\" />;\r\n      }\r\n\r\n      row.push(<td className=\"text-center\">{user.id}</td>);\r\n      row.push(\r\n        <td class=\"user-info\">\r\n          <img src={user.picture} alt=\"avatar\" />\r\n        </td>\r\n      );\r\n      row.push(\r\n        <td className=\"text-center\">{`${user.firstName} ${user.lastName}`}</td>\r\n      );\r\n      row.push(<td className=\"text-center\">{user.email}</td>);\r\n      row.push(<td className=\"text-center\">{statusVal}</td>);\r\n      row.push(<td className=\"text-center\">{user.title}</td>);\r\n      row.push(<td className=\"text-center\">{actVal}</td>);\r\n      results.push(row);\r\n    });\r\n    this.setState({ rows: results });\r\n    this.setState({ isLoading: false });\r\n  }\r\n\r\n  render() {\r\n    const { rows } = this.state;\r\n    const headings = [\r\n      'ID',\r\n      'Photo',\r\n      'Fullname',\r\n      'Email',\r\n      'Status',\r\n      'Last Activity',\r\n      'Level',\r\n    ];\r\n\r\n    return (\r\n      <div className=\"content-wrapper\">\r\n        <section className=\"content-header\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col-sm-6\">\r\n                <h1>User Management</h1>\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <ol className=\"breadcrumb float-sm-right\">\r\n                  <li className=\"breadcrumb-item\"><Link to=\"/index\">Home</Link></li>\r\n                  <li className=\"breadcrumb-item active\">User Management</li>\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/* Main content */}\r\n        <section className=\"content\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <div className=\"card\">\r\n                  {/* /.card-header */}\r\n                  <div className=\"card-body\">\r\n                    <DataTable headings={headings} rows={rows} />\r\n                    {/* /.card-body */}\r\n                  </div>\r\n                </div>\r\n                {/* /.card */}\r\n              </div>\r\n              {/* /.col */}\r\n            </div>\r\n            {/* /.row */}\r\n          </div>\r\n          {/* /.container-fluid */}\r\n        </section>\r\n        {/* /.content */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserManagement;\r\n","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\FineManagement\\FineManagement.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Catalogue\\Catalogue.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\Card.js",["211"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\Validate.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Profile\\AdminProfile.js",["212","213","214","215","216","217","218","219"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Payment\\PaymentInvoicePrintPaid.js",["220"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Profile\\Profile.js",["221"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\DonationManagement\\DonationManagement.js",["222","223","224"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\ReturnBook\\CheckReturnBook.js",["225","226","227","228","229","230","231","232"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Author\\Author.js",["233","234","235"],{"ruleId":"236","severity":1,"message":"237","line":46,"column":35,"nodeType":"238","messageId":"239","endLine":46,"endColumn":37},{"ruleId":"240","severity":1,"message":"241","line":206,"column":13,"nodeType":"242","messageId":"243","endLine":206,"endColumn":29},{"ruleId":"244","severity":1,"message":"245","line":208,"column":70,"nodeType":"246","messageId":"247","endLine":208,"endColumn":72},{"ruleId":"248","replacedBy":"249"},{"ruleId":"250","replacedBy":"251"},{"ruleId":"240","severity":1,"message":"252","line":2,"column":28,"nodeType":"242","messageId":"243","endLine":2,"endColumn":39},{"ruleId":"240","severity":1,"message":"253","line":4,"column":9,"nodeType":"242","messageId":"243","endLine":4,"endColumn":13},{"ruleId":"254","severity":1,"message":"255","line":30,"column":17,"nodeType":"256","endLine":30,"endColumn":168},{"ruleId":"254","severity":1,"message":"255","line":44,"column":17,"nodeType":"256","endLine":44,"endColumn":168},{"ruleId":"254","severity":1,"message":"255","line":66,"column":21,"nodeType":"256","endLine":66,"endColumn":91},{"ruleId":"240","severity":1,"message":"257","line":3,"column":8,"nodeType":"242","messageId":"243","endLine":3,"endColumn":17},{"ruleId":"240","severity":1,"message":"258","line":4,"column":8,"nodeType":"242","messageId":"243","endLine":4,"endColumn":19},{"ruleId":"240","severity":1,"message":"259","line":5,"column":8,"nodeType":"242","messageId":"243","endLine":5,"endColumn":17},{"ruleId":"240","severity":1,"message":"260","line":73,"column":74,"nodeType":"242","messageId":"243","endLine":73,"endColumn":88},{"ruleId":"240","severity":1,"message":"261","line":5,"column":8,"nodeType":"242","messageId":"243","endLine":5,"endColumn":13},{"ruleId":"248","replacedBy":"262"},{"ruleId":"250","replacedBy":"263"},{"ruleId":"236","severity":1,"message":"237","line":64,"column":29,"nodeType":"238","messageId":"239","endLine":64,"endColumn":31},{"ruleId":"240","severity":1,"message":"257","line":2,"column":8,"nodeType":"242","messageId":"243","endLine":2,"endColumn":17},{"ruleId":"240","severity":1,"message":"258","line":3,"column":8,"nodeType":"242","messageId":"243","endLine":3,"endColumn":19},{"ruleId":"240","severity":1,"message":"259","line":4,"column":8,"nodeType":"242","messageId":"243","endLine":4,"endColumn":17},{"ruleId":"240","severity":1,"message":"264","line":5,"column":8,"nodeType":"242","messageId":"243","endLine":5,"endColumn":16},{"ruleId":"240","severity":1,"message":"265","line":1,"column":17,"nodeType":"242","messageId":"243","endLine":1,"endColumn":26},{"ruleId":"240","severity":1,"message":"266","line":2,"column":21,"nodeType":"242","messageId":"243","endLine":2,"endColumn":29},{"ruleId":"240","severity":1,"message":"267","line":12,"column":10,"nodeType":"242","messageId":"243","endLine":12,"endColumn":17},{"ruleId":"244","severity":1,"message":"245","line":69,"column":49,"nodeType":"246","messageId":"247","endLine":69,"endColumn":51},{"ruleId":"268","severity":1,"message":"269","line":75,"column":11,"nodeType":"242","messageId":"270","endLine":75,"endColumn":17},{"ruleId":"244","severity":1,"message":"245","line":95,"column":25,"nodeType":"246","messageId":"247","endLine":95,"endColumn":27},{"ruleId":"271","severity":1,"message":"272","line":96,"column":64,"nodeType":"273","messageId":"247","endLine":96,"endColumn":69},{"ruleId":"271","severity":1,"message":"272","line":98,"column":65,"nodeType":"273","messageId":"247","endLine":98,"endColumn":70},{"ruleId":"244","severity":1,"message":"245","line":197,"column":24,"nodeType":"246","messageId":"247","endLine":197,"endColumn":26},{"ruleId":"244","severity":1,"message":"245","line":240,"column":33,"nodeType":"246","messageId":"247","endLine":240,"endColumn":35},{"ruleId":"240","severity":1,"message":"274","line":332,"column":11,"nodeType":"242","messageId":"243","endLine":332,"endColumn":17},{"ruleId":"244","severity":1,"message":"245","line":347,"column":30,"nodeType":"246","messageId":"247","endLine":347,"endColumn":32},{"ruleId":"240","severity":1,"message":"275","line":427,"column":52,"nodeType":"242","messageId":"243","endLine":427,"endColumn":56},{"ruleId":"240","severity":1,"message":"276","line":427,"column":57,"nodeType":"242","messageId":"243","endLine":427,"endColumn":68},{"ruleId":"277","severity":1,"message":"278","line":443,"column":21,"nodeType":"256","endLine":443,"endColumn":104},{"ruleId":"277","severity":1,"message":"278","line":450,"column":23,"nodeType":"256","endLine":450,"endColumn":77},{"ruleId":"254","severity":1,"message":"279","line":527,"column":21,"nodeType":"256","endLine":527,"endColumn":157},{"ruleId":"240","severity":1,"message":"280","line":4,"column":8,"nodeType":"242","messageId":"243","endLine":4,"endColumn":19},{"ruleId":"240","severity":1,"message":"281","line":2,"column":35,"nodeType":"242","messageId":"243","endLine":2,"endColumn":43},{"ruleId":"240","severity":1,"message":"282","line":62,"column":17,"nodeType":"242","messageId":"243","endLine":62,"endColumn":21},{"ruleId":"277","severity":1,"message":"278","line":18,"column":17,"nodeType":"256","endLine":21,"endColumn":19},{"ruleId":"240","severity":1,"message":"253","line":4,"column":10,"nodeType":"242","messageId":"243","endLine":4,"endColumn":14},{"ruleId":"240","severity":1,"message":"283","line":5,"column":8,"nodeType":"242","messageId":"243","endLine":5,"endColumn":12},{"ruleId":"240","severity":1,"message":"267","line":11,"column":10,"nodeType":"242","messageId":"243","endLine":11,"endColumn":17},{"ruleId":"240","severity":1,"message":"280","line":13,"column":8,"nodeType":"242","messageId":"243","endLine":13,"endColumn":19},{"ruleId":"271","severity":1,"message":"284","line":28,"column":7,"nodeType":"273","messageId":"247","endLine":28,"endColumn":11},{"ruleId":"244","severity":1,"message":"245","line":46,"column":25,"nodeType":"246","messageId":"247","endLine":46,"endColumn":27},{"ruleId":"244","severity":1,"message":"245","line":171,"column":31,"nodeType":"246","messageId":"247","endLine":171,"endColumn":33},{"ruleId":"244","severity":1,"message":"245","line":178,"column":38,"nodeType":"246","messageId":"247","endLine":178,"endColumn":40},{"ruleId":"244","severity":1,"message":"245","line":200,"column":15,"nodeType":"246","messageId":"247","endLine":200,"endColumn":17},{"ruleId":"244","severity":1,"message":"245","line":206,"column":30,"nodeType":"246","messageId":"247","endLine":206,"endColumn":32},{"ruleId":"244","severity":1,"message":"245","line":220,"column":25,"nodeType":"246","messageId":"247","endLine":220,"endColumn":27},{"ruleId":"244","severity":1,"message":"245","line":232,"column":26,"nodeType":"246","messageId":"247","endLine":232,"endColumn":28},{"ruleId":"244","severity":1,"message":"245","line":280,"column":15,"nodeType":"246","messageId":"247","endLine":280,"endColumn":17},{"ruleId":"244","severity":1,"message":"245","line":331,"column":26,"nodeType":"246","messageId":"247","endLine":331,"endColumn":28},{"ruleId":"240","severity":1,"message":"282","line":386,"column":35,"nodeType":"242","messageId":"243","endLine":386,"endColumn":39},{"ruleId":"254","severity":1,"message":"255","line":411,"column":19,"nodeType":"256","endLine":411,"endColumn":167},{"ruleId":"285","severity":1,"message":"286","line":427,"column":17,"nodeType":"256","endLine":431,"endColumn":18},{"ruleId":"254","severity":1,"message":"255","line":586,"column":19,"nodeType":"256","endLine":586,"endColumn":145},{"ruleId":"285","severity":1,"message":"286","line":599,"column":17,"nodeType":"256","endLine":603,"endColumn":18},{"ruleId":"244","severity":1,"message":"287","line":61,"column":25,"nodeType":"246","messageId":"247","endLine":61,"endColumn":27},{"ruleId":"277","severity":1,"message":"278","line":70,"column":37,"nodeType":"256","endLine":70,"endColumn":85},{"ruleId":"236","severity":1,"message":"237","line":40,"column":35,"nodeType":"238","messageId":"239","endLine":40,"endColumn":37},{"ruleId":"236","severity":1,"message":"237","line":49,"column":23,"nodeType":"238","messageId":"239","endLine":49,"endColumn":25},{"ruleId":"254","severity":1,"message":"255","line":64,"column":15,"nodeType":"256","endLine":64,"endColumn":53},{"ruleId":"254","severity":1,"message":"255","line":67,"column":15,"nodeType":"256","endLine":67,"endColumn":53},{"ruleId":"244","severity":1,"message":"245","line":74,"column":22,"nodeType":"246","messageId":"247","endLine":74,"endColumn":24},{"ruleId":"240","severity":1,"message":"288","line":8,"column":9,"nodeType":"242","messageId":"243","endLine":8,"endColumn":14},{"ruleId":"240","severity":1,"message":"289","line":21,"column":15,"nodeType":"242","messageId":"243","endLine":21,"endColumn":25},{"ruleId":"240","severity":1,"message":"290","line":23,"column":15,"nodeType":"242","messageId":"243","endLine":23,"endColumn":25},{"ruleId":"244","severity":1,"message":"245","line":34,"column":23,"nodeType":"246","messageId":"247","endLine":34,"endColumn":25},{"ruleId":"244","severity":1,"message":"245","line":34,"column":41,"nodeType":"246","messageId":"247","endLine":34,"endColumn":43},{"ruleId":"244","severity":1,"message":"245","line":34,"column":62,"nodeType":"246","messageId":"247","endLine":34,"endColumn":64},{"ruleId":"244","severity":1,"message":"245","line":34,"column":81,"nodeType":"246","messageId":"247","endLine":34,"endColumn":83},{"ruleId":"244","severity":1,"message":"245","line":34,"column":102,"nodeType":"246","messageId":"247","endLine":34,"endColumn":104},{"ruleId":"244","severity":1,"message":"245","line":34,"column":123,"nodeType":"246","messageId":"247","endLine":34,"endColumn":125},{"ruleId":"277","severity":1,"message":"278","line":18,"column":17,"nodeType":"256","endLine":21,"endColumn":19},{"ruleId":"254","severity":1,"message":"255","line":453,"column":96,"nodeType":"256","endLine":453,"endColumn":108},{"ruleId":"240","severity":1,"message":"291","line":5,"column":13,"nodeType":"242","messageId":"243","endLine":5,"endColumn":18},{"ruleId":"240","severity":1,"message":"292","line":5,"column":20,"nodeType":"242","messageId":"243","endLine":5,"endColumn":25},{"ruleId":"240","severity":1,"message":"293","line":51,"column":9,"nodeType":"242","messageId":"243","endLine":51,"endColumn":11},{"ruleId":"236","severity":1,"message":"237","line":29,"column":50,"nodeType":"238","messageId":"239","endLine":29,"endColumn":52},{"ruleId":"236","severity":1,"message":"237","line":43,"column":50,"nodeType":"238","messageId":"239","endLine":43,"endColumn":52},{"ruleId":"236","severity":1,"message":"237","line":64,"column":50,"nodeType":"238","messageId":"239","endLine":64,"endColumn":52},{"ruleId":"244","severity":1,"message":"245","line":100,"column":41,"nodeType":"246","messageId":"247","endLine":100,"endColumn":43},{"ruleId":"244","severity":1,"message":"245","line":114,"column":78,"nodeType":"246","messageId":"247","endLine":114,"endColumn":80},{"ruleId":"244","severity":1,"message":"287","line":115,"column":19,"nodeType":"246","messageId":"247","endLine":115,"endColumn":21},{"ruleId":"244","severity":1,"message":"245","line":126,"column":101,"nodeType":"246","messageId":"247","endLine":126,"endColumn":103},{"ruleId":"244","severity":1,"message":"287","line":214,"column":18,"nodeType":"246","messageId":"247","endLine":214,"endColumn":20},{"ruleId":"236","severity":1,"message":"237","line":40,"column":33,"nodeType":"238","messageId":"239","endLine":40,"endColumn":35},{"ruleId":"244","severity":1,"message":"245","line":111,"column":31,"nodeType":"246","messageId":"247","endLine":111,"endColumn":33},{"ruleId":"244","severity":1,"message":"245","line":118,"column":38,"nodeType":"246","messageId":"247","endLine":118,"endColumn":40},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'statusBookDetail' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["294"],"no-negated-in-lhs",["295"],"'useCallback' is defined but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'firstHero' is defined but never used.","'secondtHero' is defined but never used.","'thirdHero' is defined but never used.","'recommendedCat' is assigned a value but never used.","'Axios' is defined but never used.",["294"],["295"],"'Flickity' is defined but never used.","'Component' is defined but never used.","'FormText' is defined but never used.","'MDBIcon' is defined but never used.","no-redeclare","'status' is already defined.","redeclared","no-dupe-keys","Duplicate key 'role2'.","ObjectExpression","'config' is assigned a value but never used.","'star' is assigned a value but never used.","'description' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'AuthService' is defined but never used.","'Redirect' is defined but never used.","'user' is assigned a value but never used.","'Card' is defined but never used.","Duplicate key 'data'.","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","Expected '!==' and instead saw '!='.","'reset' is defined but never used.","'editButton' is assigned a value but never used.","'cancelForm' is assigned a value but never used.","'error' is defined but never used.","'event' is defined but never used.","'no' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]