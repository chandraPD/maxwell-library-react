[{"C:\\Users\\ASUS\\maxwell-library-react\\src\\App.js":"1","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\NavBar\\NavBar.js":"2","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Profile\\AdminProfile.js":"3","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Payment\\PaymentInvoicePrint.js":"4","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Profile\\ChangePassword.js":"5","C:\\Users\\ASUS\\maxwell-library-react\\src\\Components\\Datatable\\Table.js":"6","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\Card.js":"7","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\Validate.js":"8","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUpManagement\\TopUpManagement.js":"9","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\showResult.js":"10"},{"size":282,"mtime":1609682650000,"results":"11","hashOfConfig":"12"},{"size":3237,"mtime":1606291545625,"results":"13","hashOfConfig":"12"},{"size":9745,"mtime":1606392264711,"results":"14","hashOfConfig":"12"},{"size":4202,"mtime":1606455043006,"results":"15","hashOfConfig":"12"},{"size":10606,"mtime":1609682650005,"results":"16","hashOfConfig":"12"},{"size":1946,"mtime":1606448316972,"results":"17","hashOfConfig":"12"},{"size":2316,"mtime":1606455043009,"results":"18","hashOfConfig":"12"},{"size":1117,"mtime":1609213865010,"results":"19","hashOfConfig":"12"},{"size":26085,"mtime":1609753892359,"results":"20","hashOfConfig":"12"},{"size":927,"mtime":1609734332925,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"11ui09a",{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ASUS\\maxwell-library-react\\src\\App.js",["43"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\NavBar\\NavBar.js",["44","45","46","47","48"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Profile\\AdminProfile.js",["49","50","51","52","53","54","55","56"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Payment\\PaymentInvoicePrint.js",["57"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Profile\\ChangePassword.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Components\\Datatable\\Table.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\Card.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\Validate.js",["58","59","60","61","62"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUpManagement\\TopUpManagement.js",["63","64","65","66","67","68","69","70","71","72","73","74","75","76","77"],"import React, { Component } from 'react';\r\nimport './TopUpManagement.style.css'\r\nimport Swal from 'sweetalert2';\r\nimport { Link } from 'react-router-dom'\r\nimport Card from '../TopUp/Card';\r\nimport \"bootstrap\";\r\nimport DataTable from \"../../../Components/Datatable/Table\";\r\nimport Action from \"../../../Components/Datatable/Action\";\r\nimport $ from 'jquery'\r\nimport Status from '../../../Components/Datatable/Status'\r\nimport Axios from 'axios';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nclass TopUpManagement extends Component {\r\n  \r\n  constructor(props) {\r\n  let user = JSON.parse( localStorage.getItem('user'))  \r\n    super(props);    \r\n    this.state = {      \r\n      fields: {},\r\n      errors: {},\r\n      data: [],\r\n      rows: [],\r\n      results: [],\r\n      result: [],\r\n      data: [],        \r\n      headings: [],\r\n      role:\"\",\r\n      show:true,\r\n      userToken: user.token\r\n    };\r\n  }\r\n  componentDidMount() {     \r\n        \r\n    \r\n    this.getAll();\r\n    this.show();\r\n    this.getRole();\r\n  }\r\n\r\n  async getRole(){\r\n    const token=this.state.userToken;\r\n  const config = {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n}\r\n    const getRole = await Axios.get('http://localhost:8080/top_up_management/getRole',config);\r\n    var role=getRole;\r\n    if (role.data==\"[ROLE_ADMIN]\") {      \r\n      this.setState({role: \"[ROLE_ADMIN]\" })\r\n    } else{\r\n      this.setState({role: \"[ROLE_USER]\" })\r\n    } \r\n    if (this.state.role==\"[ROLE_ADMIN]\") {      \r\n      this.setState({headings: [\"No\", \"ID\", \"Action\", \"Email\", \"Total Nominal (Rp)\", \"Payment Method\", \"Status\"] })\r\n    } else{\r\n      this.setState({headings: [\"No\", \"ID\", \"Email\", \"Total Nominal (Rp)\", \"Payment Method\", \"Status\"] })\r\n    } \r\n  }\r\n\r\n  async getAll(){\r\n  const token=this.state.userToken;\r\n  const config = {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n}\r\n    const getData = await Axios.get('http://localhost:8080/top_up_management/getAll',config);\r\n    const getRole = await Axios.get('http://localhost:8080/top_up_management/getRole',config);\r\n  \r\n    console.log(getRole)\r\n    const result_topup = getData.data;\r\n    var role=getRole;\r\n    console.log(result_topup);\r\n    console.log(role.data)\r\n    if (role.data==\"[ROLE_ADMIN]\") {      \r\n      this.setState({role: \"[ROLE_ADMIN]\" })\r\n    } else{\r\n      this.setState({role: \"[ROLE_USER]\" })\r\n    } \r\n\r\n    this.setState({ data: result_topup });\r\n            \r\n    $(\"#example1\").DataTable().destroy();\r\n    this.fetchData(getRole);\r\n    $(\"#example1\").DataTable({\r\n      responsive: true,\r\n      autoWidth: false,\r\n    });\r\n    \r\n    // this.fetchData();\r\n  }\r\n\r\n  getId = (id) => {\r\n  const token=this.state.userToken;  \r\n  const config = {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n}\r\n    Axios.get('http://localhost:8080/top_up_management/getId/' + id)\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.setState({\r\n          nominal:res.data.nominal,\r\n          paymentMethod:res.data.paymentMethod\r\n        })\r\n    Swal.fire({\r\n      icon: 'warning',\r\n      title: 'Warning!',\r\n      showCancelButton: true,\r\n      text: 'Are you sure want to confirm this?',\r\n    }).then((result) => {\r\n      /* Read more about isConfirmed, isDenied below */\r\n      if (result.isConfirmed) {\r\n        Axios.put('http://localhost:8080/top_up/accept/' + id, res,config)\r\n        .then((response) => {\r\n          console.log(response);\r\n        })\r\n        Swal.fire({\r\n        icon: 'success',\r\n        title: 'Success!',\r\n        showCancelButton: false,\r\n        text:  'Confirm Top Up Already Success!',\r\n        }).then((result)=>{\r\n          if(result.isConfirmed){\r\n            window.location.reload();\r\n          }\r\n        })\r\n      }\r\n    })\r\n      })\r\n  }\r\n\r\n  getId2 = (id) => {\r\n  const token=this.state.userToken;    \r\n    const config = {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n  }\r\n    Axios.get('http://localhost:8080/top_up_management/getId/' + id)\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.setState({\r\n          nominal:res.data.nominal,\r\n          paymentMethod:res.data.paymentMethod\r\n        })\r\n    Swal.fire({\r\n      icon: 'warning',\r\n      title: 'Warning!',\r\n      showCancelButton: true,\r\n      text: 'Are you sure want to Cancel this?',\r\n    }).then((result) => {\r\n      /* Read more about isConfirmed, isDenied below */\r\n      if (result.isConfirmed) {\r\n        Axios.put('http://localhost:8080/top_up/cancel/' + id, res,config)\r\n        .then((response) => {\r\n          console.log(response);\r\n        })\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Success!',\r\n          showCancelButton: false,\r\n          text:  'Cancel Top Up Already Success!',\r\n          }).then((result)=>{\r\n            if(result.isConfirmed){\r\n              window.location.reload();\r\n            }\r\n          })\r\n      }\r\n    })\r\n      })\r\n  }\r\n\r\n  fetchData(getRole) {\r\n    var role=getRole;\r\n    console.log(role.data)\r\n    let results = [];\r\n    let result = this.state.data;\r\n    var no=1;\r\n\r\n\r\n    result.forEach( topup => {\r\n      var row = [];\r\n      var actVal, statusVal = '';\r\n      if (topup.statusPayment == 'Success') {\r\n        actVal = <td className=\"text-center py-0 align-middle\">\r\n          <div className=\"btn-group btn-group-sm\">\r\n            -\r\n          </div>\r\n        </td>\r\n        statusVal = <Status type=\"success\" val=\"Success\" />\r\n      } else if (topup.statusPayment == 'Cancelled') {\r\n        actVal = <td className=\"text-center py-0 align-middle\">\r\n          <div className=\"btn-group btn-group-sm\">\r\n            -\r\n          </div>\r\n        </td>\r\n        statusVal = <Status type=\"danger\" val=\"Cancelled\" />\r\n      } else {\r\n        actVal = <td className=\"text-center py-0 align-middle\">\r\n          <div className=\"btn-group btn-group-sm\">\r\n            <Action type=\"success\" title=\"Edit\" icon=\"fas fa-check\" onClick={() => this.getId(topup.historyBalanceId)} />\r\n            <Action type=\"danger\" title=\"Delete\" icon=\"fas fa-ban\" onClick={() => this.getId2(topup.historyBalanceId)} />\r\n          </div>\r\n        </td>\r\n        statusVal = <Status type=\"warning\" val=\"Pending\" />\r\n      }\r\n      row.push(<td className=\"text-center\" >{no++}</td>);\r\n      row.push(<td className=\"text-center\" >{topup.historyBalanceId}</td>);\r\n      if (role.data===\"[ROLE_ADMIN]\"){\r\n        row.push(<td className=\"text-center\" >{actVal}</td>);\r\n      }      \r\n      // row.push(<td className=\"text-center\" >{actVal}</td>);\r\n      row.push(<td className=\"text-center\" >{topup.userBalanceEntity.userEntity.email}</td>);\r\n      row.push(<td>{<NumberFormat value={topup.nominal} displayType={'text'} thousandSeparator={true} prefix={'Rp. '}/>}</td>);\r\n      row.push(<td>{topup.paymentMethod}</td>);\r\n      row.push(<td className=\"text-center\" >{statusVal}</td>);\r\n      results.push(row);\r\n    });\r\n    this.setState({ rows: results });\r\n  }\r\n\r\n  async show(){\r\n  const token=this.state.userToken;\r\n  const config = {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n}\r\n    const getRole = await Axios.get('http://localhost:8080/top_up_management/getRole',config);\r\n    var role=getRole;\r\n    if (role.data==\"[ROLE_ADMIN]\") {      \r\n      this.setState({role: \"[ROLE_ADMIN]\" })\r\n    } else{\r\n      this.setState({role: \"[ROLE_USER]\" })\r\n    } \r\n    if (this.state.role==\"[ROLE_ADMIN]\") {      \r\n      this.setState({show:true })\r\n    } else{\r\n      this.setState({show:false})\r\n    }\r\n  }\r\n\r\n  handleValidation2() {\r\n    let fields = this.state.fields;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    //Password\r\n    if (!fields[\"PasswordConfirm\"]) {\r\n      formIsValid = false;\r\n      errors[\"PasswordConfirm\"] = \"Password cannot be empty\";\r\n    }\r\n\r\n    //Confrim Password\r\n    if (!fields[\"PasswordConfirm2\"]) {\r\n      formIsValid = false;\r\n      errors[\"PasswordConfirm2\"] = \"Password Confirm cannot be empty\";\r\n    }\r\n\r\n    if (fields[\"PasswordConfirm\"]!=fields[\"PasswordConfirm2\"]){\r\n      formIsValid = false;\r\n      errors[\"PasswordConfirm2\"] = \"Password don't Match\";\r\n    }\r\n\r\n    this.setState({ errors: errors });\r\n    return formIsValid;\r\n  }\r\n\r\n  contactSubmit2(e) {\r\n    const token=this.state.userToken;      \r\n    const config = {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n  }\r\n    let fields = this.state.fields;\r\n    e.preventDefault();\r\n    if (this.handleValidation2()) {      \r\n      $('#passwordModal').modal('hide');\r\n      const topup = {\r\n        nominal: fields[\"Nominal\"],\r\n        paymentMethod: fields[\"Payment\"],\r\n        user_balance_id: fields[\"Name\"]\r\n      }\r\n      console.log(topup)\r\n      Axios.post('http://localhost:8080/top_up/post2', topup,config)\r\n            .then((response) => {\r\n              console.log(response);\r\n            })\r\n      Swal.fire({\r\n        title: \"Success Save Top Up Data!\",\r\n        text: \"You Already Success to save this data!\",\r\n        icon: \"success\",\r\n        buttons: true,\r\n      })\r\n      .then((isConfirmed) => {\r\n        if (isConfirmed) {\r\n          window.location.reload();\r\n      }\r\n      })\r\n\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  handleChange2(field, e) {\r\n    let fields = this.state.fields;\r\n    fields[field] = e.target.value;\r\n    this.setState({ fields });\r\n  }\r\n\r\n  handleValidation() {\r\n    let fields = this.state.fields;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    //Name\r\n    if (!fields[\"Name\"]) {\r\n      formIsValid = false;\r\n      errors[\"Name\"] = \"Name cannot be empty\";\r\n    }\r\n\r\n    //Nominal\r\n    if (!fields[\"Nominal\"]) {\r\n      formIsValid = false;\r\n      errors[\"Nominal\"] = \"Nominal cannot be empty\";\r\n    }\r\n\r\n    //Payment\r\n    if (!fields[\"Payment\"]) {\r\n      formIsValid = false;\r\n      errors[\"Payment\"] = \"Payment cannot be empty\";\r\n    }\r\n\r\n    this.setState({ errors: errors });\r\n    return formIsValid;\r\n  }\r\n\r\n  contactSubmit(e) {\r\n    e.preventDefault();\r\n    if (this.handleValidation()) {\r\n      $('#topupModal').modal('hide');\r\n      $('#checkModal').modal('show');\r\n    }\r\n  }\r\n\r\n  handleChange(field, e) {\r\n    let fields = this.state.fields;\r\n    fields[field] = e.target.value;\r\n    this.setState({ fields });    \r\n  } \r\n\r\n  render() {\r\n    \r\n    const { rows,headings,show } = this.state;    \r\n    \r\n    return (\r\n      <div className=\"wrapper\">\r\n        {/* Navbar */}\r\n\r\n        {/* Content Wrapper. Contains page content */}\r\n        <div className=\"content-wrapper\">\r\n          {/* Content Header (Page header) */}\r\n          {/* /.modal */}\r\n          <div className=\"modal fade\" id=\"cancelModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabesl\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                    Do you want to cancel?\r\n                  </h5>\r\n                  <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">×</span>\r\n                  </button>\r\n                </div>\r\n                <div className=\"modal-body\">Are you serious want to cancel?</div>\r\n                <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\">\r\n                    Close\r\n                  </button>\r\n                  <a className=\"btn btn-danger\" id=\"btn-delete\" href=\"#\" data-dismiss=\"modal\" data-toggle=\"modal\" data-target=\"#CancelModal\" onclick=\"cancelstatus()\">Cancel</a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal fade\" id=\"topupModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabesl\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                    Top Up\r\n                  </h5>\r\n                  <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">×</span>\r\n                  </button>\r\n                </div>\r\n                <form\r\n                role=\"form\"\r\n                id=\"addtopup\"\r\n                onSubmit={this.contactSubmit.bind(this)}\r\n              >\r\n                <div className=\"modal-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-5\">\r\n                      <label className=\"title-module\">Username:</label>\r\n                    </div>\r\n                    <div className=\"col-md-7\">\r\n                      <input type=\"text\" id=\"topup-user\" name=\"name\" className=\"form-control\" placeholder=\"Enter Username\" onChange={this.handleChange.bind(this, \"Name\")} value={this.state.fields[\"Name\"]} />\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"divider\" />\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-5\">\r\n                      <label className=\"title-module\">Total Nominal:</label>\r\n                    </div>\r\n                    <div className=\"col-lg-7\">\r\n                      <div className=\"form-group\">\r\n                        <div className=\"radio-group\">\r\n                          <div className=\"row row-cols-md-3\" style={{ textAlign: 'center' }}>\r\n                            <div className=\"icheck-primary\">\r\n                              <input type=\"radio\" name=\"option\" id=\"option1\" value=\"10000\"  onChange={this.handleChange.bind(this, \"Nominal\")} />\r\n                              <label htmlFor=\"option1\" style={{ fontWeight: 'normal' }}>Rp. 10000</label>\r\n                            </div>\r\n                            <div className=\"icheck-primary\">\r\n                              <input type=\"radio\" name=\"option\" id=\"option2\" value=\"20000\"  onChange={this.handleChange.bind(this, \"Nominal\")} />\r\n                              <label htmlFor=\"option2\" style={{ fontWeight: 'normal' }}>Rp. 20000</label>\r\n                            </div>\r\n                            <div className=\"icheck-primary\">\r\n                              <input type=\"radio\" name=\"option\" id=\"option3\" value=\"30000\"  onChange={this.handleChange.bind(this, \"Nominal\")} />\r\n                              <label htmlFor=\"option3\" style={{ fontWeight: 'normal' }}>Rp. 30000</label>\r\n                            </div>\r\n                            <div className=\"icheck-primary\">\r\n                              <input type=\"radio\" name=\"option\" id=\"option4\" value=\"50000\"  onChange={this.handleChange.bind(this, \"Nominal\")} />\r\n                              <label htmlFor=\"option4\" style={{ fontWeight: 'normal' }}>Rp. 50000</label>\r\n                            </div>\r\n                            <div className=\"icheck-primary\">\r\n                              <input type=\"radio\" name=\"option\" id=\"option5\" value=\"100000\"  onChange={this.handleChange.bind(this, \"Nominal\")} />\r\n                              <label htmlFor=\"option5\" style={{ fontWeight: 'normal' }}>Rp. 100000</label>\r\n                            </div>\r\n                            <div className=\"icheck-primary\">\r\n                              <input type=\"radio\" name=\"option\" id=\"option6\" value=\"200000\" onChange={this.handleChange.bind(this, \"Nominal\")} />\r\n                              <label htmlFor=\"option6\" style={{ fontWeight: 'normal' }}>Rp. 200000</label>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"divider\" />\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-5\">\r\n                      <label className=\"title-module\">Payment Method:</label>\r\n                    </div>\r\n                    <div className=\"col-lg-7\">\r\n                      <div className=\"form-group\">\r\n                        <div className=\"radio-group method\">\r\n                          <div className=\"row row-cols-md-3\" style={{ textAlign: 'center' }}>\r\n                            <div className=\"icheck-primary\">\r\n                              <input type=\"radio\" name=\"option2\" id=\"option-method1\" Value=\"Credit Card\" onChange={this.handleChange.bind(this, \"Payment\")} />\r\n                              <label htmlFor=\"option1\" style={{ fontWeight: 'normal' }}>Credit Card</label>\r\n                            </div>\r\n                            <div className=\"icheck-primary\">\r\n                              <input type=\"radio\" name=\"option2\" id=\"option-method2\" Value=\"Paypall\" onChange={this.handleChange.bind(this, \"Payment\")} />\r\n                              <label htmlFor=\"option2\" style={{ fontWeight: 'normal' }}>Paypall</label>\r\n                            </div>\r\n                            <div className=\"icheck-primary\">\r\n                              <input type=\"radio\" name=\"option2\" id=\"option-method3\" Value=\"OVO\" onChange={this.handleChange.bind(this, \"Payment\")} />\r\n                              <label htmlFor=\"option3\" style={{ fontWeight: 'normal' }}>OVO</label>\r\n                            </div>\r\n                            <div className=\"icheck-primary gopay\">\r\n                              <input type=\"radio\" name=\"option2\" id=\"option-method4\" Value=\"Gopay\" onChange={this.handleChange.bind(this, \"Payment\")}  />\r\n                              <label htmlFor=\"option4\" style={{ fontWeight: 'normal' }}>Gopay</label>\r\n                            </div>\r\n                            <div className=\"icheck-primary dana\">\r\n                              <input type=\"radio\" name=\"option2\" id=\"option-method5\" Value=\"Dana\" onChange={this.handleChange.bind(this, \"Payment\")} />\r\n                              <label htmlFor=\"option5\" style={{ fontWeight: 'normal' }}>Dana</label>\r\n                            </div>\r\n                            <div className=\"icheck-primary cash\">\r\n                              <input type=\"radio\" name=\"option2\" id=\"option-method6\" Value=\"Cash\" onChange={this.handleChange.bind(this, \"Payment\")}  />\r\n                              <label htmlFor=\"option6\" style={{ fontWeight: 'normal' }}>Cash</label>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\">\r\n                    Close\r\n                  </button>\r\n                  <button className=\"btn btn-primary\" id=\"btn-delete\" type=\"submit\" >Next</button>\r\n                </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal fade\" id=\"checkModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabesl\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                    Check Data Top Up\r\n                  </h5>\r\n                  <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">×</span>\r\n                  </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-5\">\r\n                      <label className=\"title-module\">Username:</label>\r\n                    </div>\r\n                    <div className=\"col-md-7\">\r\n                      <input type=\"text\" id=\"checkuser\" name=\"name\" className=\"form-control\" value={this.state.fields[\"Name\"]} readOnly placeholder />\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"divider\" />\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-5\">\r\n                      <label className=\"title-module\">Total Nominal:</label>\r\n                    </div>\r\n                    <div className=\"col-md-7\">\r\n                      <input type=\"text\" id=\"checknominal\" name=\"name\" className=\"form-control\" value={this.state.fields[\"Nominal\"]} readOnly placeholder />\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"divider\" />\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-5\">\r\n                      <label className=\"title-module\">Payment Method:</label>\r\n                    </div>\r\n                    <div className=\"col-md-7\">\r\n                      <input type=\"text\" id=\"checkmethod\" name=\"name\" className=\"form-control\" value={this.state.fields[\"Payment\"]} readOnly placeholder />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\" data-target=\"#topupModal\" data-toggle=\"modal\">\r\n                    Back\r\n                  </button>\r\n                  <a className=\"btn btn-primary\" id=\"btn-delete\" href=\"#\" data-dismiss=\"modal\" data-toggle=\"modal\" data-target=\"#passwordModal\">Next</a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal fade\" id=\"passwordModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabesl\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                    Password\r\n                  </h5>\r\n                  <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">×</span>\r\n                  </button>\r\n                </div>\r\n                <form\r\n                role=\"form\"\r\n                id=\"addtopup\"\r\n                onSubmit={this.contactSubmit2.bind(this)}\r\n              >\r\n                <div className=\"modal-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-5\">\r\n                      <label className=\"title-module\">Password:</label>\r\n                    </div>\r\n                    <div className=\"col-md-7\">\r\n                      <input type=\"password\" id=\"passwordconfirm\" name=\"name\" className=\"form-control\" placeholder=\"Password\" onChange={this.handleChange2.bind(this, \"PasswordConfirm\")} value={this.state.fields[\"PasswordConfirm\"]} />\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"divider\" />\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-5\">\r\n                      <label className=\"title-module\">Confirm Password:</label>\r\n                    </div>\r\n                    <div className=\"col-md-7\">\r\n                      <input type=\"password\" id=\"passwordconfirm2\" name=\"name\" className=\"form-control\" placeholder=\"Confirm Password\" onChange={this.handleChange2.bind(this, \"PasswordConfirm2\")} value={this.state.fields[\"PasswordConfirm2\"]} />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\" data-toggle=\"modal\" data-target=\"#checkModal\">\r\n                    Back\r\n                  </button>\r\n                  <button className=\"btn btn-success\" id=\"btn-delete\" type=\"submit\">Confirm</button>\r\n                </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Main content */}\r\n\r\n          <section className=\"content-header\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row mb-2\">\r\n                <div className=\"col-sm-6\">\r\n                  <h3>Top Up Management</h3>\r\n                </div>\r\n                <div className=\"col-sm-6\">\r\n                  <ol className=\"breadcrumb float-sm-right\">\r\n                    <li className=\"breadcrumb-item\">\r\n                      <a href='/'>Home</a>\r\n                    </li>\r\n                    <li className=\"breadcrumb-item active\">Top Up Management</li>\r\n                  </ol>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* <!-- /.container-fluid --> */}\r\n          </section>\r\n\r\n          <section className=\"content pdg-btm\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12 ctm-responsive\">\r\n                      { show ?  <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary add-btn\"\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#topupModal\"                                                \r\n                        style={{ float: \"right\" }}\r\n                      >\r\n                        <i className=\"nav-icon fas fa-plus\"></i>\r\n                      Add Top Up                 \r\n                    </button> : null}                     \r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"card-body\">                  \r\n                  <DataTable headings={headings} rows={rows} />                    \r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          {/* /.content */}\r\n        </div>\r\n        {/* /.content-wrapper */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TopUpManagement;","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\showResult.js",["78"],{"ruleId":"79","severity":1,"message":"80","line":4,"column":8,"nodeType":"81","messageId":"82","endLine":4,"endColumn":19},{"ruleId":"83","severity":1,"message":"84","line":11,"column":17,"nodeType":"85","endLine":11,"endColumn":154},{"ruleId":"86","severity":1,"message":"87","line":11,"column":17,"nodeType":"85","endLine":11,"endColumn":154},{"ruleId":"83","severity":1,"message":"84","line":25,"column":17,"nodeType":"85","endLine":25,"endColumn":154},{"ruleId":"86","severity":1,"message":"87","line":25,"column":17,"nodeType":"85","endLine":25,"endColumn":154},{"ruleId":"83","severity":1,"message":"84","line":47,"column":21,"nodeType":"85","endLine":47,"endColumn":91},{"ruleId":"79","severity":1,"message":"88","line":21,"column":15,"nodeType":"81","messageId":"82","endLine":21,"endColumn":25},{"ruleId":"79","severity":1,"message":"89","line":23,"column":15,"nodeType":"81","messageId":"82","endLine":23,"endColumn":25},{"ruleId":"90","severity":1,"message":"91","line":34,"column":23,"nodeType":"92","messageId":"93","endLine":34,"endColumn":25},{"ruleId":"90","severity":1,"message":"91","line":34,"column":41,"nodeType":"92","messageId":"93","endLine":34,"endColumn":43},{"ruleId":"90","severity":1,"message":"91","line":34,"column":62,"nodeType":"92","messageId":"93","endLine":34,"endColumn":64},{"ruleId":"90","severity":1,"message":"91","line":34,"column":81,"nodeType":"92","messageId":"93","endLine":34,"endColumn":83},{"ruleId":"90","severity":1,"message":"91","line":34,"column":102,"nodeType":"92","messageId":"93","endLine":34,"endColumn":104},{"ruleId":"90","severity":1,"message":"91","line":34,"column":123,"nodeType":"92","messageId":"93","endLine":34,"endColumn":125},{"ruleId":"94","severity":1,"message":"95","line":18,"column":17,"nodeType":"85","endLine":21,"endColumn":19},{"ruleId":"79","severity":1,"message":"96","line":3,"column":9,"nodeType":"81","messageId":"82","endLine":3,"endColumn":17},{"ruleId":"79","severity":1,"message":"97","line":4,"column":9,"nodeType":"81","messageId":"82","endLine":4,"endColumn":18},{"ruleId":"90","severity":1,"message":"98","line":19,"column":29,"nodeType":"92","messageId":"93","endLine":19,"endColumn":31},{"ruleId":"90","severity":1,"message":"98","line":23,"column":30,"nodeType":"92","messageId":"93","endLine":23,"endColumn":32},{"ruleId":"90","severity":1,"message":"98","line":41,"column":30,"nodeType":"92","messageId":"93","endLine":41,"endColumn":32},{"ruleId":"79","severity":1,"message":"99","line":4,"column":10,"nodeType":"81","messageId":"82","endLine":4,"endColumn":14},{"ruleId":"79","severity":1,"message":"100","line":5,"column":8,"nodeType":"81","messageId":"82","endLine":5,"endColumn":12},{"ruleId":"101","severity":1,"message":"102","line":26,"column":7,"nodeType":"103","messageId":"93","endLine":26,"endColumn":11},{"ruleId":"90","severity":1,"message":"91","line":48,"column":18,"nodeType":"92","messageId":"93","endLine":48,"endColumn":20},{"ruleId":"90","severity":1,"message":"91","line":53,"column":24,"nodeType":"92","messageId":"93","endLine":53,"endColumn":26},{"ruleId":"90","severity":1,"message":"91","line":73,"column":18,"nodeType":"92","messageId":"93","endLine":73,"endColumn":20},{"ruleId":"90","severity":1,"message":"91","line":180,"column":31,"nodeType":"92","messageId":"93","endLine":180,"endColumn":33},{"ruleId":"90","severity":1,"message":"91","line":187,"column":38,"nodeType":"92","messageId":"93","endLine":187,"endColumn":40},{"ruleId":"90","severity":1,"message":"91","line":225,"column":18,"nodeType":"92","messageId":"93","endLine":225,"endColumn":20},{"ruleId":"90","severity":1,"message":"91","line":230,"column":24,"nodeType":"92","messageId":"93","endLine":230,"endColumn":26},{"ruleId":"90","severity":1,"message":"98","line":254,"column":34,"nodeType":"92","messageId":"93","endLine":254,"endColumn":36},{"ruleId":"83","severity":1,"message":"84","line":374,"column":19,"nodeType":"85","endLine":374,"endColumn":167},{"ruleId":"104","severity":1,"message":"105","line":390,"column":17,"nodeType":"85","endLine":394,"endColumn":16},{"ruleId":"83","severity":1,"message":"84","line":535,"column":19,"nodeType":"85","endLine":535,"endColumn":145},{"ruleId":"104","severity":1,"message":"105","line":551,"column":17,"nodeType":"85","endLine":555,"endColumn":16},{"ruleId":"79","severity":1,"message":"106","line":4,"column":7,"nodeType":"81","messageId":"82","endLine":4,"endColumn":12},"no-unused-vars","'AuthService' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role link. This role is implicit on the element a.","'editButton' is assigned a value but never used.","'cancelForm' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'password' is assigned a value but never used.","'password2' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'Link' is defined but never used.","'Card' is defined but never used.","no-dupe-keys","Duplicate key 'data'.","ObjectExpression","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","'sleep' is assigned a value but never used."]