[{"/home/tika/Documents/maxwell-library-react/src/index.js":"1","/home/tika/Documents/maxwell-library-react/src/Services/auth.service.js":"2","/home/tika/Documents/maxwell-library-react/src/Navigations/PrivateRoute.js":"3","/home/tika/Documents/maxwell-library-react/src/Screens/Auth/Auth.js":"4","/home/tika/Documents/maxwell-library-react/src/Screens/Contents/Profile/ChangePassword.js":"5","/home/tika/Documents/maxwell-library-react/src/Screens/Contents/Home/Home.js":"6","/home/tika/Documents/maxwell-library-react/src/Screens/Contents/TopUp/TopUp.js":"7","/home/tika/Documents/maxwell-library-react/src/Screens/Contents/Payment/Payment.js":"8","/home/tika/Documents/maxwell-library-react/src/Screens/Contents/Payment/PaymentInvoicePrint.js":"9","/home/tika/Documents/maxwell-library-react/src/Screens/Contents/UserManagement/UserManagement.js":"10","/home/tika/Documents/maxwell-library-react/src/Screens/Contents/TopUpManagement/TopUpManagement.js":"11","/home/tika/Documents/maxwell-library-react/src/Screens/Contents/DetailInvoice/DetailInvoice.js":"12","/home/tika/Documents/maxwell-library-react/src/Screens/Contents/FineManagement/FineManagement.js":"13","/home/tika/Documents/maxwell-library-react/src/Components/Datatable/Status.js":"14","/home/tika/Documents/maxwell-library-react/src/Screens/Contents/TopUp/Card.js":"15","/home/tika/Documents/maxwell-library-react/src/Components/Datepicker/Dates.js":"16","/home/tika/Documents/maxwell-library-react/src/Screens/Contents/TopUp/TopUp3.js":"17","/home/tika/Documents/maxwell-library-react/src/Screens/Contents/TopUp/FormInput.js":"18","/home/tika/Documents/maxwell-library-react/src/Screens/SideBar/SideBar.js":"19","/home/tika/Documents/maxwell-library-react/src/App.js":"20","/home/tika/Documents/maxwell-library-react/src/Instances/axios-instances.js":"21","/home/tika/Documents/maxwell-library-react/src/Screens/Contents/CategoryManagement/CategoryManagement.js":"22","/home/tika/Documents/maxwell-library-react/src/Screens/Contents/Payment/PaymentInvoicePrintPaid.js":"23","/home/tika/Documents/maxwell-library-react/src/Screens/Contents/Detail/Detail.js":"24","/home/tika/Documents/maxwell-library-react/src/Screens/NavBar/NavBar.js":"25","/home/tika/Documents/maxwell-library-react/src/Screens/Footer/Footer.js":"26","/home/tika/Documents/maxwell-library-react/src/Screens/Contents/BookManagement/BookManagement.js":"27","/home/tika/Documents/maxwell-library-react/src/Screens/Contents/Donation/Donation.js":"28","/home/tika/Documents/maxwell-library-react/src/Components/Datatable/Cell.js":"29","/home/tika/Documents/maxwell-library-react/src/Screens/Contents/TopUp/showResult.js":"30"},{"size":904,"mtime":1609681840830,"results":"31","hashOfConfig":"32"},{"size":852,"mtime":1610033099017,"results":"33","hashOfConfig":"32"},{"size":504,"mtime":1609681840754,"results":"34","hashOfConfig":"32"},{"size":18067,"mtime":1610033098197,"results":"35","hashOfConfig":"32"},{"size":10387,"mtime":1609681840826,"results":"36","hashOfConfig":"32"},{"size":8714,"mtime":1610033098553,"results":"37","hashOfConfig":"32"},{"size":1331,"mtime":1610033098705,"results":"38","hashOfConfig":"32"},{"size":14985,"mtime":1610033098601,"results":"39","hashOfConfig":"32"},{"size":4067,"mtime":1609681840822,"results":"40","hashOfConfig":"32"},{"size":4349,"mtime":1609681840826,"results":"41","hashOfConfig":"32"},{"size":26675,"mtime":1610033098873,"results":"42","hashOfConfig":"32"},{"size":11510,"mtime":1610033098433,"results":"43","hashOfConfig":"32"},{"size":6114,"mtime":1610033098469,"results":"44","hashOfConfig":"32"},{"size":137,"mtime":1609681840754,"results":"45","hashOfConfig":"32"},{"size":2240,"mtime":1609681840826,"results":"46","hashOfConfig":"32"},{"size":625,"mtime":1609681840754,"results":"47","hashOfConfig":"32"},{"size":2259,"mtime":1609681840826,"results":"48","hashOfConfig":"32"},{"size":547,"mtime":1610033098701,"results":"49","hashOfConfig":"32"},{"size":8918,"mtime":1610034092183,"results":"50","hashOfConfig":"32"},{"size":267,"mtime":1609681840706,"results":"51","hashOfConfig":"32"},{"size":323,"mtime":1610033098121,"results":"52","hashOfConfig":"32"},{"size":13062,"mtime":1610033098329,"results":"53","hashOfConfig":"32"},{"size":4134,"mtime":1609681840826,"results":"54","hashOfConfig":"32"},{"size":7121,"mtime":1610033098361,"results":"55","hashOfConfig":"32"},{"size":3714,"mtime":1610033098949,"results":"56","hashOfConfig":"32"},{"size":507,"mtime":1609681840826,"results":"57","hashOfConfig":"32"},{"size":28047,"mtime":1610033098301,"results":"58","hashOfConfig":"32"},{"size":10626,"mtime":1610036475478,"results":"59","hashOfConfig":"32"},{"size":271,"mtime":1609681840754,"results":"60","hashOfConfig":"32"},{"size":1178,"mtime":1610033098857,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"s9ti41",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"68"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/tika/Documents/maxwell-library-react/src/index.js",[],"/home/tika/Documents/maxwell-library-react/src/Services/auth.service.js",[],"/home/tika/Documents/maxwell-library-react/src/Navigations/PrivateRoute.js",[],["127","128"],"/home/tika/Documents/maxwell-library-react/src/Screens/Auth/Auth.js",["129","130","131","132","133","134","135"],"import React, { Component } from \"react\";\nimport \"./Assets/Css/login.css\";\nimport LoginImage from \"./Assets/Images/cover.png\";\nimport BookShelfImage from \"./Assets/Images/bookshelf.png\";\nimport { Link, Redirect, withRouter } from \"react-router-dom\";\nimport AuthService from '../../Services/auth.service'\nimport Swal from 'sweetalert2'\n\nclass Auth extends Component {\n  constructor(props) {\n    super(props)\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleRegister = this.handleRegister.bind(this);\n\n    this.state = {\n       fields: {},\n       errors: {}\n    }\n  }\n\n  handleValidationSignUp() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n    \n    //email\n    if(!fields[\"emailSignUp\"]) {\n      formIsValid = false\n      errors[\"emailSignUp\"] = \"Cannot be empty\"\n    }\n\n    if(typeof fields[\"emailSignUp\"] !== \"undefined\") {\n      let lastAtPos = fields[\"emailSignUp\"].lastIndexOf('@')\n      let lastDotPos = fields[\"emailSignUp\"].lastIndexOf('.')\n\n      if(!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"emailSignUp\"].indexOf('@@') == -1 && lastDotPos > 2 && (fields[\"emailSignUp\"].length - lastDotPos) > 2)) {\n        formIsValid = false;\n        errors[\"emailSignUp\"] = \"Email is not valid\"\n      }\n    }\n\n    if(fields[\"PasswordSignUp\"] != null) {\n      let lengthPass = fields[\"PasswordSignUp\"].length\n      if(lengthPass < 8) {\n        formIsValid = false\n        errors[\"PasswordSignUp\"] = \"Your password must be at least 8 characters long\"\n      }\n    }\n\n    if(!fields[\"PasswordSignUp\"]) {\n      formIsValid = false\n      errors[\"PasswordSignUp\"] = \"Password cannot be empty\"\n    }\n\n    this.setState({errors: errors})\n    return formIsValid\n  }\n\n  handleValidationSignIn() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n\n    //email\n    if(!fields[\"emailSignIn\"]) {\n      formIsValid = false\n      errors[\"emailSignIn\"] = \"Email cannot be empty\"\n    }\n\n    if(typeof fields[\"emailSignIn\"] !== \"undefined\") {\n      let lastAtPos = fields[\"emailSignIn\"].lastIndexOf('@')\n      let lastDotPos = fields[\"emailSignIn\"].lastIndexOf('.')\n\n      if(!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"emailSignIn\"].indexOf('@@') == -1 && lastDotPos > 2 && (fields[\"emailSignIn\"].length - lastDotPos) > 2)) {\n        formIsValid = false;\n        errors[\"emailSignIn\"] = \"Email is not valid\"\n      }\n    }\n\n    if(!fields[\"PasswordSignIn\"]) {\n      formIsValid = false\n      errors[\"PasswordSignIn\"] = \"Password cannot be empty\"\n    }\n\n    this.setState({errors: errors})\n    return formIsValid\n  }\n\n  handleValidationForgotPass() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n\n    //username\n    if(!fields[\"userNameForgotPass\"]) {\n      formIsValid = false;\n      errors[\"userNameForgotPass\"] = \"Username cannot be empty\"\n    }\n\n    //email\n    if(!fields[\"emailForgotPass\"]) {\n      formIsValid = false\n      errors[\"emailForgotPass\"] = \"Cannot be empty\"\n    }\n\n    if(typeof fields[\"emailForgotPass\"] !== \"undefined\") {\n      let lastAtPos = fields[\"emailForgotPass\"].lastIndexOf('@')\n      let lastDotPos = fields[\"emailForgotPass\"].lastIndexOf('.')\n\n      if(!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"emailForgotPass\"].indexOf('@@') == -1 && lastDotPos > 2 && (fields[\"emailForgotPass\"].length - lastDotPos) > 2)) {\n        formIsValid = false;\n        errors[\"emailForgotPass\"] = \"Email is not valid\"\n      }\n    }\n\n    this.setState({errors: errors})\n    return formIsValid\n  }\n\n  contactSubmitSignUp(e) {\n    e.preventDefault()\n\n    if(this.handleValidationSignUp()){\n      alert(\"Success!\")\n    } else {\n\n    }\n  }\n\n  contactSubmitSignIn(e) {\n    e.preventDefault()\n\n    if(this.handleValidationSignIn()){\n      this.props.history.push('/')\n    } else {\n\n    }\n  }\n\n  contactSubmitForgotPass(e) {\n    e.preventDefault()\n\n    if(this.handleValidationForgotPass()){\n      alert(\"Success!\")\n    } else {\n    }\n  }\n\n  handleChangeSignUp(field, e) {\n    let fields = this.state.fields\n    fields[field] = e.target.value\n    this.setState({fields})\n  }\n\n  handleChangeSignIn(field, e) {\n    let fields = this.state.fields\n    fields[field] = e.target.value\n    this.setState({fields})\n  }\n\n  handleChangeForgotPass(field, e) {\n    let fields = this.state.fields\n    fields[field] = e.target.value\n    this.setState({fields})\n  }\n\n\n  displaySignUp() {\n      var login = document.getElementById(\"login\")\n      var register = document.getElementById(\"register\")\n      var forgotPassword = document.getElementById(\"forgotPassword\")\n\n      login.style.display = \"none\"\n      register.style.display = \"block\"\n      forgotPassword.style.display = \"none\"\n  }\n\n  displayLogIn() {\n    var login = document.getElementById(\"login\")\n    var register = document.getElementById(\"register\")\n    var forgotPassword = document.getElementById(\"forgotPassword\")\n\n    login.style.display = \"block\";\n    register.style.display = \"none\";\n    forgotPassword.style.display = \"none\";\n  }\n\n  displayForgotPassword() {\n    var login = document.getElementById(\"login\")\n    var register = document.getElementById(\"register\")\n    var forgotPassword = document.getElementById(\"forgotPassword\")\n\n    login.style.display = \"none\";\n    register.style.display = \"none\";\n    forgotPassword.style.display = \"block\";\n  }\n\n  handleRegister(e) {\n    e.preventDefault()\n\n     let email = this.state.fields[\"emailSignUp\"]\n     let password = this.state.fields[\"PasswordSignUp\"]\n     let confirmPassword = this.state.fields[\"ConfirmPasswordSignUp\"]\n\n    if (this.handleValidationSignUp()) {\n    \tAuthService.register(email, password, confirmPassword).then(\n        () => {\n          Swal.fire({\n\n            icon: 'success',\n            title: 'Register Success!',\n            showCancelButton: false,\n            text: 'Please continue to login',\n            }).then((result) => {\n\n            if (result.isConfirmed) {\n            window.location.reload()\n            }\n            })\n        }\n      )\n      .catch(error => Swal.fire(\n        'Register Failed !',\n        'Either email is taken or password is incorrect',\n        'error'\n    ))\n  }\n      this.handleValidationSignUp()\n  }\n\n  handleLogin(e) {\n    e.preventDefault()\n\n    if(this.handleValidationSignIn()){\n      let email = this.state.fields[\"emailSignIn\"]\n      let password = this.state.fields[\"PasswordSignIn\"]\n\n\n    AuthService.login(email, password).then(\n      () => {\n        this.props.history.push(\"/\");\n        window.location.reload();\n      }\n    ).catch(error => Swal.fire(\n      'Login Failed !',\n      'Either email or password is incorrect',\n      'error'\n  ))\n    } else {\n\n    }\n  }\n\n  render() {\n    return (\n      <main className=\"main-style\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-sm-7 px-0 d-none d-sm-block\">\n              <div className=\"main-title\">\n                <h1>\n                  Book is a window <br />\n                  to the world\n                </h1>\n                <p>Photo by Mark Pan4ratte on Unsplash</p>\n                <div className=\"img-cover\"></div>\n                <img src={LoginImage} alt=\"login image\" className=\"login-img\" />\n              </div>\n            </div>\n            <div className=\"col-sm-5 login-section-wrapper\">\n              <div className=\"brand-wrapper\">\n                <img src={BookShelfImage} alt=\"logo\" className=\"logo\" />\n              </div>\n\n              {/* <!--Login Form--> */}\n              <div className=\"login-wrapper my-auto\" id=\"login\" onSubmit={this.handleLogin}>\n                <h1 className=\"form-title\">Login</h1>\n                <p className=\"form-subtitle\">\n                  Welcome Back, Please Login to your Account\n                </p>\n\n                <form action=\"#\" id=\"loginForm\" >\n                  <div className=\"container-form\">\n                    <div className=\"login form-group bottom-label\">\n                      <label for=\"exampleInputEmail1\" className=\"label-login\">\n                        Email address\n                      </label>\n                      <input\n                        type=\"email\"\n                        name=\"emailSignIn\"\n                        className=\"form-control custom-form\"\n                        id=\"exampleInputEmail1\"\n                        placeholder=\"Enter email\"\n                        onChange={this.handleChangeSignIn.bind(this, \"emailSignIn\")}\n                        value={this.state.fields[\"emailSignIn\"]}\n                      />\n                      <span style={{color: \"red\", marginLeft: \"15px\", fontSize: \"13px\"}}>{this.state.errors[\"emailSignIn\"]}</span>\n                    </div>\n                    <div className=\"login form-group bottom-label\">\n                      <label\n                        for=\"exampleInputPassword1\"\n                        className=\"label-login\"\n                      >\n                        Password\n                      </label>\n                      <input\n                        type=\"password\"\n                        name=\"password\"\n                        className=\"form-control custom-form\"\n                        id=\"exampleInputPassword1\"\n                        placeholder=\"Password\"\n                        onChange={this.handleChangeSignIn.bind(this, \"PasswordSignIn\")}\n                        value={this.state.fields[\"PasswordSignIn\"]}\n                      />\n                      <span style={{color: \"red\", marginLeft: \"15px\", fontSize: \"13px\"}}>{this.state.errors[\"PasswordSignIn\"]}</span>\n                    </div>\n                  </div>\n                  <div className=\"pass-manager\">\n                    <input\n                      type=\"checkbox\"\n                      id=\"rememberPassword\"\n                      name=\"rememberPassword\"\n                    />\n                    <label for=\"rememberPassword\">Remember Password</label>\n\n                    <button\n                      type=\"button\"\n                      className=\"forgot-btn\"\n                      onClick={() => this.displayForgotPassword()}\n                    >\n                      Forgot Password\n                    </button>\n\n                  </div>\n                  <div className=\"container-btn\">\n                    <div className=\"row\">\n                      <button\n                        name=\"login\"\n                        id=\"submit\"\n                        className=\"btn login-btn\"\n                        type=\"submit\"\n                        value=\"Login\"\n                      >Login</button>\n                      <input\n                        name=\"signup\"\n                        id=\"signup\"\n                        className=\"btn signup-btn\"\n                        type=\"button\"\n                        value=\"Sign Up\"\n                        onClick={() => this.displaySignUp()}\n                      />\n                    </div>\n                  </div>\n                </form>\n              </div>\n\n              {/* <!--Register Form--> */}\n              <div className=\"register-wrapper my-auto\" id=\"register\" onSubmit={this.handleRegister} >\n                <h1 className=\"form-title\">Register</h1>\n                <p className=\"form-subtitle\">\n                  Welcome! Please Register to your Account\n                </p>\n\n                <form role=\"form\" id=\"formRegister\">\n                  <div className=\"container-form\">\n                    <div className=\"login form-group bottom-label\">\n                      <label for=\"inputEmail\" className=\"label-login\">\n                        Email address\n                      </label>\n                      <input\n                        type=\"email\"\n                        name=\"emailSignUp\"\n                        className=\"form-control custom-form\"\n                        id=\"inputEmail\"\n                        placeholder=\"Enter email\"\n                        autocomplete=\"off\"\n                        onChange={this.handleChangeSignUp.bind(this, \"emailSignUp\")}\n                        value={this.state.fields[\"emailSignUp\"]}\n                      />\n                      <span style={{color: \"red\", marginLeft: \"15px\", fontSize: \"13px\"}}>{this.state.errors[\"emailSignUp\"]}</span>\n                    </div>\n                    <div className=\"login form-group bottom-label\">\n                      <label for=\"inputPassword\" className=\"label-login\">\n                        Password\n                      </label>\n                      <input\n                        type=\"password\"\n                        name=\"passwordSignUp\"\n                        className=\"form-control custom-form\"\n                        id=\"exampleInputPassword\"\n                        placeholder=\"Password\"\n                        onChange={this.handleChangeSignUp.bind(this, \"PasswordSignUp\")}\n                        value={this.state.fields[\"PasswordSignUp\"]}\n                      />\n                      <span style={{color: \"red\", marginLeft: \"15px\", fontSize: \"13px\"}}>{this.state.errors[\"PasswordSignUp\"]}</span>\n                    </div>\n                    <div className=\"login form-group bottom-label\">\n                      <label for=\"inputPassword\" className=\"label-login\">\n                        Confirm Password\n                      </label>\n                      <input\n                        type=\"password\"\n                        name=\"confirmPasswordSignUp\"\n                        className=\"form-control custom-form\"\n                        id=\"exampleInputPassword\"\n                        placeholder=\"Confirm Password\"\n                        onChange={this.handleChangeSignUp.bind(this, \"ConfirmPasswordSignUp\")}\n                        value={this.state.fields[\"ConfirmPasswordSignUp\"]}\n                      />\n                      <span style={{color: \"red\", marginLeft: \"15px\", fontSize: \"13px\"}}>{this.state.errors[\"PasswordSignUp\"]}</span>\n                    </div>\n                  </div>\n                  <div className=\"container-btn\">\n                    <div className=\"row \">\n                      <button\n                        name=\"signup\"\n                        id=\"signup\"\n                        className=\"btn signup-btn\"\n                        type=\"submit\"\n                        value=\"Sign Up\"\n                      >Sign Up</button>\n                      <input\n                        name=\"login\"\n                        id=\"login\"\n                        className=\"btn login-btn\"\n                        type=\"button\"\n                        value=\"Login\"\n                        onClick={() => this.displayLogIn()}\n                      />\n                    </div>\n                  </div>\n                </form>\n              </div>\n\n              {/* <!--Form Forgot Password--> */}\n              <div className=\"forgot-wrapper my-auto\" id=\"forgotPassword\" onSubmit={this.contactSubmitForgotPass.bind(this)}>\n                <h1 className=\"form-title\">Forgot Password</h1>\n                <p className=\"form-subtitle\">\n                  Forgot your password? Don't worry, we got you covered.\n                </p>\n\n                <form action=\"#\" id=\"formForgot\">\n                  <div className=\"container-form\">\n                    <div className=\"login form-group bottom-label\">\n                      <label for=\"inputUsername\" className=\"label-login\">\n                        Username\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"userNameForgotPass\"\n                        className=\"form-control custom-form\"\n                        id=\"inputUsername\"\n                        placeholder=\"Enter username\"\n                        autocomplete=\"off\"\n                        onChange={this.handleChangeSignUp.bind(this, \"userNameForgotPass\")}\n                        value={this.state.fields[\"userNameForgotPass\"]}\n                      />\n                      <span style={{color: \"red\", marginLeft: \"15px\", fontSize: \"13px\"}}>{this.state.errors[\"userNameForgotPass\"]}</span>\n                    </div>\n                    <div className=\"login form-group bottom-label\">\n                      <label for=\"inputEmail\" className=\"label-login\">\n                        Email address\n                      </label>\n                      <input\n                        type=\"email\"\n                        name=\"emailForgotPass\"\n                        className=\"form-control custom-form\"\n                        id=\"inputEmail\"\n                        placeholder=\"Enter email\"\n                        autocomplete=\"off\"\n                        onChange={this.handleChangeSignUp.bind(this, \"emailForgotPass\")}\n                        value={this.state.fields[\"emailForgotPass\"]}\n                      />\n                      <span style={{color: \"red\", marginLeft: \"15px\", fontSize: \"13px\"}}>{this.state.errors[\"emailForgotPass\"]}</span>\n                    </div>\n                  </div>\n                  <div className=\"container-btn\">\n                    <div className=\"row \">\n                      <button\n                        name=\"submit\"\n                        id=\"submit\"\n                        className=\"btn submit-btn\"\n                        type=\"submit\"\n                        value=\"Submit\"\n                      >Submit</button>\n                      <input\n                        name=\"login\"\n                        id=\"login\"\n                        className=\"btn login-btn\"\n                        type=\"button\"\n                        value=\"Back to Login\"\n                        onClick={() => this.displayLogIn()}\n                      />\n                    </div>\n                  </div>\n                </form>\n              </div>\n\n              <p className=\"terms\">\n                By signing up, you agree to Book’s <br />\n                Terms and Conditions & Privacy Policy\n              </p>\n            </div>\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default withRouter(Auth);\n","/home/tika/Documents/maxwell-library-react/src/Screens/Contents/Profile/ChangePassword.js",[],"/home/tika/Documents/maxwell-library-react/src/Screens/Contents/Home/Home.js",[],"/home/tika/Documents/maxwell-library-react/src/Screens/Contents/TopUp/TopUp.js",["136"],"import React, { Component } from 'react';\nimport './TopUp.style.css'\nimport Card from '../TopUp/Card';\nimport showResults from \"./showResult\";\nimport Axios from 'axios';\n\nclass TopUp extends Component {\n\n  constructor(props) {\n    let user = JSON.parse( localStorage.getItem('user'))  \n      super(props);    \n      this.state = {              \n        role:\"\",\n        userToken: user.token\n      };\n    }\n    \n   render () {\n\n//   const token=this.state.userToken;\n//   const config = {\n//     headers: { Authorization: `Bearer ${token}` }\n// }\n    // var b=Axios.get('http://localhost:8080/top_up_management/getRole',config)\n    // console.log(b)\n    // Axios.get('http://localhost:8080/top_up_management/getRole',config).then((getData)=>{\n    // var role=getData.data;\n    // if (role.data==\"[ROLE_ADMIN]\") {      \n    //   this.setState({role: \"[ROLE_ADMIN]\" })\n    // } else{\n    //   this.setState({role: \"[ROLE_USER]\" })\n    // }     \n    // });\n    // if (this.state.role==\"[ROLE_ADMIN]\") {      \n    //   return(window.location.href = \"/\")\n    // } else{\n    //   return (        \n    //     <Card onSubmit={showResults} >               \n    //     </Card>\n    //   )\n    // } \n    // return (     \n      return(<Card onSubmit={showResults} >               \n        </Card>     )         \n    }\n  }\n\nexport default TopUp;","/home/tika/Documents/maxwell-library-react/src/Screens/Contents/Payment/Payment.js",["137","138"],"import React, { Component } from \"react\";\nimport \"./payment.css\";\nimport MaxIcon from \"../../Auth/Assets/Images/bookshelf.png\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Swal from 'sweetalert2'\nimport Axios from '../../../Instances/axios-instances';\nimport NumberFormat from 'react-number-format';\n\nclass Payment extends Component {\n   \n   interval = null;\n   constructor() {\n      super();\n      this.state = {\n         balance: '',\n         grandTotal: '',\n         invoiceId: '',\n         invoiceNeedPaid: [],\n         dataInvoice: [],\n         dataDetailInvoice: [],\n      };\n      this.reNewBalance();\n   }\n\n   componentDidMount() {\n      const invoiceId = this.props.match.params.invoiceId;\n      this.fetchDataInvoiceNeedPaid();\n      this.getBalance();\n      if (invoiceId) {\n         this.setState({ invoiceId: invoiceId });\n         this.getDetailInvoiceByInvoiceId(invoiceId);\n      } else {\n         this.setState({ invoiceId: \"\" });\n      }\n      this.interval = setInterval(this.reNewBalance, 5000);\n   }\n\n   formatRupiah = (nilai) => {\n      return <NumberFormat value={nilai} displayType={'text'} thousandSeparator={true} prefix={'Rp. '} />\n   }\n\n   handleChange = (event) => {\n      var invoiceId = event.target.value;\n      this.setState({ invoiceId: invoiceId });\n      if (invoiceId === \"\") {\n         return this.setState({ dataInvoice: \"\", dataDetailInvoice: \"\" });\n      } else {\n         this.getDetailInvoiceByInvoiceId(invoiceId);\n      }\n   }\n\n   async getBalance() {\n      const balance = await Axios.get('top_up_management/getBalance');\n      this.setState({ balance: balance.data });\n   }\n\n\n   componentWillUnmount() {\n      clearInterval(this.interval);\n   }\n\n\n   reNewBalance = () => {\n      this.setState({\n         balance: JSON.parse(localStorage.getItem('balance')),\n      })\n   }\n\n   async fetchDataInvoiceNeedPaid() {\n      const getData = await Axios.get('invoice/user/get-all-need-paid');\n      this.setState({ invoiceNeedPaid: getData.data.data });\n\n   }\n\n   async getDetailInvoiceByInvoiceId(invoiceId) {\n      try {\n         const getInvoice = await Axios.get(`invoice/get-by-id/${invoiceId}`)\n         const getInvoiceDetail = await Axios.get(`invoice-detail/get-by-invoice-id/${invoiceId}`)\n         this.setState({ dataInvoice: getInvoice.data.data, dataDetailInvoice: getInvoiceDetail.data.data, grandTotal: getInvoice.data.data.grandTotal })\n      } catch (err) {\n         console.log(err);\n      }\n   }\n\n   confirmPaid = () => {\n\n      console.log(this.state.grandTotal);\n      console.log(this.state.balance);\n      if (this.state.grandTotal <= this.state.balance) {\n         Axios.put()\n         Swal.fire(\"Success\", \"Your Payment has been Accepted\", \"success\")\n      } else {\n         Swal.fire({\n            icon: 'error',\n            title: 'Declined',\n            text: 'Sorry, Your Current Balance is Insufficient.',\n            showDenyButton: true,\n            showConfirmButton: true,\n            confirmButtonText: `Top Up`,\n            denyButtonText: `OK`\n         }).then((result) => {\n            if (result.isConfirmed) {\n               // this.props.history.push('/TopUp')\n            }\n            else {\n\n            }\n         })\n      }\n\n   }\n\n   paymentDeclined() {\n      Swal.fire({\n         icon: 'error',\n         title: 'Declined',\n         text: 'Sorry, Your Current Balance is Insufficient.',\n         showDenyButton: true,\n         showConfirmButton: true,\n         confirmButtonText: `Top Up`,\n         denyButtonText: `OK`\n      }).then((result) => {\n         if (result.isConfirmed) {\n            this.props.history.push('/TopUp')\n         }\n         else {\n\n         }\n      })\n   }\n\n   render() {\n      const { invoiceId, invoiceNeedPaid, dataInvoice, dataDetailInvoice, balance } = this.state;\n      let cardBody, action;\n\n      if (dataInvoice != \"\") {\n\n         if (dataInvoice.statusInvoice === \"Waiting For Payment\") {\n            action =\n               <button\n                  type=\"submit\"\n                  data-toggle=\"modal\"\n                  data-target=\"#modal-confirm\"\n                  className=\"btn btn-success float-right\"\n               >\n                  <i className=\"far fa-credit-card\"></i> Pay\n               </button>\n         } else {\n            action = \"\"\n         }\n         cardBody = <div className=\"card-body\">\n            <div>\n               <div className=\"invoice p-3 mb-3\">\n                  {/* <!-- title row --> */}\n                  <div className=\"row\">\n                     <div className=\"col-12\">\n                        <h4>\n                           <img src={MaxIcon} style={{ height: '2rem' }} /> Maxwell Library <small className=\"float-right\">Date: {dataInvoice.invoiceDate}</small>\n                        </h4>\n                     </div>\n                     {/* <!-- /.col --> */}\n                  </div>\n                  {/* <!-- info row --> */}\n                  <div className=\"row invoice-info\">\n                     <div className=\"col-sm-4 invoice-col\">\n                        From\n         <address>\n                           <strong>Maxwell Library</strong>\n                           <br />\n           795 Folsom Ave, Suite 600\n           <br />\n           San Francisco, CA 94107\n           <br />\n           Phone: (804) 123-5432\n           <br />\n           Email: maxwell@library.com\n         </address>\n                     </div>\n                     {/* <!-- /.col --> */}\n                     <div className=\"col-sm-4 invoice-col\">\n                        To\n                     <address>\n                           <strong>{dataInvoice.borrower}</strong><br />\n                           {dataInvoice.address}<br />\n         Phone: {dataInvoice.phone}<br />\n         Email: {dataInvoice.email}\n                        </address>\n                     </div>\n                     {/* <!-- /.col --> */}\n                     <div className=\"col-sm-4 invoice-col\">\n                        <b>Invoice {dataInvoice.noInvoice}</b><br />\n                        <br />\n                     </div>\n                     {/* <!-- /.col --> */}\n                  </div>\n                  {/* <!-- /.row --> */}\n\n                  {/* <!-- Table row --> */}\n                  <div className=\"row\">\n                     <div className=\"col-12 table-responsive\">\n                        <table className=\"table table-striped\">\n                           <thead>\n                              <tr>\n                                 <th>No.</th>\n                                 <th>Book Title</th>\n                                 <th>Borrowed On</th>\n                                 <th>Due On</th>\n                                 <th>Type</th>\n                                 <th>Late By</th>\n                                 <th>Fine Amount</th>\n                              </tr>\n                           </thead>\n                           <tbody>\n                              {\n                                 dataDetailInvoice.map((val, index) => {\n                                    return (\n                                       <tr key={index}>\n                                          <td>{index + 1}</td>\n                                          <td>{val.title}</td>\n                                          <td>{val.borrowedDate}</td>\n                                          <td>{val.treshold}</td>\n                                          <td>{val.type}</td>\n                                          <td>{val.late} Days</td>\n                                          <td>{val.grandTotal}</td>\n                                       </tr>\n                                    )\n                                 })\n                              }\n                           </tbody>\n                        </table>\n                     </div>\n                     {/* <!-- /.col --> */}\n                  </div>\n                  {/* <!-- /.row --> */}\n\n                  <div className=\"row\">\n                     {/* <!-- accepted payments column --> */}\n                     <div className=\"col-6\"></div>\n                     {/* <!-- /.col --> */}\n                     <div className=\"col-6\">\n                        <p className=\"lead\" style={{ float: 'right' }}>Amount Due {dataInvoice.treshold}</p>\n                        <div className=\"table-responsive\">\n                           <table className=\"table\">\n                              <thead>\n                                 <tr>\n                                    <th style={{ width: \"59%\" }}>Total:</th>\n                                    <td>{this.formatRupiah(`${dataInvoice.grandTotal}`)}</td>\n                                 </tr>\n                              </thead>\n\n                           </table>\n                        </div>\n                     </div>\n                     {/* <!-- /.col --> */}\n                  </div>\n                  {/* <!-- /.row --> */}\n\n                  {/* <!-- this row will not appear when printing --> */}\n                  <div className=\"row no-print\">\n                     <div className=\"col-12\">\n                        <Link to=\"/PaymentPrint\" target=\"_blank\">\n                           <i className=\"fas fa-print\"></i> Print\n                        </Link>\n                        {action}\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n\n      } else {\n         cardBody = \"\";\n         action = \"\";\n\n      }\n\n      return (\n         <div className=\"content-wrapper\">\n            {/* <!-- Content Header (Page header) --> */}\n            <section className=\"content-header\">\n               <div className=\"container-fluid\">\n                  <div className=\"row mb-2\">\n                     <div className=\"col-sm-6\">\n                        <h1>Fine Payment</h1>\n                     </div>\n                     <div className=\"col-sm-6\">\n                        <ol className=\"breadcrumb float-sm-right\">\n                           <li className=\"breadcrumb-item\">\n                              <Link to=\"/\">Home</Link>\n                           </li>\n                           <li className=\"breadcrumb-item\">\n                              <Link to=\"/FineManagement\">Fine Management</Link>\n                           </li>\n                           <li className=\"breadcrumb-item active\">Fine Payment</li>\n                        </ol>\n                     </div>\n                  </div>\n               </div>\n               {/* <!-- /.container-fluid --> */}\n            </section>\n\n            <section className=\"content\">\n               <div className=\"container-fluid\">\n                  <div className=\"card\">\n                     <div className=\"card-header\">\n                        <div className=\"row\">\n                           <div className=\"col-sm-6\">\n                              <div className=\"form-group\">\n                                 <label>Select Invoice: </label>\n                                 <select\n                                    className=\"form-control inv-selector\"\n                                    id=\"invoice\"\n                                    onChange={this.handleChange}\n                                    value={invoiceId}\n                                 >\n                                    <option value=\"\" >Select Invoice</option>\n                                    {\n                                       invoiceNeedPaid.map((val, index) => {\n                                          return (\n                                             <option key={index} value={val.invoiceId} >{val.noInvoice}</option>\n                                          )\n                                       })\n                                    }\n                                 </select>\n                              </div>\n                           </div>\n\n                           <div className=\"col-sm-6\">\n                              <div className=\"form-group balance-display\">\n                                 <label>Current Balance: </label>\n                                 <p className=\"balance-value\"> {this.formatRupiah(balance)} </p>\n                              </div>\n                           </div>\n                        </div>\n                     </div>\n                     {cardBody}\n                  </div>\n               </div>\n            </section>\n\n            {/* <!--Modal Add--> */}\n            <div className=\"modal fade\" id=\"modal-confirm\">\n               <div className=\"modal-dialog\">\n                  <div className=\"modal-content\">\n                     <div className=\"modal-header\">\n                        <h4 className=\"modal-title\">Confirm Payment</h4>\n                        <button\n                           type=\"button\"\n                           className=\"close\"\n                           data-dismiss=\"modal\"\n                           aria-label=\"Close\"\n                        >\n                           <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                     </div>\n                     <div className=\"modal-body\">\n                        <div className=\"card-body\">\n                           <table className=\"table table-bordered table-striped\">\n                              <tbody>\n                                 <tr>\n                                    <td>Your Current Balance</td>\n                                    <td>{this.formatRupiah(balance)}</td>\n                                 </tr>\n                                 <tr>\n                                    <td>\n                                       <b>Invoice Total</b>\n                                    </td>\n                                    <td>{this.formatRupiah(`${dataInvoice.grandTotal}`)}</td>\n                                 </tr>\n                              </tbody>\n                           </table>\n                        </div>\n                     </div>\n                     <div className=\"modal-footer justify-content-between\">\n                        <button\n                           type=\"button\"\n                           className=\"btn btn-default\"\n                           data-dismiss=\"modal\"\n                        >\n                           Cancel\n                </button>\n                        <button\n                           type=\"submit\"\n                           className=\"btn btn-warning\"\n                           id=\"btn-pay\"\n                           data-dismiss=\"modal\"\n                           onClick={this.confirmPaid}\n                        >\n                           Confirm\n                </button>\n                     </div>\n                  </div>\n                  {/* <!-- /.modal-content --> */}\n               </div>\n               {/* <!-- /.modal-dialog --> */}\n            </div>\n            {/* <!-- /.modal --> */}\n         </div>\n      );\n   }\n}\n\nexport default withRouter(Payment);\n","/home/tika/Documents/maxwell-library-react/src/Screens/Contents/Payment/PaymentInvoicePrint.js",["139"],"/home/tika/Documents/maxwell-library-react/src/Screens/Contents/UserManagement/UserManagement.js",["140","141","142","143"],"/home/tika/Documents/maxwell-library-react/src/Screens/Contents/TopUpManagement/TopUpManagement.js",["144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160"],"/home/tika/Documents/maxwell-library-react/src/Screens/Contents/DetailInvoice/DetailInvoice.js",["161"],"/home/tika/Documents/maxwell-library-react/src/Screens/Contents/FineManagement/FineManagement.js",[],"/home/tika/Documents/maxwell-library-react/src/Components/Datatable/Status.js",[],"/home/tika/Documents/maxwell-library-react/src/Screens/Contents/TopUp/Card.js",[],"/home/tika/Documents/maxwell-library-react/src/Components/Datepicker/Dates.js",[],"/home/tika/Documents/maxwell-library-react/src/Screens/Contents/TopUp/TopUp3.js",["162","163"],"/home/tika/Documents/maxwell-library-react/src/Screens/Contents/TopUp/FormInput.js",["164"],"/home/tika/Documents/maxwell-library-react/src/Screens/SideBar/SideBar.js",["165","166","167","168","169"],"/home/tika/Documents/maxwell-library-react/src/App.js",["170"],"/home/tika/Documents/maxwell-library-react/src/Instances/axios-instances.js",[],"/home/tika/Documents/maxwell-library-react/src/Screens/Contents/CategoryManagement/CategoryManagement.js",["171"],"/home/tika/Documents/maxwell-library-react/src/Screens/Contents/Payment/PaymentInvoicePrintPaid.js",["172"],"/home/tika/Documents/maxwell-library-react/src/Screens/Contents/Detail/Detail.js",["173","174"],"/home/tika/Documents/maxwell-library-react/src/Screens/NavBar/NavBar.js",["175","176","177","178","179","180","181"],"/home/tika/Documents/maxwell-library-react/src/Screens/Footer/Footer.js",[],"/home/tika/Documents/maxwell-library-react/src/Screens/Contents/BookManagement/BookManagement.js",["182"],"/home/tika/Documents/maxwell-library-react/src/Screens/Contents/Donation/Donation.js",["183","184"],"import React, { Component } from 'react';\nimport photo from '../../../Assets/Media/books/donate1.jpg'\nimport photo1 from '../../../Assets/Media/books/donate2.jpg'\nimport photo2 from '../../../Assets/Media/books/donate3.jpg'\nimport Swal from 'sweetalert2'\nimport Reactdom from 'react-dom'\nimport axios from 'axios'\n\nclass Donation extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      fields: {},     \n    };\n\n    this.postDonate = this.postDonate.bind(this)\n  }\n    submitdonate() {\n\n   \n    }\n    postDonate(e) {\n      let fields = this.state.fields;\n      e.preventDefault();\n       var Email = document.getElementById('inputEmail').value;\n       var Name = document.getElementById('inputName').value;\n       var PhoneNumber = document.getElementById('inputPhone').value;\n       var DonationNumber = document.getElementById('inputBookbybook').value;\n\n    if (Email === ''|| Name === ''|| PhoneNumber === ''|| DonationNumber === ''){\n        Swal.fire(\n            'Submit Failed !',\n            'You should fill in the blank',\n            'error'\n        );\n    }else{\n      \n      const donate = {\n          email : fields[\"Email\"],\n          name : fields[\"Name\"],\n          donationType : fields[\"DonationType\"],\n          totalBook : fields[\"TotalBook\"],\n          statusDonate : \"waiting\",\n          phoneNumber : fields[\"PhoneNumber\"]\n        }\n        console.log(fields)\n        console.log(donate)\n        axios.post('http://localhost:8080/donate', donate)\n             .then((response) => {\n               console.log(response)\n             })\n  \n        Swal.fire({\n          icon: 'success',\n          title: 'Success',\n          text: 'Your Data has been Added',\n          confirmButtonText: `OK`\n        }).then((result) => {\n            if(result.isConfirmed) {\n          \n            }\n        }).catch((error) => {\n          Swal.fire({\n          icon: 'error',\n          title: 'Error',\n          text: 'Your Data Has Not Been Successfully Added ',\n          confirmButtonText: `OK`\n        })\n        }) \n    }\n\n        \n          \n    }\n\n\n    handleChange(field, e) {\n      let fields = this.state.fields;\n      fields[field] = e.target.value;\n      this.setState({ fields });\n    }\n\n\n  render() {\n    return (\n      <div className=\"content-wrapper\">\n        {/* Content Header (Page header) */}\n        <section className=\"content-header\">\n          <div className=\"container-fluid\"></div>\n          {/* /.container-fluid */}\n        </section>\n        <section>\n          {/*Adding list donate reason*/}\n          <div className=\"list-reason\">\n            <center>\n              {' '}\n              <h1 className=\"title-text\">\n                GREAT REASONS TO DONATE GOOD USED BOOKS!\n              </h1>\n            </center>\n            <p>\n              Even in today’s high-tech world, traditional hard copy books still\n              have the amazing ability to offer inspiration, insight and\n              education. Sometimes, there’s just nothing better than holding a\n              book in your hand, rather than a cell phone or a tablet. Below are\n              some fantastic reasons why you should donate good quality used\n              books.\n            </p>\n          </div>\n          <div className=\"row\" id=\"reason\">\n            <div className=\"col-xs-4 col-sm-4 col-lg-4\">\n              <div className=\"card\" id=\"reasoncard\">\n                <img\n                  src={photo}\n                  className=\"card-img-top\"\n                  alt=\"donate1\"\n                />\n                <div className=\"card-body\">\n                  <h5 className=\"list-reason\">\n                  Lorem ipsum dolor sit amet consectetur, adipisicing elit.\n                  </h5>\n                  <p className=\"card-text\">\n                    Lorem ipsum dolor sit amet consectetur, adipisicing elit.\n                    Voluptate exercitationem reiciendis ipsa? Nihil laborum\n                    recusandae, vero voluptate incidunt quas? Dolor ab enim\n                    exercitationem sit quam reiciendis officiis sed sapiente\n                    aspernatur.\n                  </p>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-xs-4 col-sm-4 col-lg-4\">\n              <div className=\"card\" id=\"reasoncard\">\n                <img\n                  src={photo1}\n                  className=\"card-img-top\"\n                  alt=\"donate2\"\n                />\n                <div className=\"card-body\">\n                  <h5 className=\"list-reason\">\n                    Lorem ipsum dolor sit amet consectetur, adipisicing elit.\n                  </h5>\n                  <p className=\"card-text\">\n                    Lorem ipsum dolor sit amet consectetur, adipisicing elit.\n                    Voluptate exercitationem reiciendis ipsa? Nihil laborum\n                    recusandae, vero voluptate incidunt quas? Dolor ab enim\n                    exercitationem sit quam reiciendis officiis sed sapiente\n                    aspernatur.\n                  </p>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-xs-4 col-sm-4 col-lg-4\">\n              <div className=\"card\" id=\"reasoncard\">\n                <img\n                  src={photo2}\n                  className=\"card-img-top\"\n                  alt=\"donate3\"\n                />\n                <div className=\"card-body\">\n                  <h5 className=\"list-reason\">Lorem ipsum dolor sit amet consectetur, adipisicing elit.</h5>\n                  <p className=\"card-text\">\n                    Lorem ipsum dolor sit amet consectetur, adipisicing elit.\n                    Voluptate exercitationem reiciendis ipsa? Nihil laborum\n                    recusandae, vero voluptate incidunt quas? Dolor ab enim\n                    exercitationem sit quam reiciendis officiis sed sapiente\n                    aspernatur.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/*Donate Form*/}\n          {/* /.card */}\n          {/* Horizontal Form */}\n          <div className=\"card card-info\">\n            <div className=\"card-header\">\n              <h3 className=\"card-title\">Donation Form</h3>\n            </div>\n            {/* /.card-header */}\n            {/* form start */}\n            <form className=\"form-horizontal\"\n            onSubmit={this.postDonate.bind(this)}>\n              <div className=\"card-body\">\n                <div className=\"donate form-group row\">\n                  <label\n                    htmlFor=\"inputEmail\"\n                    className=\"col-sm-2 col-form-label\"\n                  >\n                    Email\n                  </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      type=\"email\"\n                      name=\"email\"\n                      className=\"form-control\"\n                      id=\"inputEmail\"\n                      placeholder=\"Email\"\n                      onChange={this.handleChange.bind(this, \"Email\")}\n                      value={this.state.fields[\"Email\"]}\n                    />\n                  </div>\n                </div>\n                <div className=\"donate form-group row\">\n                  <label\n                    htmlFor=\"inputName\"\n                    className=\"col-sm-2 col-form-label\"\n                  >\n                    Name\n                  </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      type=\"text\"\n                      name=\"name\"\n                      className=\"form-control\"\n                      id=\"inputName\"\n                      placeholder=\"Name\"\n                      onChange={this.handleChange.bind(this, \"Name\")}\n                      value={this.state.fields[\"Name\"]}\n                    />\n                  </div>\n                </div>\n                <div className=\"donate form-group row\">\n                  <label\n                    htmlFor=\"inputDonationtype\"\n                    className=\"col-sm-2 col-form-label\"\n                  >\n                    Donation Type\n                  </label>\n                  <div className=\"col-sm-10\">\n                      <select class=\"custom-select\" onChange={this.handleChange.bind(this, \"DonationType\")}>\n                        <option value = \"person\">Person</option>\n                        <option value = \"organization\">Organization</option>\n                      </select>\n                  </div>\n                </div>\n                <div className=\"donate form-group row\">\n                  <label\n                    htmlFor=\"inputNumberofphone3\"\n                    className=\"col-sm-2 col-form-label\"\n\n                  >\n                    Phone Number\n                  </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      type=\"text\"\n                      name=\"phone_number\"\n                      className=\"form-control\"\n                      id=\"inputPhone\"\n                      placeholder=\"Phone Number\"\n                      onChange={this.handleChange.bind(this, \"PhoneNumber\")}\n                      value={this.state.fields[\"PhoneNumber\"]}\n                    />\n                  </div>\n                </div>\n                <div className=\"donate form-group row\">\n                  <label\n                    htmlFor=\"inputNumberofbook\"\n                    className=\"col-sm-2 col-form-label\"\n                  >\n                    Total Book by number\n                  </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      type=\"text\"\n                      name=\"number_donation\"\n                      className=\"form-control\"\n                      id=\"inputBookbybook\"\n                      placeholder=\"1,2,3,...\"\n                       onChange={this.handleChange.bind(this, \"TotalBook\")}\n                        value={this.state.fields[\"TotalBook\"]}\n                    />\n                  </div>\n                </div>\n              </div>\n              {/* /.card-body */}\n              <div className=\"card-footer\">\n                <button type=\"submit\" className=\"btn-submitform\">\n                  <a\n                    className=\"btn btn-info float-right\"\n                  >\n                    Submit\n                  </a>\n                </button>\n              </div>\n              {/* /.card-footer */}\n            </form>\n          </div>\n        </section>\n        {/* /.content-wrapper */}\n      </div>\n    );\n  }\n}\n \nexport default Donation;","/home/tika/Documents/maxwell-library-react/src/Components/Datatable/Cell.js",["185"],"/home/tika/Documents/maxwell-library-react/src/Screens/Contents/TopUp/showResult.js",["186","187","188"],{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":5,"column":10,"nodeType":"195","messageId":"196","endLine":5,"endColumn":14},{"ruleId":"193","severity":1,"message":"197","line":5,"column":16,"nodeType":"195","messageId":"196","endLine":5,"endColumn":24},{"ruleId":"198","severity":1,"message":"199","line":36,"column":91,"nodeType":"200","messageId":"201","endLine":36,"endColumn":93},{"ruleId":"198","severity":1,"message":"199","line":74,"column":91,"nodeType":"200","messageId":"201","endLine":74,"endColumn":93},{"ruleId":"198","severity":1,"message":"199","line":110,"column":95,"nodeType":"200","messageId":"201","endLine":110,"endColumn":97},{"ruleId":"202","severity":1,"message":"203","line":267,"column":17,"nodeType":"204","endLine":267,"endColumn":81},{"ruleId":"205","severity":1,"message":"206","line":364,"column":17,"nodeType":"204","endLine":364,"endColumn":53},{"ruleId":"193","severity":1,"message":"207","line":5,"column":8,"nodeType":"195","messageId":"196","endLine":5,"endColumn":13},{"ruleId":"198","severity":1,"message":"208","line":136,"column":23,"nodeType":"200","messageId":"201","endLine":136,"endColumn":25},{"ruleId":"209","severity":1,"message":"210","line":158,"column":28,"nodeType":"204","endLine":158,"endColumn":76},{"ruleId":"209","severity":1,"message":"210","line":18,"column":17,"nodeType":"204","endLine":21,"endColumn":19},{"ruleId":"211","severity":1,"message":"212","line":49,"column":23,"nodeType":"213","messageId":"214","endLine":49,"endColumn":25},{"ruleId":"215","severity":1,"message":"216","line":64,"column":15,"nodeType":"204","endLine":64,"endColumn":53},{"ruleId":"215","severity":1,"message":"216","line":67,"column":15,"nodeType":"204","endLine":67,"endColumn":53},{"ruleId":"198","severity":1,"message":"199","line":74,"column":22,"nodeType":"200","messageId":"201","endLine":74,"endColumn":24},{"ruleId":"193","severity":1,"message":"194","line":4,"column":10,"nodeType":"195","messageId":"196","endLine":4,"endColumn":14},{"ruleId":"193","severity":1,"message":"217","line":5,"column":8,"nodeType":"195","messageId":"196","endLine":5,"endColumn":12},{"ruleId":"193","severity":1,"message":"218","line":11,"column":10,"nodeType":"195","messageId":"196","endLine":11,"endColumn":17},{"ruleId":"193","severity":1,"message":"219","line":13,"column":8,"nodeType":"195","messageId":"196","endLine":13,"endColumn":19},{"ruleId":"220","severity":1,"message":"221","line":27,"column":7,"nodeType":"222","messageId":"201","endLine":27,"endColumn":11},{"ruleId":"198","severity":1,"message":"199","line":44,"column":25,"nodeType":"200","messageId":"201","endLine":44,"endColumn":27},{"ruleId":"198","severity":1,"message":"199","line":158,"column":31,"nodeType":"200","messageId":"201","endLine":158,"endColumn":33},{"ruleId":"198","severity":1,"message":"199","line":165,"column":38,"nodeType":"200","messageId":"201","endLine":165,"endColumn":40},{"ruleId":"198","severity":1,"message":"199","line":197,"column":25,"nodeType":"200","messageId":"201","endLine":197,"endColumn":27},{"ruleId":"198","severity":1,"message":"199","line":209,"column":26,"nodeType":"200","messageId":"201","endLine":209,"endColumn":28},{"ruleId":"198","severity":1,"message":"199","line":258,"column":15,"nodeType":"200","messageId":"201","endLine":258,"endColumn":17},{"ruleId":"198","severity":1,"message":"199","line":305,"column":26,"nodeType":"200","messageId":"201","endLine":305,"endColumn":28},{"ruleId":"193","severity":1,"message":"223","line":356,"column":35,"nodeType":"195","messageId":"196","endLine":356,"endColumn":39},{"ruleId":"215","severity":1,"message":"216","line":381,"column":19,"nodeType":"204","endLine":381,"endColumn":167},{"ruleId":"205","severity":1,"message":"206","line":397,"column":17,"nodeType":"204","endLine":401,"endColumn":18},{"ruleId":"215","severity":1,"message":"216","line":556,"column":19,"nodeType":"204","endLine":556,"endColumn":145},{"ruleId":"205","severity":1,"message":"206","line":569,"column":17,"nodeType":"204","endLine":573,"endColumn":18},{"ruleId":"209","severity":1,"message":"210","line":79,"column":61,"nodeType":"204","endLine":79,"endColumn":109},{"ruleId":"193","severity":1,"message":"224","line":12,"column":25,"nodeType":"195","messageId":"196","endLine":12,"endColumn":33},{"ruleId":"193","severity":1,"message":"225","line":12,"column":49,"nodeType":"195","messageId":"196","endLine":12,"endColumn":59},{"ruleId":"193","severity":1,"message":"226","line":2,"column":21,"nodeType":"195","messageId":"196","endLine":2,"endColumn":29},{"ruleId":"193","severity":1,"message":"207","line":9,"column":8,"nodeType":"195","messageId":"196","endLine":9,"endColumn":13},{"ruleId":"198","severity":1,"message":"199","line":41,"column":26,"nodeType":"200","messageId":"201","endLine":41,"endColumn":28},{"ruleId":"193","severity":1,"message":"227","line":69,"column":13,"nodeType":"195","messageId":"196","endLine":69,"endColumn":20},{"ruleId":"202","severity":1,"message":"203","line":94,"column":17,"nodeType":"204","endLine":94,"endColumn":112},{"ruleId":"215","severity":1,"message":"216","line":136,"column":17,"nodeType":"204","endLine":136,"endColumn":50},{"ruleId":"193","severity":1,"message":"219","line":4,"column":8,"nodeType":"195","messageId":"196","endLine":4,"endColumn":19},{"ruleId":"211","severity":1,"message":"212","line":41,"column":35,"nodeType":"213","messageId":"214","endLine":41,"endColumn":37},{"ruleId":"209","severity":1,"message":"210","line":18,"column":17,"nodeType":"204","endLine":21,"endColumn":19},{"ruleId":"209","severity":1,"message":"210","line":105,"column":21,"nodeType":"204","endLine":105,"endColumn":104},{"ruleId":"209","severity":1,"message":"210","line":112,"column":23,"nodeType":"204","endLine":112,"endColumn":77},{"ruleId":"193","severity":1,"message":"228","line":2,"column":28,"nodeType":"195","messageId":"196","endLine":2,"endColumn":39},{"ruleId":"193","severity":1,"message":"194","line":4,"column":9,"nodeType":"195","messageId":"196","endLine":4,"endColumn":13},{"ruleId":"215","severity":1,"message":"216","line":30,"column":17,"nodeType":"204","endLine":30,"endColumn":154},{"ruleId":"229","severity":1,"message":"230","line":30,"column":17,"nodeType":"204","endLine":30,"endColumn":154},{"ruleId":"215","severity":1,"message":"216","line":44,"column":17,"nodeType":"204","endLine":44,"endColumn":154},{"ruleId":"229","severity":1,"message":"230","line":44,"column":17,"nodeType":"204","endLine":44,"endColumn":154},{"ruleId":"215","severity":1,"message":"216","line":66,"column":21,"nodeType":"204","endLine":66,"endColumn":91},{"ruleId":"211","severity":1,"message":"212","line":49,"column":29,"nodeType":"213","messageId":"214","endLine":49,"endColumn":31},{"ruleId":"193","severity":1,"message":"231","line":6,"column":8,"nodeType":"195","messageId":"196","endLine":6,"endColumn":16},{"ruleId":"215","severity":1,"message":"232","line":281,"column":19,"nodeType":"204","endLine":283,"endColumn":20},{"ruleId":"193","severity":1,"message":"233","line":1,"column":17,"nodeType":"195","messageId":"196","endLine":1,"endColumn":26},{"ruleId":"193","severity":1,"message":"234","line":2,"column":8,"nodeType":"195","messageId":"196","endLine":2,"endColumn":13},{"ruleId":"193","severity":1,"message":"235","line":5,"column":7,"nodeType":"195","messageId":"196","endLine":5,"endColumn":12},{"ruleId":"198","severity":1,"message":"199","line":17,"column":25,"nodeType":"200","messageId":"201","endLine":17,"endColumn":27},"no-native-reassign",["236"],"no-negated-in-lhs",["237"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","'Axios' is defined but never used.","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Card' is defined but never used.","'MDBIcon' is defined but never used.","'AuthService' is defined but never used.","no-dupe-keys","Duplicate key 'data'.","ObjectExpression","'user' is assigned a value but never used.","'pristine' is assigned a value but never used.","'submitting' is assigned a value but never used.","'FormText' is defined but never used.","'balance' is assigned a value but never used.","'useCallback' is defined but never used.","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role link. This role is implicit on the element a.","'Reactdom' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Component' is defined but never used.","'axios' is defined but never used.","'sleep' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]