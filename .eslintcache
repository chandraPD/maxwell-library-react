[{"D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\SlideShowManagement\\SlideShowManagement.js":"1","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\BookManagement\\BookManagement.js":"2","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\TopUpManagement\\TopUpManagement.js":"3"},{"size":20917,"mtime":1610529981339,"results":"4","hashOfConfig":"5"},{"size":32074,"mtime":1610529981320,"results":"6","hashOfConfig":"5"},{"size":28361,"mtime":1610529981326,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"19k8gcz",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"13","messages":"14","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\SlideShowManagement\\SlideShowManagement.js",["15"],"import React, { Component } from \"react\";\r\nimport SuccessImg from '../../../Assets/Media/check.png'\r\nimport DataTable from \"../../../Components/Datatable/Table\";\r\nimport Action from \"../../../Components/Datatable/Action\";\r\nimport $ from 'jquery'\r\nimport 'bootstrap'\r\nimport Swal from 'sweetalert2'\r\nimport Axios from '../../../Instances/axios-instances';\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass SlideShowManagement extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n      fields: {},\r\n      errors: {},\r\n      data: [],\r\n      rows: [],\r\n      results: [],\r\n      statusShow : \"\",\r\n      chooseFile: \"Choose File\",\r\n      uploadImage : \"\"\r\n    };\r\n  }\r\n\r\n  //METHOD TAMBAHAN GET POST UPDATE DELETE  \r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  async fetchData() {\r\n    $('#example1').DataTable().destroy();\r\n    await Axios.get('slideshow/get-all-slideshow')\r\n      .then((fetchedData)=> { \r\n        console.log(fetchedData);\r\n        const resultSlideShow = fetchedData.data;\r\n        this.setState({ data : resultSlideShow });\r\n        const results = [];\r\n        const result = this.state.data;\r\n        var number = 1;\r\n        \r\n        result.map((slideshow) => {\r\n              var row = [];\r\n        \r\n              //UNTUK KOLOM NOMER\r\n              row.push(\r\n                <td className=\"text-center\">{number++}</td>\r\n                );\r\n\r\n              //UNTUK TOMBOL EDIT DAN DELETE\r\n              row.push(\r\n                <td className=\"text-center py-0 align-middle\">\r\n                  <div className=\"btn-group btn-group-sm\">\r\n                    <Action type=\"success\" title=\"Edit\" icon=\"pen\" dataToggle=\"modal\" dataTarget=\"#modal-edit\" onClick={() => this.getSlideShowById(slideshow.slideShowId)}/>\r\n                    <Action type=\"danger\" title=\"Delete\" icon=\"trash\" dataToggle=\"modal\" dataTarget=\"#modal-delete\" onClick={() => this.getSlideShowById(slideshow.slideShowId)}/>\r\n                  </div>\r\n                </td>\r\n              );\r\n\r\n              //UNTUK OPTION ACTIVE DAN INACTIVE\r\n              row.push(\r\n                <td className=\"text-center py-0 align-middle\">\r\n                <select name=\"statusShow\" id=\"dropdown\" className=\"custom-select\"\r\n                  value = {slideshow.statusShow === true ? \"1\" : \"0\"}\r\n                  onChange={(e) => this.handleDropdownChange(slideshow.slideShowId, e)}>\r\n                    <option value='1'>Active</option>\r\n                    <option value='0'>Inactive</option>\r\n                  </select>\r\n                </td>\r\n              );\r\n\r\n              //UNTUK MENAMPILKAN JUDUL\r\n              row.push(\r\n                <td>{slideshow.title}</td>\r\n              );\r\n\r\n              //UNTUK MENAMPILKAN SUBJUDUL\r\n              row.push(\r\n                <td>{slideshow.subTitle}</td>\r\n              );\r\n\r\n              //UNTUK MENAMPILKAN GAMBAR\r\n              row.push(\r\n                <td><img src={slideshow.img} alt =\"gambar buku\" \r\n                style={{width: \"10rem\", display: \"block\", marginLeft: \"auto\", marginRight: \"auto\"}}/>\r\n                </td>\r\n              );\r\n              results.push(row)\r\n            })\r\n\r\n            this.setState({ rows: results });\r\n            $(\"#example1\").DataTable({\r\n              responsive: true,\r\n              autoWidth: false,\r\n          });\r\n        });\r\n  }\r\n\r\n \r\n  //FUNGSI TOMBOL SUBMIT PADA MODAL ADD SLIDESHOW\r\n  submitSlideShow = () => {\r\n    const slideshow = {\r\n        title : this.state.title,\r\n        subTitle : this.state.subTitle,\r\n        img : this.state.uploadImage\r\n      };\r\n\r\n    Axios.post('slideshow/add-slideshow', slideshow)\r\n      .then((response) => {\r\n        console.log(response)\r\n      })\r\n   \r\n    $('#example1').DataTable({\r\n      responsive: true,\r\n      autoWidth: false,\r\n    });\r\n  }\r\n  \r\n  //VALIDASI UNTUK ADD SLIDESHOW\r\n  handleValidation() {\r\n    let fields = this.state.fields;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    //Title\r\n    if (!fields[\"slideshowTitle\"]) {\r\n      formIsValid = false;\r\n      errors[\"slideshowTitle\"] = \"Slideshow Title cannot be empty\";\r\n    }\r\n\r\n    //Subtitle\r\n    if (!fields[\"slideshowSubTitle\"]) {\r\n      formIsValid = false;\r\n      errors[\"slideshowSubTitle\"] = \"Slideshow Subtitle cannot be empty\";\r\n    }\r\n\r\n    //Image\r\n    if(this.state.img === \"\"){\r\n      formIsValid = false;\r\n      errors[\"slideshowImage\"] = \"Image cannot be empty\"\r\n    }\r\n\r\n    this.setState({ errors: errors });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleUpdateValidation(){\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    if(this.state.title === \"\"){\r\n      formIsValid = false;\r\n      errors[\"slideshowTitle\"] = \"Title cannot be empty\" \r\n    }\r\n      \r\n\r\n    if(this.state.subTitle === \"\"){\r\n      formIsValid = false;\r\n      errors[\"slideshowSubTitle\"] = \"Sub Title cannot be empty\"\r\n    }\r\n\r\n    if(this.state.img === \"\"){\r\n      formIsValid = false;\r\n      errors[\"slideshowImage\"] = \"Image cannot be empty\"\r\n    }\r\n\r\n    this.setState({ errors : errors});\r\n    return formIsValid;\r\n  }\r\n\r\n  //FUNGSI UNTUK TOMBOL SUMBIT SAAT ADD-SLIDESHOW DITEKAN\r\n  contactSubmit(e){\r\n    e.preventDefault();\r\n    const fields = this.state.fields;\r\n    if (this.handleValidation()) {\r\n      $('#modal-add').modal('toggle');\r\n\r\n      const slideshow = {\r\n        title : fields[\"slideshowTitle\"], \r\n        subTitle : fields[\"slideshowSubTitle\"],\r\n        img : this.state.uploadImage\r\n      }\r\n      console.log(slideshow)\r\n\r\n      let user = JSON.parse(localStorage.getItem('user'))\r\n      const userToken = user.token;\r\n      console.log(userToken);\r\n\r\n      const config = {\r\n        headers : { Authorization : `Bearer ${userToken}`}\r\n      }\r\n      Axios.post('slideshow/add-slideshow', slideshow, config)\r\n          .then((response) => {\r\n            console.log(response);\r\n            $('.modal-backdrop').remove();\r\n            Swal.fire({\r\n              icon: 'success',\r\n              title: 'Success',\r\n              text: 'Your Data has been Added',\r\n              confirmButtonText: `OK`,\r\n            }).then((result) => {\r\n                if(result.isConfirmed) {\r\n                  this.resetModal();\r\n                  this.fetchData();\r\n                  \r\n                }\r\n              });\r\n            })\r\n            \r\n      } else {\r\n        Swal.fire({\r\n          icon: 'warning',\r\n          title: 'Sorry !',\r\n          text: 'You Must Fill The Requirement !',\r\n          confirmButtonText: `OK`\r\n        }).then((result) => {\r\n            if(result.isConfirmed) {\r\n              console.log(result);\r\n            }\r\n        })\r\n\r\n      }\r\n    }\r\n    \r\n\r\n  //METHOD UNTUK GET-BY-ID\r\n  getSlideShowById = (id) => {\r\n    let user = JSON.parse( localStorage.getItem('user'))\r\n    const userToken = user.token;\r\n    console.log(userToken);\r\n\r\n    const config = {\r\n      headers : { Authorization : `Bearer ${userToken}`}\r\n    }\r\n\r\n    Axios.get('slideshow/get-slideshow-byId/' + id, config)\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({\r\n          slideShowId : response.data.data.slideShowId,\r\n          title : response.data.data.title,\r\n          subTitle : response.data.data.subTitle,\r\n          img : response.data.data.img\r\n        })\r\n      })\r\n  }\r\n\r\n  //METHOD UNTUK UPDATE\r\n  editSlideShow = (id) => {\r\n    \r\n    const slideshow = {\r\n      title : this.state.title,\r\n      subTitle : this.state.subTitle,\r\n      img : this.state.uploadImage\r\n    }\r\n    console.log(slideshow.img);\r\n\r\n    let user = JSON.parse(localStorage.getItem('user'))\r\n      const userToken = user.token;\r\n      console.log(userToken);\r\n\r\n      const config = {\r\n        headers : { Authorization : `Bearer ${userToken}`}\r\n      }\r\n\r\n    if(this.handleUpdateValidation()){\r\n      Axios.put('slideshow/update-slideshow/' + id, slideshow, config)\r\n      .then((response) => {\r\n        console.log(response);\r\n        $(\"#modal-edit\").modal(\"toggle\");\r\n        $('.modal-backdrop').remove();\r\n    });\r\n      Swal.fire({\r\n        icon: 'success',\r\n        title: 'Success',\r\n        text: 'Your Data has been Update',\r\n        confirmButtonText: `OK`\r\n      }).then((result) => {\r\n          if(result.isConfirmed) {\r\n            this.fetchData();\r\n          }\r\n      })\r\n    } else {\r\n        Swal.fire({\r\n          icon: 'warning',\r\n          title: 'Sorry !',\r\n          text: 'You Must Fill The Requirement !',\r\n          confirmButtonText: `OK`\r\n        }).then((result) => {\r\n            if(result.isConfirmed) {\r\n              console.log(result);\r\n        }\r\n      });\r\n    }\r\n}\r\n\r\n\r\n  //METHOD DELETE DATA\r\n  deleteDataSlideShow = (id) => {\r\n      let user = JSON.parse(localStorage.getItem('user'))\r\n      const userToken = user.token;\r\n      console.log(userToken);\r\n\r\n      const config = {\r\n        headers : { Authorization : `Bearer ${userToken}`}\r\n      }\r\n    Axios.delete('slideshow/delete-data-slideshow/'+ id, config)\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.fetchData();\r\n      })\r\n  }\r\n  //METHOD Perubahan Inputan di SlideShow\r\n  slideShowChange = (event) => {\r\n      this.setState({\r\n        [event.target.name] : event.target.value\r\n      });\r\n  }\r\n\r\n  handleChange(field, e) {\r\n    let fields = this.state.fields;\r\n    fields[field] = e.target.value;\r\n    this.setState({ fields });\r\n  }\r\n\r\n   // SAVE STATUS ACTIVE OR INACTIVE\r\n  handleDropdownChange = (id, event) => {\r\n    \r\n    let user = JSON.parse( localStorage.getItem('user'))\r\n    const userToken = user.token;\r\n    console.log(userToken);\r\n\r\n    console.log(id);\r\n    \r\n    const status = event.target.value;\r\n    console.log(status);\r\n    const config = {\r\n      headers : { Authorization : `Bearer ${userToken}`}\r\n    }\r\n\r\n    Axios.put(`slideshow/update-status/${id}/${status}`,null, config)\r\n    .then((response) => {\r\n      console.log(response);\r\n      this.fetchData();\r\n    })\r\n\r\n  }\r\n\r\n  // Handle Upload Slide Show Image\r\n  handleUploadImage = (e) => {\r\n    const file = e.target.files[0];\r\n    this.setState({\r\n      chooseFile : file.name\r\n    });\r\n    console.log(file);\r\n\r\n    const reader = new FileReader();\r\n    console.log(reader);\r\n    reader.readAsDataURL(file);\r\n    reader.onload = e => {\r\n      let base64Image = e.target.result;\r\n      let base64ImageStrip = base64Image.split(\"base64,\")[1];\r\n\r\n      this.setState({\r\n        //setState dalam bentuk Base64\r\n        uploadImage : base64ImageStrip\r\n      });\r\n      // console.log(this.state.uploadImage);\r\n      \r\n    }\r\n  }\r\n\r\n  resetModal() {\r\n    let fields = this.state.fields\r\n    fields[\"slideshowTitle\"] = \"\"\r\n    fields[\"slideshowSubTitle\"] = \"\"\r\n    fields[\"slideshowImage\"] = \"\"\r\n   \r\n\r\n    let errors = {}\r\n    errors[\"slideshowTitle\"] = \"\"\r\n    errors[\"slideshowSubTitle\"] = \"\"\r\n    errors[\"slideshowImage\"] = \"\"\r\n\r\n\r\n    this.setState({fields: fields})\r\n    this.setState({errors: errors})\r\n    this.setState({chooseFile: \"Choose File\"})\r\n  }\r\n\r\n  render() {\r\n    const { rows } = this.state\r\n    const headings = [\"No.\", \"Action\", \"Status\", \"Title\", \"Sub Title\", \"Image\"]\r\n    return (\r\n      <div className=\"content-wrapper\">\r\n        {/* <!-- Content Header (Page header) --> */}\r\n        <section className=\"content-header\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col-sm-6\"><h3>Slide Show Management</h3></div>\r\n              <div className=\"col-sm-6\">\r\n                <ol className=\"breadcrumb float-sm-right\">\r\n<<<<<<< HEAD\r\n                  <li className=\"breadcrumb-item\">\r\n                    <a href='index.html'>Home</a>\r\n                  </li>\r\n                  <li className=\"breadcrumb-item active\">Slide Show</li>\r\n=======\r\n                  <li className=\"breadcrumb-item\"><Link to=\"/index\">Home</Link></li>\r\n                  <li className=\"breadcrumb-item active\">Slideshow</li>\r\n>>>>>>> 787d1e38cb77660232a3466b8d97263c6e1ced80\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* <!-- /.container-fluid --> */}\r\n        </section>\r\n\r\n        <section className=\"content pdg-btm\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\"></div>\r\n                <div className=\"col-md-6 ctm-responsive\">\r\n                  <button type=\"button\" className=\"btn btn-primary add-btn\" data-toggle=\"modal\" data-target=\"#modal-add\"\r\n                    style={{float:\"right\"}}>\r\n                    <i className=\"nav-icon fas fa-plus\"></i>\r\n                      Add Slide Show Photo\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"card-body\">\r\n            <DataTable headings={headings} rows={rows} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n        {/* Modal Add */}\r\n      <div class=\"modal fade\" id=\"modal-add\">\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h4 class=\"modal-title\">Add New Slide Show Image</h4>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <form role=\"form\" id=\"addSlideshow\" onSubmit={this.contactSubmit.bind(this)}>\r\n            <div class=\"modal-body\">\r\n              <div class=\"card-body\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"inputTitle\">Title</label>\r\n                  <input type=\"text\" class=\"form-control\" name=\"slideshowTitle\" id=\"inputTitle\"\r\n                    placeholder=\"Enter Title\" onChange={this.handleChange.bind(this, \"slideshowTitle\")}\r\n                    value={this.state.fields[\"slideshowTitle\"]}/>\r\n                    <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"slideshowTitle\"]}\r\n                      </span>\r\n                </div>\r\n                \r\n                <div class=\"form-group\">\r\n                  <label for=\"inputSubTitle\">Sub Title</label>\r\n                  <input type=\"text\" class=\"form-control\" name=\"slideshowSubTitle\" id=\"inputSubTitle\"\r\n                    placeholder=\"Enter Sub Title\" onChange={this.handleChange.bind(this, \"slideshowSubTitle\")} value={this.state.fields[\"slideshowSubTitle\"]}/>\r\n                    <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"slideshowSubTitle\"]}\r\n                      </span>\r\n                </div>\r\n                \r\n                <div class=\"form-group\">\r\n                  <label for=\"addSlideshowImg\">Choose Image</label>\r\n                  <div class=\"input-group\">\r\n                    <div class=\"custom-file\">\r\n                      <input type=\"file\" accept=\"image/*\" class=\"custom-file-input\" id=\"addSlideshowImg\" name=\"img\" onChange={this.handleUploadImage}\r\n                      value={this.state.fields[\"slideshowImage\"]}/>\r\n                      <label class=\"custom-file-label\" for=\"exampleInputFile\" style={{overflow : \"hidden\"}}>{this.state.chooseFile}</label>                   \r\n                    </div>\r\n                  </div>\r\n                  <span class=\"text-danger\">Minimum size is 300x100 px</span> <br/>\r\n                  <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"slideshowImage\"]}\r\n                  </span>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n            <div class=\"modal-footer justify-content-between\">\r\n              <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" onClick={() => this.resetModal()}>Close</button>\r\n              <button type=\"submit\" class=\"btn btn-warning\">Add</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        {/* <!-- /.modal-content --> */}\r\n      </div>\r\n      {/* <!-- /.modal-dialog --> */}\r\n    </div>\r\n\r\n    {/* <!--Modal Edit--> */}\r\n    <div class=\"modal fade\" id=\"modal-edit\">\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h4 class=\"modal-title\">Edit Slideshow</h4>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <form role=\"form\" id=\"editSlideshow\">\r\n            <div class=\"modal-body\">\r\n              <div class=\"card-body\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"editTitle\">Title</label>\r\n                  <input type=\"text\" class=\"form-control\" name=\"title\" id=\"editTitle\" value ={this.state.title} \r\n                  onChange={this.slideShowChange}/>\r\n                  <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"slideshowTitle\"]}\r\n                  </span>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label for=\"inputSubTitle\">Sub Title</label>\r\n                  <input type=\"text\" class=\"form-control\" name=\"subTitle\" id=\"inputCategoryName\"\r\n                    value={this.state.subTitle} \r\n                    onChange={this.slideShowChange}/>\r\n                  <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"slideshowSubTitle\"]}\r\n                  </span>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label for=\"exampleInputFile\">Change Image</label>\r\n                  <div class=\"input-group\">\r\n                    <div class=\"custom-file\">\r\n                      <input type=\"file\" class=\"custom-file-input\" id=\"exampleInputFile\" name=\"img\" \r\n                      onChange={this.handleUploadImage}/>\r\n                      <label class=\"custom-file-label\" for=\"exampleInputFile\" style={{ overflow : \"hidden\"}}>{this.state.img}</label>\r\n                    </div>\r\n                  </div>\r\n                  <span class=\"text-danger\">Minimum size is 300x100 px</span> <br/>\r\n                  <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"slideshowImage\"]}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"modal-footer justify-content-between\">\r\n              <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" onClick={() => this.resetModal()}>Cancel</button>\r\n              <button id=\"submitEdit\" type=\"button\" onClick={() => this.editSlideShow(this.state.slideShowId)} class=\"btn btn-warning\">Save changes</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        {/* <!-- /.modal-content --> */}\r\n      </div>\r\n      {/* <!-- /.modal-dialog --> */}\r\n    </div>\r\n\r\n    {/* <!--Modal Delete--> */}\r\n    <div class=\"modal fade\" id=\"modal-delete\">\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h4 class=\"modal-title\">Delete Slideshow</h4>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            If you Delete this, you can't be returned\r\n          </div>\r\n          <div class=\"modal-footer justify-content-between\">\r\n            <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Cancel</button>\r\n            <button class=\"btn btn-warning\" data-toggle=\"modal\" data-target=\"#DeleteSuccess\"\r\n              data-dismiss=\"modal\" onClick={() => this.deleteDataSlideShow(this.state.slideShowId)}>Delete</button>\r\n          </div>\r\n        </div>\r\n        {/* <!-- /.modal-content --> */}\r\n      </div>\r\n      {/* <!-- /.modal-dialog --> */}\r\n    </div>\r\n\r\n    {/* <!--Delete Completed--> */}\r\n    <div class=\"modal fade\" id=\"DeleteSuccess\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabesl\"\r\n      aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\">Delete Complete!</h5>\r\n            <button class=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">×</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <img class=\"check\" src={SuccessImg}/>\r\n            <p>Data has been deleted</p>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button class=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\">Close</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SlideShowManagement;\r\n","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\BookManagement\\BookManagement.js",["16"],"D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\TopUpManagement\\TopUpManagement.js",["17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34"],{"ruleId":null,"fatal":true,"severity":2,"message":"35","line":404,"column":2},{"ruleId":"36","severity":1,"message":"37","line":65,"column":29,"nodeType":"38","messageId":"39","endLine":65,"endColumn":31},{"ruleId":"40","severity":1,"message":"41","line":4,"column":10,"nodeType":"42","messageId":"43","endLine":4,"endColumn":14},{"ruleId":"40","severity":1,"message":"44","line":5,"column":8,"nodeType":"42","messageId":"43","endLine":5,"endColumn":12},{"ruleId":"40","severity":1,"message":"45","line":11,"column":10,"nodeType":"42","messageId":"43","endLine":11,"endColumn":17},{"ruleId":"40","severity":1,"message":"46","line":13,"column":8,"nodeType":"42","messageId":"43","endLine":13,"endColumn":19},{"ruleId":"47","severity":1,"message":"48","line":28,"column":7,"nodeType":"49","messageId":"50","endLine":28,"endColumn":11},{"ruleId":"51","severity":1,"message":"52","line":46,"column":25,"nodeType":"53","messageId":"50","endLine":46,"endColumn":27},{"ruleId":"51","severity":1,"message":"52","line":171,"column":31,"nodeType":"53","messageId":"50","endLine":171,"endColumn":33},{"ruleId":"51","severity":1,"message":"52","line":178,"column":38,"nodeType":"53","messageId":"50","endLine":178,"endColumn":40},{"ruleId":"51","severity":1,"message":"52","line":200,"column":15,"nodeType":"53","messageId":"50","endLine":200,"endColumn":17},{"ruleId":"51","severity":1,"message":"52","line":220,"column":25,"nodeType":"53","messageId":"50","endLine":220,"endColumn":27},{"ruleId":"51","severity":1,"message":"52","line":232,"column":26,"nodeType":"53","messageId":"50","endLine":232,"endColumn":28},{"ruleId":"51","severity":1,"message":"52","line":280,"column":15,"nodeType":"53","messageId":"50","endLine":280,"endColumn":17},{"ruleId":"51","severity":1,"message":"52","line":331,"column":26,"nodeType":"53","messageId":"50","endLine":331,"endColumn":28},{"ruleId":"40","severity":1,"message":"54","line":386,"column":35,"nodeType":"42","messageId":"43","endLine":386,"endColumn":39},{"ruleId":"55","severity":1,"message":"56","line":411,"column":19,"nodeType":"57","endLine":411,"endColumn":167},{"ruleId":"58","severity":1,"message":"59","line":427,"column":17,"nodeType":"57","endLine":431,"endColumn":18},{"ruleId":"55","severity":1,"message":"56","line":586,"column":19,"nodeType":"57","endLine":586,"endColumn":145},{"ruleId":"58","severity":1,"message":"59","line":599,"column":17,"nodeType":"57","endLine":603,"endColumn":18},"Parsing error: Unexpected token\n\n  402 |               <div className=\"col-sm-6\">\n  403 |                 <ol className=\"breadcrumb float-sm-right\">\n> 404 | <<<<<<< HEAD\n      |  ^\n  405 |                   <li className=\"breadcrumb-item\">\n  406 |                     <a href='index.html'>Home</a>\n  407 |                   </li>","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'MDBIcon' is defined but never used.","'AuthService' is defined but never used.","no-dupe-keys","Duplicate key 'data'.","ObjectExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'user' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided."]