[{"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\SlideShowManagement\\SlideShowManagement.js":"1","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUpManagement\\TopUpManagement.js":"2","C:\\Users\\ASUS\\maxwell-library-react\\src\\index.js":"3","C:\\Users\\ASUS\\maxwell-library-react\\src\\Services\\auth.service.js":"4","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Payment\\Payment.js":"5","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\FineManagement\\FineManagement.js":"6","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Footer\\Footer.js":"7","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Donation\\Donation.js":"8","C:\\Users\\ASUS\\maxwell-library-react\\src\\Components\\Datatable\\Status.js":"9","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\Validate.js":"10","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\TopUp.js":"11","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\SideBar\\SideBar.js":"12","C:\\Users\\ASUS\\maxwell-library-react\\src\\Instances\\axios-instances.js":"13","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Detail\\Detail.js":"14","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\DetailInvoice\\DetailInvoice.js":"15","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\TopUp4.js":"16","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\showResult.js":"17"},{"size":17317,"mtime":1609940010557,"results":"18","hashOfConfig":"19"},{"size":27192,"mtime":1609942110445,"results":"20","hashOfConfig":"19"},{"size":937,"mtime":1609682650008,"results":"21","hashOfConfig":"19"},{"size":870,"mtime":1609817339963,"results":"22","hashOfConfig":"19"},{"size":14839,"mtime":1609843597899,"results":"23","hashOfConfig":"19"},{"size":6169,"mtime":1609843597898,"results":"24","hashOfConfig":"19"},{"size":519,"mtime":1606198920912,"results":"25","hashOfConfig":"19"},{"size":11011,"mtime":1609912342780,"results":"26","hashOfConfig":"19"},{"size":142,"mtime":1606362277693,"results":"27","hashOfConfig":"19"},{"size":1069,"mtime":1609905735501,"results":"28","hashOfConfig":"19"},{"size":1378,"mtime":1609931176996,"results":"29","hashOfConfig":"19"},{"size":9108,"mtime":1609936980121,"results":"30","hashOfConfig":"19"},{"size":226,"mtime":1609936582176,"results":"31","hashOfConfig":"19"},{"size":7393,"mtime":1609912342778,"results":"32","hashOfConfig":"19"},{"size":11702,"mtime":1609815097626,"results":"33","hashOfConfig":"19"},{"size":2768,"mtime":1609910872726,"results":"34","hashOfConfig":"19"},{"size":1225,"mtime":1609941635133,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"11ui09a",{"filePath":"38","messages":"39","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\SlideShowManagement\\SlideShowManagement.js",["73","74","75"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUpManagement\\TopUpManagement.js",["76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93"],"import React, { Component } from 'react';\r\nimport './TopUpManagement.style.css'\r\nimport Swal from 'sweetalert2';\r\nimport { Link } from 'react-router-dom'\r\nimport Card from '../TopUp/Card';\r\nimport \"bootstrap\";\r\nimport DataTable from \"../../../Components/Datatable/Table\";\r\nimport Action from \"../../../Components/Datatable/Action\";\r\nimport $ from 'jquery'\r\nimport Status from '../../../Components/Datatable/Status'\r\nimport { MDBIcon } from \"mdbreact\";\r\nimport NumberFormat from 'react-number-format';\r\nimport AuthService from '../../../Services/auth.service';\r\nimport Axios2 from '../../../Instances/axios-instances';\r\n\r\nclass TopUpManagement extends Component {\r\n  \r\n  constructor(props) {  \r\n    super(props);    \r\n    this.state = {      \r\n      fields: {},\r\n      errors: {},\r\n      data: [],\r\n      rows: [],\r\n      results: [],\r\n      result: [],\r\n      data: [],        \r\n      headings: [],\r\n      user:[],\r\n      role:\"\",\r\n      show:true,\r\n      password:\"\"      \r\n    };\r\n  }\r\n  componentDidMount() {                 \r\n    this.getAll();\r\n    this.show();\r\n    this.getRole();    \r\n    this.getUser();\r\n  }\r\n\r\n  async getRole(){    \r\n    const getRole = await Axios2.get('top_up_management/getRole');\r\n    var role=getRole;\r\n    if (role.data==\"[ROLE_ADMIN]\") {      \r\n      this.setState({role: \"[ROLE_ADMIN]\" })\r\n    } else{\r\n      this.setState({role: \"[ROLE_USER]\" })\r\n    } \r\n    if (this.state.role==\"[ROLE_ADMIN]\") {      \r\n      this.setState({headings: [\"No\", \"ID\", \"Action\", \"Email\", \"Total Nominal (Rp)\", \"Payment Method\", \"Status\"] })\r\n    } else{\r\n      this.setState({headings: [\"No\", \"ID\", \"Email\", \"Total Nominal (Rp)\", \"Payment Method\", \"Status\"] })\r\n    } \r\n  }\r\n\r\n  async getAll(){  \r\n    const getRole = await Axios2.get('top_up_management/getRole');\r\n    await Axios2.get('top_up_management/getAll').then((getData)=>{\r\n      const result_topup = getData.data;\r\n      this.setState({ data: result_topup });\r\n      this.fetchData(getRole);\r\n      $(\"#example1\").DataTable({\r\n        responsive: true,\r\n        autoWidth: false,\r\n      });  \r\n    });    \r\n    console.log(getRole)\r\n   \r\n    var role=getRole;    \r\n    console.log(role.data)\r\n    if (role.data==\"[ROLE_ADMIN]\") {      \r\n      this.setState({role: \"[ROLE_ADMIN]\" })\r\n    } else{\r\n      this.setState({role: \"[ROLE_USER]\" })\r\n    } \r\n\r\n   \r\n            \r\n    // $(\"#example1\").DataTable().destroy();\r\n      \r\n    // this.fetchData();\r\n  }\r\n\r\n  getUser(){         \r\n    Axios2.get('user').then((getData)=>{\r\n      const result_topup = getData.data;\r\n      console.log(getData)\r\n      this.setState({ user: result_topup });\r\n      \r\n    })    \r\n  }\r\n\r\n  getId = (id) => {\r\n    Axios2.get('top_up_management/getId/' + id)\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.setState({\r\n          nominal:res.data.nominal,\r\n          paymentMethod:res.data.paymentMethod\r\n        })\r\n    Swal.fire({\r\n      icon: 'warning',\r\n      title: 'Warning!',\r\n      showCancelButton: true,\r\n      text: 'Are you sure want to confirm this?',\r\n    }).then((result) => {\r\n      /* Read more about isConfirmed, isDenied below */\r\n      if (result.isConfirmed) {\r\n        Axios2.put('top_up/accept/' + id, res)\r\n        .then((response) => {\r\n          console.log(response);\r\n        })\r\n        Swal.fire({\r\n        icon: 'success',\r\n        title: 'Success!',\r\n        showCancelButton: false,\r\n        text:  'Confirm Top Up Already Success!',\r\n        }).then((result)=>{\r\n          if(result.isConfirmed){\r\n            window.location.reload();\r\n          }\r\n        })\r\n      }\r\n    })\r\n      })\r\n  }\r\n\r\n  getId2 = (id) => {  \r\n    Axios2.get('top_up_management/getId/' + id)\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.setState({\r\n          nominal:res.data.nominal,\r\n          paymentMethod:res.data.paymentMethod\r\n        })\r\n    Swal.fire({\r\n      icon: 'warning',\r\n      title: 'Warning!',\r\n      showCancelButton: true,\r\n      text: 'Are you sure want to Cancel this?',\r\n    }).then((result) => {\r\n      /* Read more about isConfirmed, isDenied below */\r\n      if (result.isConfirmed) {\r\n        Axios2.put('top_up/cancel/' + id, res)\r\n        .then((response) => {\r\n          console.log(response);\r\n        })\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Success!',\r\n          showCancelButton: false,\r\n          text:  'Cancel Top Up Already Success!',\r\n          }).then((result)=>{\r\n            if(result.isConfirmed){\r\n              window.location.reload();\r\n            }\r\n          })\r\n      }\r\n    })\r\n      })\r\n  }\r\n\r\n  fetchData(getRole) {\r\n    var role=getRole;\r\n    console.log(role.data)\r\n    let results = [];\r\n    let result = this.state.data;\r\n    var no=1;\r\n\r\n\r\n    result.forEach( topup => {\r\n      var row = [];\r\n      var actVal, statusVal = '';\r\n      if (topup.statusPayment == 'Success') {\r\n        actVal = <td className=\"text-center py-0 align-middle\">\r\n          <div className=\"btn-group btn-group-sm\">\r\n            -\r\n          </div>\r\n        </td>\r\n        statusVal = <Status type=\"success\" val=\"Success\" />\r\n      } else if (topup.statusPayment == 'Cancelled') {\r\n        actVal = <td className=\"text-center py-0 align-middle\">\r\n          <div className=\"btn-group btn-group-sm\">\r\n            -\r\n          </div>\r\n        </td>\r\n        statusVal = <Status type=\"danger\" val=\"Cancelled\" />\r\n      } else {\r\n        actVal = <td className=\"text-center py-0 align-middle\">\r\n          <div className=\"btn-group btn-group-sm\">\r\n            <Action type=\"success\" title=\"Edit\" icon=\"fas fa-check\" onClick={() => this.getId(topup.historyBalanceId)} />\r\n            <Action type=\"danger\" title=\"Delete\" icon=\"fas fa-ban\" onClick={() => this.getId2(topup.historyBalanceId)} />\r\n          </div>\r\n        </td>\r\n        statusVal = <Status type=\"warning\" val=\"Pending\" />\r\n      }\r\n      row.push(<td className=\"text-center\" >{no++}</td>);\r\n      row.push(<td className=\"text-center\" >{topup.historyBalanceId}</td>);\r\n      if (role.data===\"[ROLE_ADMIN]\"){\r\n        row.push(<td className=\"text-center\" >{actVal}</td>);\r\n      }      \r\n      // row.push(<td className=\"text-center\" >{actVal}</td>);\r\n      row.push(<td className=\"text-center\" >{topup.userBalanceEntity.userEntity.email}</td>);\r\n      row.push(<td>{<NumberFormat value={topup.nominal} displayType={'text'} thousandSeparator={true} prefix={'Rp. '}/>}</td>);\r\n      row.push(<td>{topup.paymentMethod}</td>);\r\n      row.push(<td className=\"text-center\" >{statusVal}</td>);\r\n      results.push(row);\r\n    });\r\n    this.setState({ rows: results });\r\n  }\r\n\r\n  async show(){\r\n    const getRole = await Axios2.get('top_up_management/getRole');\r\n    var role=getRole;\r\n    if (role.data==\"[ROLE_ADMIN]\") {      \r\n      this.setState({role: \"[ROLE_ADMIN]\" })\r\n    } else{\r\n      this.setState({role: \"[ROLE_USER]\" })\r\n    } \r\n    if (this.state.role==\"[ROLE_ADMIN]\") {      \r\n      this.setState({show:true })\r\n    } else{\r\n      this.setState({show:false})\r\n    }\r\n  }\r\n\r\n  handleValidation2() {    \r\n    let fields = this.state.fields;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    //Password\r\n    if (!fields[\"PasswordConfirm\"]) {\r\n      formIsValid = false;\r\n      errors[\"PasswordConfirm\"] = \"Password cannot be empty\";\r\n    }\r\n\r\n    //Confrim Password\r\n    if (!fields[\"PasswordConfirm2\"]) {\r\n      formIsValid = false;\r\n      errors[\"PasswordConfirm2\"] = \"Password Confirm cannot be empty\";\r\n    }\r\n\r\n    if (fields[\"PasswordConfirm\"]!==fields[\"PasswordConfirm2\"]){\r\n      formIsValid = false;\r\n      errors[\"PasswordConfirm2\"] = \"Password don't Match\";\r\n    }\r\n\r\n    this.setState({ errors: errors });\r\n    return formIsValid;\r\n  }\r\n\r\n  async validatepass(){\r\n    let fields = this.state.fields;    \r\n  const topup = {    \r\n    user_balance_id: fields[\"Name\"],\r\n    password: fields[\"PasswordConfirm\"]\r\n  }\r\n    var  match=await Axios2.post('top_up_management/getPass',topup);    \r\n    return match.data\r\n  }\r\n\r\n  contactSubmit2(e) {    \r\n    let fields = this.state.fields;\r\n    e.preventDefault();\r\n    if (this.handleValidation2()) {      \r\n      $('#passwordModal').modal('hide');\r\n      const topup = {\r\n        nominal: fields[\"Nominal\"],\r\n        paymentMethod: fields[\"Payment\"],\r\n        user_balance_id: fields[\"Name\"],\r\n        password: fields[\"PasswordConfirm\"]\r\n      }\r\n      console.log(topup)            \r\n      this.validatepass().then(x => {       \r\n        if (x==true) {\r\n          Axios2.post('top_up/post2', topup)\r\n              .then((response) => {\r\n                console.log(response);\r\n              })\r\n        Swal.fire({\r\n          title: \"Success Save Top Up Data!\",\r\n          text: \"You Already Success to save this data!\",\r\n          icon: \"success\",\r\n          buttons: true,\r\n        })\r\n        .then((isConfirmed) => {\r\n          if (isConfirmed) {\r\n            window.location.reload();\r\n        }\r\n        })\r\n        } else {\r\n          Swal.fire({\r\n            title: \"Wrong Password\",\r\n            text: \"Failed Wrong Password\",\r\n            icon: \"warning\",\r\n            buttons: true,\r\n          })\r\n          .then((isConfirmed) => {\r\n            if (isConfirmed) {\r\n              window.location.reload();\r\n          }\r\n          })\r\n        }\r\n    })      \r\n      \r\n      \r\n\r\n    } \r\n  }\r\n\r\n  handleChange2(field, e) {\r\n    let fields = this.state.fields;\r\n    fields[field] = e.target.value;\r\n    this.setState({ fields });\r\n  }\r\n\r\n  handleValidation() {\r\n    let fields = this.state.fields;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    //Name\r\n    if (!fields[\"Name\"]) {\r\n      formIsValid = false;\r\n      errors[\"Name\"] = \"Name cannot be empty\";\r\n    }\r\n\r\n    //Nominal\r\n    if (!fields[\"Nominal\"]) {\r\n      formIsValid = false;\r\n      errors[\"Nominal\"] = \"Nominal cannot be empty\";\r\n    }\r\n\r\n    //Payment\r\n    if (!fields[\"Payment\"]) {\r\n      formIsValid = false;\r\n      errors[\"Payment\"] = \"Payment cannot be empty\";\r\n    }\r\n\r\n    this.setState({ errors: errors });\r\n    return formIsValid;\r\n  }\r\n\r\n  contactSubmit(e) {\r\n    e.preventDefault();\r\n    if (this.handleValidation()) {\r\n      $('#topupModal').modal('hide');\r\n      $('#checkModal').modal('show');\r\n    }\r\n  }\r\n\r\n  handleChange(field, e) {\r\n    let fields = this.state.fields;\r\n    fields[field] = e.target.value;\r\n    this.setState({ fields });    \r\n  } \r\n\r\n  refresh(){\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    \r\n    const { rows,headings,show,user } = this.state;    \r\n    console.log(this.state.user)      \r\n    return (            \r\n      <div className=\"wrapper\">\r\n        {/* Navbar */}      \r\n        {/* Content Wrapper. Contains page content */}\r\n        <div className=\"content-wrapper\">\r\n          {/* Content Header (Page header) */}\r\n          {/* /.modal */}\r\n          <div className=\"modal fade\" id=\"cancelModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabesl\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                    Do you want to cancel?\r\n                  </h5>\r\n                  <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">×</span>\r\n                  </button>\r\n                </div>\r\n                <div className=\"modal-body\">Are you serious want to cancel?</div>\r\n                <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\">\r\n                    Close\r\n                  </button>\r\n                  <a className=\"btn btn-danger\" id=\"btn-delete\" href=\"#\" data-dismiss=\"modal\" data-toggle=\"modal\" data-target=\"#CancelModal\" onclick=\"cancelstatus()\">Cancel</a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal fade\" id=\"topupModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabesl\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                    Top Up\r\n                  </h5>\r\n                  <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">×</span>\r\n                  </button>\r\n                </div>\r\n                <form\r\n                role=\"form\"\r\n                id=\"addtopup\"\r\n                onSubmit={this.contactSubmit.bind(this)}\r\n              >\r\n                <div className=\"modal-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-5\">\r\n                      <label className=\"title-module\">ID User:</label>\r\n                    </div>\r\n                    <div className=\"col-md-7\">\r\n                      <input type=\"text\" id=\"topup-user\" name=\"name\" className=\"form-control\" placeholder=\"Enter ID User\" onChange={this.handleChange.bind(this, \"Name\")} value={this.state.fields[\"Name\"]} />\r\n                      <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"Name\"]}\r\n                          </span>\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"divider\" />\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-5\">\r\n                      <label className=\"title-module\">Total Nominal:</label>\r\n                    </div>\r\n                    <div className=\"col-lg-7\">\r\n                      <div className=\"form-group\">\r\n                        <div className=\"radio-group\">\r\n                          <div className=\"row row-cols-md-3\" style={{ textAlign: 'center' }}>\r\n                            <div className=\"icheck-primary\">\r\n                              <input type=\"radio\" name=\"option\" id=\"option1\" value=\"10000\"  onChange={this.handleChange.bind(this, \"Nominal\")} />\r\n                              <label htmlFor=\"option1\" style={{ fontWeight: 'normal' }}>Rp. 10000</label>\r\n                            </div>\r\n                            <div className=\"icheck-primary\">\r\n                              <input type=\"radio\" name=\"option\" id=\"option2\" value=\"20000\"  onChange={this.handleChange.bind(this, \"Nominal\")} />\r\n                              <label htmlFor=\"option2\" style={{ fontWeight: 'normal' }}>Rp. 20000</label>\r\n                            </div>\r\n                            <div className=\"icheck-primary\">\r\n                              <input type=\"radio\" name=\"option\" id=\"option3\" value=\"30000\"  onChange={this.handleChange.bind(this, \"Nominal\")} />\r\n                              <label htmlFor=\"option3\" style={{ fontWeight: 'normal' }}>Rp. 30000</label>\r\n                            </div>\r\n                            <div className=\"icheck-primary\">\r\n                              <input type=\"radio\" name=\"option\" id=\"option4\" value=\"50000\"  onChange={this.handleChange.bind(this, \"Nominal\")} />\r\n                              <label htmlFor=\"option4\" style={{ fontWeight: 'normal' }}>Rp. 50000</label>\r\n                            </div>\r\n                            <div className=\"icheck-primary\">\r\n                              <input type=\"radio\" name=\"option\" id=\"option5\" value=\"100000\"  onChange={this.handleChange.bind(this, \"Nominal\")} />\r\n                              <label htmlFor=\"option5\" style={{ fontWeight: 'normal' }}>Rp. 100000</label>\r\n                            </div>\r\n                            <div className=\"icheck-primary\">\r\n                              <input type=\"radio\" name=\"option\" id=\"option6\" value=\"200000\" onChange={this.handleChange.bind(this, \"Nominal\")} />\r\n                              <label htmlFor=\"option6\" style={{ fontWeight: 'normal' }}>Rp. 200000</label>\r\n                            </div>\r\n                            <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"Nominal\"]}\r\n                          </span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"divider\" />\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-5\">\r\n                      <label className=\"title-module\">Payment Method:</label>\r\n                    </div>\r\n                    <div className=\"col-lg-7\">\r\n                      <div className=\"form-group\">\r\n                        <div className=\"radio-group method\">\r\n                          <div className=\"row row-cols-md-3\" style={{ textAlign: 'center' }}>\r\n                            <div className=\"icheck-primary\">\r\n                              <input type=\"radio\" name=\"option2\" id=\"option-method1\" Value=\"Credit Card\" onChange={this.handleChange.bind(this, \"Payment\")} />\r\n                              <label htmlFor=\"option1\" style={{ fontWeight: 'normal' }}>Credit Card</label>\r\n                            </div>\r\n                            <div className=\"icheck-primary\">\r\n                              <input type=\"radio\" name=\"option2\" id=\"option-method2\" Value=\"Paypall\" onChange={this.handleChange.bind(this, \"Payment\")} />\r\n                              <label htmlFor=\"option2\" style={{ fontWeight: 'normal' }}>Paypall</label>\r\n                            </div>\r\n                            <div className=\"icheck-primary\">\r\n                              <input type=\"radio\" name=\"option2\" id=\"option-method3\" Value=\"OVO\" onChange={this.handleChange.bind(this, \"Payment\")} />\r\n                              <label htmlFor=\"option3\" style={{ fontWeight: 'normal' }}>OVO</label>\r\n                            </div>\r\n                            <div className=\"icheck-primary gopay\">\r\n                              <input type=\"radio\" name=\"option2\" id=\"option-method4\" Value=\"Gopay\" onChange={this.handleChange.bind(this, \"Payment\")}  />\r\n                              <label htmlFor=\"option4\" style={{ fontWeight: 'normal' }}>Gopay</label>\r\n                            </div>\r\n                            <div className=\"icheck-primary dana\">\r\n                              <input type=\"radio\" name=\"option2\" id=\"option-method5\" Value=\"Dana\" onChange={this.handleChange.bind(this, \"Payment\")} />\r\n                              <label htmlFor=\"option5\" style={{ fontWeight: 'normal' }}>Dana</label>\r\n                            </div>\r\n                            <div className=\"icheck-primary cash\">\r\n                              <input type=\"radio\" name=\"option2\" id=\"option-method6\" Value=\"Cash\" onChange={this.handleChange.bind(this, \"Payment\")}  />\r\n                              <label htmlFor=\"option6\" style={{ fontWeight: 'normal' }}>Cash</label>\r\n                            </div>\r\n                            <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"Payment\"]}\r\n                          </span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\">\r\n                    Close\r\n                  </button>\r\n                  <button className=\"btn btn-primary\" id=\"btn-delete\" type=\"submit\" >Next</button>\r\n                </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal fade\" id=\"checkModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabesl\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                    Check Data Top Up\r\n                  </h5>\r\n                  <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">×</span>\r\n                  </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-5\">\r\n                      <label className=\"title-module\">Username:</label>\r\n                    </div>\r\n                    <div className=\"col-md-7\">\r\n                      <input type=\"text\" id=\"checkuser\" name=\"name\" className=\"form-control\" value={this.state.fields[\"Name\"]} readOnly placeholder />\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"divider\" />\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-5\">\r\n                      <label className=\"title-module\">Total Nominal:</label>\r\n                    </div>\r\n                    <div className=\"col-md-7\">\r\n                      <input type=\"text\" id=\"checknominal\" name=\"name\" className=\"form-control\" value={this.state.fields[\"Nominal\"]} readOnly placeholder />\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"divider\" />\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-5\">\r\n                      <label className=\"title-module\">Payment Method:</label>\r\n                    </div>\r\n                    <div className=\"col-md-7\">\r\n                      <input type=\"text\" id=\"checkmethod\" name=\"name\" className=\"form-control\" value={this.state.fields[\"Payment\"]} readOnly placeholder />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\" data-target=\"#topupModal\" data-toggle=\"modal\">\r\n                    Back\r\n                  </button>\r\n                  <a className=\"btn btn-primary\" id=\"btn-delete\" href=\"#\" data-dismiss=\"modal\" data-toggle=\"modal\" data-target=\"#passwordModal\">Next</a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal fade\" id=\"passwordModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabesl\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                    Password\r\n                  </h5>\r\n                  <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">×</span>\r\n                  </button>\r\n                </div>\r\n                <form\r\n                role=\"form\"\r\n                id=\"addtopup\"\r\n                onSubmit={this.contactSubmit2.bind(this)}\r\n              >\r\n                <div className=\"modal-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-5\">\r\n                      <label className=\"title-module\">Password:</label>\r\n                    </div>\r\n                    <div className=\"col-md-7\">\r\n                      <input type=\"password\" id=\"PasswordConfirm\" name=\"PasswordConfirm\" className=\"form-control\" placeholder=\"Password\" onChange={this.handleChange2.bind(this, \"PasswordConfirm\")} value={this.state.fields[\"PasswordConfirm\"]} />\r\n                      <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"PasswordConfirm\"]}\r\n                          </span>\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"divider\" />\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-5\">\r\n                      <label className=\"title-module\">Confirm Password:</label>\r\n                    </div>\r\n                    <div className=\"col-md-7\">\r\n                      <input type=\"password\" id=\"PasswordConfirm2\" name=\"PasswordConfirm2\" className=\"form-control\" placeholder=\"Confirm Password\" onChange={this.handleChange2.bind(this, \"PasswordConfirm2\")} value={this.state.fields[\"PasswordConfirm2\"]} />\r\n                      <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"PasswordConfirm2\"]}\r\n                          </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\" data-toggle=\"modal\" data-target=\"#checkModal\">\r\n                    Back\r\n                  </button>\r\n                  <button className=\"btn btn-success\" id=\"btn-delete\" type=\"submit\">Confirm</button>\r\n                </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Main content */}\r\n\r\n          <section className=\"content-header\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row mb-2\">\r\n                <div className=\"col-sm-6\">\r\n                  <h3>Top Up Management</h3>\r\n                </div>\r\n                <div className=\"col-sm-6\">\r\n                  <ol className=\"breadcrumb float-sm-right\">\r\n                    <li className=\"breadcrumb-item\">\r\n                      <a href='/'>Home</a>\r\n                    </li>\r\n                    <li className=\"breadcrumb-item active\">Top Up Management</li>\r\n                  </ol>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* <!-- /.container-fluid --> */}\r\n          </section>\r\n\r\n          <section className=\"content pdg-btm\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12 ctm-responsive\">\r\n                      { show ?  <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary add-btn\"\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#topupModal\"                                                \r\n                        style={{ float: \"right\" }}\r\n                      >\r\n                        <i className=\"nav-icon fas fa-plus\"></i>\r\n                      Add Top Up                 \r\n                    </button> : null}                     \r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"card-body\">                  \r\n                  <DataTable headings={headings} rows={rows} />                    \r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          {/* /.content */}\r\n        </div>\r\n        {/* /.content-wrapper */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TopUpManagement;","C:\\Users\\ASUS\\maxwell-library-react\\src\\index.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Services\\auth.service.js",[],["94","95"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Payment\\Payment.js",["96","97"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\FineManagement\\FineManagement.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Footer\\Footer.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Donation\\Donation.js",["98","99"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Components\\Datatable\\Status.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\Validate.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\TopUp.js",["100"],"import React, { Component } from 'react';\r\nimport './TopUp.style.css'\r\nimport Card from '../TopUp/Card';\r\nimport showResults from \"./showResult\";\r\nimport Axios from 'axios';\r\n\r\nclass TopUp extends Component {\r\n\r\n  constructor(props) {\r\n    let user = JSON.parse( localStorage.getItem('user'))  \r\n      super(props);    \r\n      this.state = {              \r\n        role:\"\",\r\n        userToken: user.token\r\n      };\r\n    }\r\n    \r\n   render () {\r\n\r\n//   const token=this.state.userToken;\r\n//   const config = {\r\n//     headers: { Authorization: `Bearer ${token}` }\r\n// }\r\n    // var b=Axios.get('http://localhost:8080/top_up_management/getRole',config)\r\n    // console.log(b)\r\n    // Axios.get('http://localhost:8080/top_up_management/getRole',config).then((getData)=>{\r\n    // var role=getData.data;\r\n    // if (role.data==\"[ROLE_ADMIN]\") {      \r\n    //   this.setState({role: \"[ROLE_ADMIN]\" })\r\n    // } else{\r\n    //   this.setState({role: \"[ROLE_USER]\" })\r\n    // }     \r\n    // });\r\n    // if (this.state.role==\"[ROLE_ADMIN]\") {      \r\n    //   return(window.location.href = \"/\")\r\n    // } else{\r\n    //   return (        \r\n    //     <Card onSubmit={showResults} >               \r\n    //     </Card>\r\n    //   )\r\n    // } \r\n    // return (     \r\n      return(<Card onSubmit={showResults} >               \r\n        </Card>     )         \r\n    }\r\n  }\r\n\r\nexport default TopUp;","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\SideBar\\SideBar.js",["101","102","103","104","105"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Instances\\axios-instances.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Detail\\Detail.js",["106","107"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\DetailInvoice\\DetailInvoice.js",["108"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\TopUp4.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\showResult.js",["109","110","111"],{"ruleId":"112","severity":1,"message":"113","line":60,"column":28,"nodeType":"114","messageId":"115","endLine":60,"endColumn":30},{"ruleId":"116","severity":1,"message":"117","line":333,"column":11,"nodeType":"118","endLine":333,"endColumn":88},{"ruleId":"119","severity":1,"message":"120","line":463,"column":13,"nodeType":"118","endLine":463,"endColumn":50},{"ruleId":"121","severity":1,"message":"122","line":4,"column":10,"nodeType":"123","messageId":"124","endLine":4,"endColumn":14},{"ruleId":"121","severity":1,"message":"125","line":5,"column":8,"nodeType":"123","messageId":"124","endLine":5,"endColumn":12},{"ruleId":"121","severity":1,"message":"126","line":11,"column":10,"nodeType":"123","messageId":"124","endLine":11,"endColumn":17},{"ruleId":"121","severity":1,"message":"127","line":13,"column":8,"nodeType":"123","messageId":"124","endLine":13,"endColumn":19},{"ruleId":"128","severity":1,"message":"129","line":27,"column":7,"nodeType":"130","messageId":"131","endLine":27,"endColumn":11},{"ruleId":"132","severity":1,"message":"133","line":45,"column":18,"nodeType":"134","messageId":"131","endLine":45,"endColumn":20},{"ruleId":"132","severity":1,"message":"133","line":50,"column":24,"nodeType":"134","messageId":"131","endLine":50,"endColumn":26},{"ruleId":"132","severity":1,"message":"133","line":72,"column":18,"nodeType":"134","messageId":"131","endLine":72,"endColumn":20},{"ruleId":"132","severity":1,"message":"133","line":175,"column":31,"nodeType":"134","messageId":"131","endLine":175,"endColumn":33},{"ruleId":"132","severity":1,"message":"133","line":182,"column":38,"nodeType":"134","messageId":"131","endLine":182,"endColumn":40},{"ruleId":"132","severity":1,"message":"133","line":216,"column":18,"nodeType":"134","messageId":"131","endLine":216,"endColumn":20},{"ruleId":"132","severity":1,"message":"133","line":221,"column":24,"nodeType":"134","messageId":"131","endLine":221,"endColumn":26},{"ruleId":"132","severity":1,"message":"133","line":277,"column":14,"nodeType":"134","messageId":"131","endLine":277,"endColumn":16},{"ruleId":"121","severity":1,"message":"135","line":366,"column":32,"nodeType":"123","messageId":"124","endLine":366,"endColumn":36},{"ruleId":"136","severity":1,"message":"137","line":391,"column":19,"nodeType":"118","endLine":391,"endColumn":167},{"ruleId":"116","severity":1,"message":"117","line":407,"column":17,"nodeType":"118","endLine":411,"endColumn":16},{"ruleId":"136","severity":1,"message":"137","line":561,"column":19,"nodeType":"118","endLine":561,"endColumn":145},{"ruleId":"116","severity":1,"message":"117","line":577,"column":17,"nodeType":"118","endLine":581,"endColumn":16},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"132","severity":1,"message":"142","line":113,"column":23,"nodeType":"134","messageId":"131","endLine":113,"endColumn":25},{"ruleId":"119","severity":1,"message":"120","line":135,"column":28,"nodeType":"118","endLine":135,"endColumn":76},{"ruleId":"121","severity":1,"message":"143","line":6,"column":8,"nodeType":"123","messageId":"124","endLine":6,"endColumn":16},{"ruleId":"136","severity":1,"message":"144","line":282,"column":19,"nodeType":"118","endLine":284,"endColumn":20},{"ruleId":"121","severity":1,"message":"145","line":5,"column":8,"nodeType":"123","messageId":"124","endLine":5,"endColumn":13},{"ruleId":"132","severity":1,"message":"133","line":30,"column":20,"nodeType":"134","messageId":"131","endLine":30,"endColumn":22},{"ruleId":"132","severity":1,"message":"133","line":35,"column":26,"nodeType":"134","messageId":"131","endLine":35,"endColumn":28},{"ruleId":"121","severity":1,"message":"146","line":62,"column":13,"nodeType":"123","messageId":"124","endLine":62,"endColumn":20},{"ruleId":"147","severity":1,"message":"148","line":87,"column":17,"nodeType":"118","endLine":87,"endColumn":112},{"ruleId":"136","severity":1,"message":"137","line":129,"column":17,"nodeType":"118","endLine":129,"endColumn":50},{"ruleId":"119","severity":1,"message":"120","line":72,"column":21,"nodeType":"118","endLine":72,"endColumn":104},{"ruleId":"119","severity":1,"message":"120","line":79,"column":23,"nodeType":"118","endLine":79,"endColumn":77},{"ruleId":"119","severity":1,"message":"120","line":79,"column":61,"nodeType":"118","endLine":79,"endColumn":109},{"ruleId":"121","severity":1,"message":"149","line":2,"column":8,"nodeType":"123","messageId":"124","endLine":2,"endColumn":13},{"ruleId":"121","severity":1,"message":"150","line":5,"column":7,"nodeType":"123","messageId":"124","endLine":5,"endColumn":12},{"ruleId":"132","severity":1,"message":"133","line":17,"column":25,"nodeType":"134","messageId":"131","endLine":17,"endColumn":27},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'MDBIcon' is defined but never used.","'AuthService' is defined but never used.","no-dupe-keys","Duplicate key 'data'.","ObjectExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'user' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-native-reassign",["151"],"no-negated-in-lhs",["152"],"Expected '!==' and instead saw '!='.","'Reactdom' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Axios' is defined but never used.","'balance' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'axios' is defined but never used.","'sleep' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]