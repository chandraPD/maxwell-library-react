[{"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\BookManagement\\BookDetail.js":"1","C:\\Users\\ASUS\\maxwell-library-react\\src\\index.js":"2","C:\\Users\\ASUS\\maxwell-library-react\\src\\reportWebVitals.js":"3","C:\\Users\\ASUS\\maxwell-library-react\\src\\Services\\auth.service.js":"4","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\NavBar\\NavBar.js":"5","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Home\\Home.js":"6","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\TopUp.js":"7","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\BookManagement\\BookManagement.js":"8","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Wishlist\\Wishlist.js":"9","C:\\Users\\ASUS\\maxwell-library-react\\src\\Components\\Datatable\\Cell.js":"10","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\FormInput.js":"11","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Detail\\Detail.js":"12","C:\\Users\\ASUS\\maxwell-library-react\\src\\App.js":"13","C:\\Users\\ASUS\\maxwell-library-react\\src\\Navigations\\MainNavigations.js":"14","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Footer\\Footer.js":"15","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Payment\\PaymentInvoicePrint.js":"16","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUpManagement\\TopUpManagement.js":"17","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\DetailInvoice\\DetailInvoice.js":"18","C:\\Users\\ASUS\\maxwell-library-react\\src\\Components\\Datepicker\\Dates.js":"19","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Profile\\ChangePassword.js":"20","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\CategoryManagement\\CategoryManagement.js":"21","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\UserManagement\\UserManagement.js":"22","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\FineManagement\\FineManagement.js":"23","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Catalogue\\Catalogue.js":"24","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\Card.js":"25","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\Validate.js":"26","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Profile\\AdminProfile.js":"27","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Payment\\PaymentInvoicePrintPaid.js":"28","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Profile\\Profile.js":"29","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\DonationManagement\\DonationManagement.js":"30","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\ReturnBook\\CheckReturnBook.js":"31","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Author\\Author.js":"32","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\RentManagement\\RentManagement.js":"33","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\SlideShowManagement\\SlideShowManagement.js":"34","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\History\\History.js":"35","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\showResult.js":"36","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\SideBar\\SideBar.js":"37","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\TopUp2.js":"38","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\TopUp1.js":"39","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\TopUp4.js":"40"},{"size":19493,"mtime":1610447289135,"results":"41","hashOfConfig":"42"},{"size":937,"mtime":1609682650008,"results":"43","hashOfConfig":"42"},{"size":375,"mtime":1606198920915,"results":"44","hashOfConfig":"42"},{"size":1195,"mtime":1610359212744,"results":"45","hashOfConfig":"42"},{"size":3815,"mtime":1610092736195,"results":"46","hashOfConfig":"42"},{"size":8411,"mtime":1610370345907,"results":"47","hashOfConfig":"42"},{"size":496,"mtime":1610543169899,"results":"48","hashOfConfig":"42"},{"size":32074,"mtime":1610464005340,"results":"49","hashOfConfig":"42"},{"size":3184,"mtime":1610543205785,"results":"50","hashOfConfig":"42"},{"size":300,"mtime":1610259575640,"results":"51","hashOfConfig":"42"},{"size":563,"mtime":1610543158835,"results":"52","hashOfConfig":"42"},{"size":23130,"mtime":1610543219162,"results":"53","hashOfConfig":"42"},{"size":282,"mtime":1609682650000,"results":"54","hashOfConfig":"42"},{"size":8651,"mtime":1610464005288,"results":"55","hashOfConfig":"42"},{"size":519,"mtime":1606198920912,"results":"56","hashOfConfig":"42"},{"size":4202,"mtime":1606455043006,"results":"57","hashOfConfig":"42"},{"size":28055,"mtime":1610542814897,"results":"58","hashOfConfig":"42"},{"size":11635,"mtime":1610464005811,"results":"59","hashOfConfig":"42"},{"size":1475,"mtime":1610259575656,"results":"60","hashOfConfig":"42"},{"size":10606,"mtime":1609682650005,"results":"61","hashOfConfig":"42"},{"size":14203,"mtime":1610447289138,"results":"62","hashOfConfig":"42"},{"size":4502,"mtime":1610464006429,"results":"63","hashOfConfig":"42"},{"size":8698,"mtime":1610464005877,"results":"64","hashOfConfig":"42"},{"size":6708,"mtime":1610447289137,"results":"65","hashOfConfig":"42"},{"size":2469,"mtime":1610543155955,"results":"66","hashOfConfig":"42"},{"size":1069,"mtime":1610543199511,"results":"67","hashOfConfig":"42"},{"size":9745,"mtime":1606392264711,"results":"68","hashOfConfig":"42"},{"size":4270,"mtime":1606455043006,"results":"69","hashOfConfig":"42"},{"size":16243,"mtime":1610447289139,"results":"70","hashOfConfig":"42"},{"size":6975,"mtime":1610464005876,"results":"71","hashOfConfig":"42"},{"size":18501,"mtime":1610464006221,"results":"72","hashOfConfig":"42"},{"size":15413,"mtime":1610543141568,"results":"73","hashOfConfig":"42"},{"size":10349,"mtime":1610464006173,"results":"74","hashOfConfig":"42"},{"size":20515,"mtime":1610464006370,"results":"75","hashOfConfig":"42"},{"size":7058,"mtime":1610415881257,"results":"76","hashOfConfig":"42"},{"size":1027,"mtime":1610543162645,"results":"77","hashOfConfig":"42"},{"size":12004,"mtime":1610543211033,"results":"78","hashOfConfig":"42"},{"size":5945,"mtime":1610543188151,"results":"79","hashOfConfig":"42"},{"size":3533,"mtime":1610543180745,"results":"80","hashOfConfig":"42"},{"size":2816,"mtime":1610543194467,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},"11ui09a",{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"85"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"85"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"85"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"85"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"85"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"85"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"85"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"85"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\BookManagement\\BookDetail.js",["179","180","181"],"import React, { Component } from \"react\";\r\nimport DataTable from \"../../../Components/Datatable/Table\";\r\nimport Action from \"../../../Components/Datatable/Action\";\r\nimport $ from \"jquery\";\r\nimport \"datatables.net-responsive/js/dataTables.responsive\";\r\nimport \"datatables.net-dt/css/jquery.dataTables.css\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Axios from '../../../Instances/axios-instances';\r\n\r\nclass BookDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      bookId: \"\",\r\n      fields: {},\r\n      errors: {},\r\n      data: [],\r\n      rows: [],\r\n      results: [],\r\n      title: \"\",\r\n      statusBookDetail: \"Available\"\r\n    };\r\n\r\n    this.detailBookChange = this.detailBookChange.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    const bookId = this.props.match.params.bookId;\r\n    console.log(bookId);\r\n    this.fetchData(bookId);\r\n  }\r\n\r\n  async fetchData(bookId) {\r\n    $('#example1').DataTable().destroy();\r\n    let results = [];\r\n\r\n    var no = 1;\r\n\r\n    await Axios.get(`/book-detail/get-by-book-id/${bookId}`)\r\n        .then((response) => {\r\n          const result = response.data;\r\n          this.setState({data: result})\r\n\r\n          result.map((detailBook) => {\r\n            let row = [];\r\n\r\n            row.push(<td className=\"text-center\">{no++}</td>);\r\n            row.push(\r\n              <td className=\"text-center py-0 align-middle\">\r\n                <div className=\"btn-group btn-group-sm\">\r\n                  <Action\r\n                    type=\"success\"\r\n                    title=\"Edit\"\r\n                    icon=\"pen\"\r\n                    dataToggle=\"modal\"\r\n                    dataTarget=\"#modal-edit\"\r\n                    onClick = {() => this.getDetailBook(detailBook.bookDetailId)}\r\n                  />\r\n                  <Action\r\n                    type=\"danger\"\r\n                    title=\"Delete\"\r\n                    icon=\"trash\"\r\n                    dataToggle=\"modal\"\r\n                    dataTarget=\"#modal-delete\"\r\n                    onClick = {() => this.getDetailBook(detailBook.bookDetailId)}\r\n                  />\r\n                </div>\r\n              </td>\r\n            );\r\n            row.push(<td className=\"text-center\">{detailBook.bookDetailCode}</td>);\r\n            row.push(<td className=\"text-center\">{detailBook.typeOfDamage}</td>);\r\n            row.push(<td className=\"text-center\">{detailBook.descOfDamage}</td>);\r\n            row.push(<td className=\"text-center\">{detailBook.statusBookDetail}</td>);\r\n            this.setState({ title: detailBook.bookEntity.title})\r\n            results.push(row);                        \r\n          })\r\n           this.setState({ rows: results });\r\n\r\n           $(\"#example1\").DataTable({\r\n            responsive: true,\r\n            autoWidth: false,\r\n            });\r\n\r\n            Axios.get('/book-detail/get-book-detail-count/Available/' + bookId)\r\n                  .then((response) => {\r\n                    console.log(response.data)\r\n\r\n                    const count = {\r\n                      qty: response.data\r\n                    }\r\n\r\n                    Axios.put(\"/book/update-qty-book/\" + bookId, count)\r\n                    .then((response) => {\r\n                      console.log(response)\r\n                    })  \r\n\r\n                  })  \r\n        })\r\n  }\r\n\r\n  resetModal() {\r\n    let fields = this.state.fields\r\n    fields[\"typeOfDamage\"] = \"\"\r\n    fields[\"descOfDamage\"] = \"\"\r\n\r\n    this.setState({fields: fields})\r\n  }\r\n\r\n  handleChange(field, e) {\r\n      let fields = this.state.fields\r\n      let errors = {}\r\n      errors[\"typeOfDamage\"] = \"\"\r\n      fields[field] = e.target.value\r\n      this.setState({fields})\r\n      this.setState({errors: errors})\r\n      console.log(this.state.fields)\r\n  }\r\n\r\n  detailBookChange = (event) => {\r\n      this.setState({\r\n          [event.target.name]: event.target.value\r\n      })\r\n  }\r\n\r\n  updateDetailBook = (id) => {\r\n      const detailBook = {\r\n          typeOfDamage: this.state.typeOfDamage,\r\n          descOfDamage: this.state.descOfDamage,\r\n          statusBookDetail: this.state.statusBookDetail,\r\n          bookId: this.props.match.params.bookId\r\n      }\r\n\r\n      Axios.put('/book-detail/update-detail/' + id, detailBook)\r\n        .then((response) => {\r\n            console.log(response)\r\n            $(\"#modal-edit\").modal(\"toggle\");\r\n            $('.modal-backdrop').remove();\r\n            Swal.fire({\r\n              icon: \"success\",\r\n              title: \"Success\",\r\n              text: \"Your Data has been Updated\",\r\n              confirmButtonText: `OK`,\r\n            }).then((result) => {\r\n              if (result.isConfirmed) {\r\n                this.fetchData(this.props.match.params.bookId)\r\n              }\r\n            });\r\n        })\r\n  }\r\n\r\n  deleteDetailBook = (id) => {\r\n    Axios.put('/book-detail/delete-detail/' + id)\r\n    .then((response) => {\r\n      console.log(response)\r\n      Swal.fire({\r\n        icon: \"success\",\r\n        title: \"Success\",\r\n        text: \"Your Data has been Deleted\",\r\n        confirmButtonText: `OK`,\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          this.fetchData(this.props.match.params.bookId)\r\n        }\r\n      });\r\n    })\r\n  }\r\n\r\n  getDetailBook = (id) => {\r\n      Axios.get(\"/book-detail/get-detail-book/\" + id)\r\n        .then((response) => {\r\n            console.log(response)\r\n            this.setState({\r\n                typeOfDamage: response.data.typeOfDamage,\r\n                descOfDamage: response.data.descOfDamage,\r\n                bookDetailId: id,\r\n                statusBookDetail: response.data.statusBookDetail\r\n            })\r\n        })\r\n  }\r\n\r\n  handleValidation() {\r\n      let fields = this.state.fields\r\n      let errors = {}\r\n      let formIsValid = true\r\n\r\n      // Type of Damage\r\n      if(!fields[\"typeOfDamage\"]) {\r\n          formIsValid = false\r\n          errors[\"typeOfDamage\"] = \"Type of Damage cannot be empty\"\r\n      }\r\n\r\n      this.setState({ errors: errors})\r\n      return formIsValid\r\n  }\r\n\r\n  contactSubmit(e) {\r\n      let fields = this.state.fields\r\n      e.preventDefault()\r\n      if(this.handleValidation()) {\r\n        $(\"#modal-add\").modal(\"toggle\")\r\n        $('.modal-backdrop').remove();\r\n\r\n        let descOfDamage;\r\n        let statusBookDetail;\r\n\r\n        if(document.getElementById(\"inputDescofDamage\").value.length == 0) {\r\n          descOfDamage = \"-\"\r\n        } else {\r\n          descOfDamage = fields[\"descOfDamage\"]\r\n        }\r\n\r\n        const detailBook = {\r\n            typeOfDamage: fields[\"typeOfDamage\"],\r\n            descOfDamage: descOfDamage,\r\n            statusBookDetail: this.state.statusBookDetail,\r\n            bookId: this.props.match.params.bookId\r\n        }\r\n\r\n        console.log(detailBook)\r\n\r\n        Axios.post(\"/book-detail/add-detail\", detailBook)\r\n            .then((response)=> {\r\n                console.log(response)\r\n                Swal.fire({\r\n                  icon: \"success\",\r\n                  title: \"Success\",\r\n                  text: \"Your Data has been Added\",\r\n                  confirmButtonText: `OK`,\r\n                }).then((result) => {\r\n                  if (result.isConfirmed) {\r\n                    this.fetchData(this.props.match.params.bookId)\r\n                    this.resetModal()\r\n                  }\r\n                });\r\n            })\r\n      } else {\r\n\r\n      }\r\n  }\r\n\r\n  render() {\r\n    const { rows } = this.state;\r\n    const headings = [\r\n      \"No.\",\r\n      \"Action\",\r\n      \"Book Detail ID\",\r\n      \"Type of Damage\",\r\n      \"Description\",\r\n      \"Status\"\r\n    ];\r\n\r\n    return (\r\n      <div className=\"content-wrapper\">\r\n        <section className=\"content-header\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col-sm-6\">\r\n                <h1>Detail Book</h1>\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <ol className=\"breadcrumb float-sm-right\">\r\n                  <li className=\"breadcrumb-item\">\r\n                    <Link to=\"/\">Home</Link>\r\n                  </li>\r\n                  <li className=\"breadcrumb-item\">\r\n                    <Link to='/BookManagement'>Book Management</Link>\r\n                  </li>\r\n                  <li className=\"breadcrumb-item active\">Detail Book</li>\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/* Main content */}\r\n        <section className=\"content\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-6 ctm-responsive\">\r\n                          <h3>{this.state.title}</h3>\r\n                      </div>\r\n                      <div className=\"col-md-6 ctm-responsive\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary add-btn\"\r\n                          data-toggle=\"modal\"\r\n                          data-target=\"#modal-add\"\r\n                          style={{ float: \"right\" }}\r\n                        >\r\n                          <i className=\"nav-icon fas fa-plus\"></i>\r\n                          &nbsp; Add Detail\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  {/* /.card-header */}\r\n                  <div className=\"card-body\">\r\n                    <DataTable headings={headings} rows={rows} />\r\n                    {/* /.card-body */}\r\n                  </div>\r\n                </div>\r\n                {/* /.card */}\r\n              </div>\r\n              {/* /.col */}\r\n            </div>\r\n            {/* /.row */}\r\n          </div>\r\n          {/* /.container-fluid */}\r\n        </section>\r\n        {/* /.content */}\r\n\r\n        {/* <!--Modal Add--> */}\r\n        <div className=\"modal fade\" id=\"modal-add\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Add Detail</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <form\r\n                id=\"addBookDetail\"\r\n                onSubmit={this.contactSubmit.bind(this)}\r\n              >\r\n                <div className=\"modal-body\">\r\n                  <div className=\"card-body\">\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"inputTypeofDamage\">Type of Damage <small className=\"red-asterisk\">*</small></label>\r\n                      <select\r\n                        name=\"typeOfDamage\"\r\n                        className=\"form-control\"\r\n                        id=\"inputTypeofDamage\"\r\n                        value={this.state.fields[\"typeOfDamage\"]}\r\n                        onChange={this.handleChange.bind(this, \"typeOfDamage\")}\r\n                      >\r\n                        <option value=\"null\">Choose Type of Damage</option>\r\n                        <option value=\"No Damage\">No Damage</option>\r\n                        <option value=\"Minor\">Minor</option>\r\n                        <option value=\"Major\">Major</option>\r\n                      </select>\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"typeOfDamage\"]}\r\n                      </span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"inputDescofDamage\">Description</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"inputDescofDamage\"\r\n                        name=\"descOfDamage\"\r\n                        placeholder=\"Enter Description of Damage\"\r\n                        onChange={this.handleChange.bind(this, \"descOfDamage\")}\r\n                        value={this.state.fields[\"descOfDamage\"]}\r\n                      />\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"descOfDamage\"]}\r\n                      </span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"inputStatusBookDetail\">Status</label>\r\n                      <select\r\n                        name=\"statusBookDetail\"\r\n                        className=\"form-control\"\r\n                        id=\"inputStatusBookDetail\"\r\n                        value={this.state.statusBookDetail}\r\n                        onChange={this.detailBookChange}\r\n                      >\r\n                        <option value=\"Available\" selected>Available</option>\r\n                        <option value=\"Unavailable\">Unavailable</option>\r\n                      </select>\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"statusBookDetail\"]}\r\n                      </span>\r\n                    </div>\r\n\r\n                    <small><span className=\"red-asterisk\">*</span> Required</small> \r\n\r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer justify-content-between\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-default\"\r\n                    data-dismiss=\"modal\"\r\n                    onClick={() => this.resetModal()}\r\n                  >\r\n                    Close\r\n                  </button>\r\n                  <button type=\"submit\" className=\"btn btn-warning\">\r\n                    Add\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n\r\n        {/* <!--Modal Edit--> */}\r\n        <div className=\"modal fade\" id=\"modal-edit\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Edit Detail Book</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <form id=\"editDetailBook\">\r\n                <div className=\"modal-body\">\r\n                  <div className=\"card-body\">\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"editTypeOfDamage\">Type of Damage</label>\r\n                      <select\r\n                        name=\"typeOfDamage\"\r\n                        className=\"form-control\"\r\n                        id=\"editTypeOfDamage\"\r\n                        value={this.state.typeOfDamage}\r\n                        onChange={this.detailBookChange}\r\n                      >\r\n                        <option value=\"No Damage\">No Damage</option>\r\n                        <option value=\"Minor\">Minor</option>\r\n                        <option value=\"Major\">Major</option>\r\n                      </select>\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"typeOfDamage\"]}\r\n                      </span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"editDescOfDamage\">Description</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"descOfDamage\"\r\n                        id=\"editDescOfDamage\"\r\n                        value={this.state.descOfDamage}\r\n                        onChange={this.detailBookChange}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"editStatusBookDetail\">Status</label>\r\n                      <select\r\n                        name=\"statusBookDetail\"\r\n                        className=\"form-control\"\r\n                        id=\"editStatusBookDetail\"\r\n                        value={this.state.statusBookDetail}\r\n                        onChange={this.detailBookChange}\r\n                      >\r\n                        <option value=\"Available\">Available</option>\r\n                        <option value=\"Unavailable\">Unavailable</option>\r\n                      </select>\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"statusBookDetail\"]}\r\n                      </span>\r\n                    </div>\r\n\r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer justify-content-between\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-default\"\r\n                    data-dismiss=\"modal\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button type=\"button\" onClick={() => this.updateDetailBook(this.state.bookDetailId)} className=\"btn btn-warning\">\r\n                    Save changes\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n\r\n        {/* <!--Modal Delete--> */}\r\n        <div className=\"modal fade\" id=\"modal-delete\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Delete Detail Book</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                If you Delete this, you can't be returned\r\n              </div>\r\n              <div className=\"modal-footer justify-content-between\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-default\"\r\n                  data-dismiss=\"modal\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-warning\"\r\n                  type=\"button\"\r\n                  data-dismiss=\"modal\"\r\n                  onClick={() => this.deleteDetailBook(this.state.bookDetailId)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n         \r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(BookDetail);\r\n",["182","183"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\index.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\reportWebVitals.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Services\\auth.service.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\NavBar\\NavBar.js",["184","185","186","187","188"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Home\\Home.js",["189","190","191","192"],"import React, { Component } from 'react';\r\nimport './Home.style.css';\r\nimport firstHero from '../../../Assets/Media/books/hero1.png';\r\nimport secondtHero from '../../../Assets/Media/books/hero2.png';\r\nimport thirdHero from '../../../Assets/Media/books/hero3.png';\r\nimport Flickity from 'react-flickity-component';\r\nimport { Link } from 'react-router-dom';\r\nimport Axios from '../../../Instances/axios-instances';\r\n\r\nclass Home extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       dataTop: [],\r\n       dataOld: [],\r\n       allBook: [],\r\n       slideShowActive : [],\r\n       recommendedBook: [],\r\n       recommendedCat: \"\"\r\n    }\r\n  }\r\n  \r\n\r\n  componentDidMount() {\r\n    this.getTopFive();\r\n    this.getAllBook();\r\n    this.getOldestFive();\r\n    this.getSlideShowActive();\r\n    this.getRecommendedBook();\r\n    let user = JSON.parse( localStorage.getItem('user'))\r\n    const userToken = user.token;\r\n    console.log(userToken);\r\n  }\r\n\r\n  async getTopFive() {\r\n    let fetchTop = await Axios.get('/book/get-recent-five')\r\n    const resultTop = fetchTop.data      \r\n    this.setState({dataTop: resultTop})      \r\n  }\r\n\r\n  async getOldestFive() {\r\n    let fetchOld = await Axios.get('/book/get-oldest-five')\r\n    const resultOld = fetchOld.data\r\n    this.setState({dataOld: resultOld})\r\n  }\r\n\r\n  async getAllBook() {\r\n    let fetchBook = await Axios.get('/book/get-all')\r\n    this.setState({allBook: fetchBook.data})\r\n  }\r\n\r\n  async getSlideShowActive() {\r\n    let fetchSlideShowActive = await Axios.get('/slideshow/get-all-active');\r\n    this.setState({ slideShowActive : fetchSlideShowActive.data});\r\n  }\r\n\r\n  async getRecommendedBook() {\r\n    let fetchRecommended = await Axios.get('/book/get-max-qty')\r\n    console.log(fetchRecommended)\r\n    this.setState({recommendedBook: fetchRecommended.data})\r\n  }\r\n\r\n  render() {\r\n    const flickityOptions = {\r\n      wrapAround: true,\r\n      autoPlay: 2000,\r\n      pageDots: false,\r\n      initialIndex: 2,\r\n    };\r\n\r\n    const { dataTop, allBook, dataOld, slideShowActive, recommendedBook, recommendedCat } = this.state\r\n\r\n    return (\r\n      <div className=\"content-wrapper\">\r\n        <section className=\"content\">\r\n          {/* Flickity init */}\r\n          <div className=\"carousel-main\">\r\n            <Flickity\r\n              className={'main-carousel carousel'}\r\n              elementType={'div'}\r\n              options={flickityOptions}\r\n              static={true}\r\n              reloadOnUpdate={true}\r\n            >\r\n              {slideShowActive.map((data) => {\r\n                    return (\r\n                          <div\r\n                          className=\"carousel-cell\"\r\n                          style={{\r\n                            backgroundImage: `url(${data.img})`,\r\n                            borderRadius: '30px'\r\n                          }}\r\n                        >\r\n                          <div className=\"carousel-info\">\r\n                            <div className=\"carousel-text\">\r\n                              <h2>{data.title}</h2>\r\n                              <h3>{data.subTitle}</h3>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                    )\r\n                  })}\r\n              \r\n\r\n            </Flickity>\r\n          </div>\r\n          {/* Flickity ends */}\r\n\r\n          {/* Top picks init */}\r\n          <div className=\"container-fluid book-list\">\r\n            <div className=\"list-book-content\">\r\n              <div className=\"col-12\">\r\n                <div className=\"custom-flex2\">\r\n                  <h2 className=\"title-container\">Recently Added</h2>\r\n                  <h4 className=\"title-container\">\r\n                    Stories sparking conversation\r\n                  </h4>\r\n                </div>\r\n                <div className=\"filter-container p-0 row custom-flex\">\r\n\r\n                  {dataTop.map((data) => {\r\n                    return (\r\n                      <div className=\"top-seller\">\r\n                        <div className=\"filtr-item list-book\" />\r\n                        <Link to={`Detail/${data.bookId}`}>\r\n                          <img\r\n                            src={data.imgDetail}\r\n                            className=\"img-fluid img-book\"\r\n                            alt=\"white sample\"\r\n                          />\r\n                          <span className=\"badge category-book\">{data.categoryEntity.category}</span>\r\n                        </Link>\r\n                    </div>\r\n                    )\r\n                  })}\r\n                  \r\n                </div>\r\n                <div className=\"books-nf\" style={{ display: 'none' }}>\r\n                  <h3 className=\"book-not-found\">Oops, Book Not Found</h3>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Top picks ends */}\r\n\r\n          <div className=\"list-book-content\">\r\n            <div className=\"col-12\">\r\n              <div className=\"custom-flex2\">\r\n                <h2 className=\"title-container\">Recommended Stories</h2>\r\n                <h4 className=\"title-container\">Binge from start to finish</h4>\r\n              </div>\r\n              <div className=\"hero-book\">\r\n                <div className=\"hero-book-cover\">\r\n                  <Link to={`Detail/${recommendedBook.bookId}`}>\r\n                    <img\r\n                      src={recommendedBook.imgDetail}\r\n                      alt={recommendedBook.title}\r\n                    />\r\n                  </Link>\r\n                </div>\r\n                <div>\r\n                  <Link\r\n                    className=\"title\"\r\n                    to={`Detail/${recommendedBook.bookId}`}\r\n                    aria-label={recommendedBook.title}\r\n                  >\r\n                    {recommendedBook.title}\r\n                  </Link>\r\n                  <br />\r\n                  <p className=\"description\">\r\n                    {recommendedBook.description}\r\n                  </p>\r\n                  \r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"filter-container p-0 row custom-flex\">\r\n             \r\n\r\n                {dataOld.map((data) => {\r\n                      return (\r\n                        <div className=\"top-seller\">\r\n                        <div className=\"filtr-item list-book\" >\r\n                          <Link to={`Detail/${data.bookId}`}>\r\n                            <img\r\n                              src={data.imgDetail}\r\n                              className=\"img-fluid img-book\"\r\n                              alt=\"white sample\"\r\n                            />\r\n                            <span className=\"badge category-book\">{data.categoryEntity.category}</span>\r\n                          </Link>\r\n                        </div>\r\n                        </div>\r\n                      )\r\n                    })}\r\n                    \r\n    \r\n            \r\n            <div className=\"books-nf\" style={{ display: 'none' }}>\r\n              <h3 className=\"book-not-found\">Oops, Book Not Found</h3>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"list-book-content\">\r\n            <div className=\"col-12\">\r\n              <div className=\"custom-flex2\">\r\n                <Link to='/Catalogue' ><h2 className=\"title-container\">View Book List </h2></Link>\r\n                <h4 className=\"title-container\">Find your best reads</h4>\r\n\r\n              </div>\r\n              <Flickity\r\n                className={'carousel carousel-main book-list-bottom'}\r\n                elementType={'div'}\r\n                options={flickityOptions}\r\n                static={true}\r\n                reloadOnUpdate={true}\r\n              >\r\n\r\n                {allBook.map((data) => {\r\n                    return (\r\n                      <div className=\"carousel-cell\">\r\n                        <Link to={`Detail/${data.bookId}`}>\r\n                          <img\r\n                            src={data.imgDetail}\r\n                            className=\"list-book-bottom carousel-cell-image\"\r\n                            alt=\"white sample\"\r\n                          />\r\n                        </Link>\r\n                      </div>\r\n                    )\r\n                  })}\r\n              </Flickity>\r\n            </div>\r\n          </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\TopUp.js",["193"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\BookManagement\\BookManagement.js",["194"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Wishlist\\Wishlist.js",["195","196","197","198","199"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Components\\Datatable\\Cell.js",["200"],"import React, { Component } from 'react'\r\n\r\nexport default function Cell({\r\n    content,\r\n    header,\r\n  }) {\r\n  \r\n    const cellMarkup = header ? (\r\n      <th className=\"text-center text-nowwrap\">\r\n        {content}\r\n      </th>\r\n    ) : (\r\n        content\r\n    );\r\n  \r\n    return (cellMarkup);\r\n  }",["201","202"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\FormInput.js",["203"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Detail\\Detail.js",["204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\App.js",["220"],"import React, { Component } from \"react\";\r\nimport MainNavigation from './Navigations/MainNavigations'\r\n\r\nimport AuthService from \"./Services/auth.service\";\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return(\r\n      <MainNavigation/>\r\n    )\r\n  }\r\n\r\n}\r\nexport default App;\r\n","C:\\Users\\ASUS\\maxwell-library-react\\src\\Navigations\\MainNavigations.js",["221","222"],"import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Footer from '../Screens/Footer/Footer'\r\nimport NavBar from '../Screens/NavBar/NavBar'\r\nimport SideBar from '../Screens/SideBar/SideBar'\r\nimport Profile from '../Screens/Contents/Profile/Profile'\r\nimport ChangePassword from '../Screens/Contents/Profile/ChangePassword'\r\nimport RentManagement from '../Screens/Contents/RentManagement/RentManagement'\r\nimport Home from '../Screens/Contents/Home/Home'\r\nimport Detail from '../Screens/Contents/Detail/Detail'\r\nimport Auth from '../Screens/Auth/Auth'\r\nimport TopUp from '../Screens/Contents/TopUp/TopUp'\r\nimport CategoryManagement from '../Screens/Contents/CategoryManagement/CategoryManagement'\r\nimport SlideShowManagement from '../Screens/Contents/SlideShowManagement/SlideShowManagement'\r\nimport Payment from '../Screens/Contents/Payment/Payment'\r\nimport PaymentInvoicePrint from \"../Screens/Contents/Payment/PaymentInvoicePrint\"\r\nimport PaymentInvoicePrintPaid from \"../Screens/Contents/Payment/PaymentInvoicePrintPaid\"\r\nimport History from '../Screens/Contents/History/History'\r\nimport TopUpManagement from \"../Screens/Contents/TopUpManagement/TopUpManagement\"\r\nimport AdminProfile from '../Screens/Contents/Profile/AdminProfile'\r\nimport UserManagement from '../Screens/Contents/UserManagement/UserManagement'\r\nimport BookManagement from '../Screens/Contents/BookManagement/BookManagement'\r\nimport FineManagement from '../Screens/Contents/FineManagement/FineManagement'\r\nimport DetailInvoice from '../Screens/Contents/DetailInvoice/DetailInvoice'\r\nimport ReturnBook from '../Screens/Contents/ReturnBook/ReturnBook'\r\nimport CheckReturnBook from '../Screens/Contents/ReturnBook/CheckReturnBook'\r\nimport PaymentDetail from '../Screens/Contents/Payment/PaymentDetail'\r\nimport DonationManagement from '../Screens/Contents/DonationManagement/DonationManagement'\r\nimport Donation from '../Screens/Contents/Donation/Donation'\r\nimport BookDetail from '../Screens/Contents/BookManagement/BookDetail'\r\nimport LogManagement from \"../Screens/Contents/LogManagement/LogManagement\";\r\nimport Author from \"../Screens/Contents/Author/Author\"\r\nimport Wishlist from \"../Screens/Contents/Wishlist/Wishlist\"\r\nimport Catalogue from '../Screens/Contents/Catalogue/Catalogue'\r\nimport PrivateRoute from './PrivateRoute'\r\nimport Search from '../Screens/Contents/Search/Search'\r\nimport AuthRoute from './AuthRoute'\r\nimport Axios from '../Instances/axios-instances';\r\n\r\n\r\nclass MainNavigation extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isAuthenticated :  localStorage.getItem('user')\r\n        };\r\n      }\r\n      interval = null;\r\n\r\n      componentDidMount() {\r\n        this.interval = setInterval(this.getBalance, 30000);\r\n        this.getBalance();\r\n      }\r\n  \r\n      componentWillUnmount() {\r\n         clearInterval(this.interval);\r\n      }\r\n      getBalance = () => {\r\n        if(JSON.parse(localStorage.getItem('user')) != null){\r\n            let user = JSON.parse(localStorage.getItem('user'))\r\n            Axios.get('top_up_management/getBalance')\r\n            .then((balance) => {\r\n                localStorage.setItem('balance', JSON.stringify(balance.data));\r\n            })\r\n        }else{\r\n            localStorage.setItem('balance', 0);\r\n        }\r\n      }\r\n\r\n    render() {\r\n        return ( <Router >\r\n                <Switch>\r\n                    <AuthRoute path='/auth'\r\n                    authenticated={this.state.isAuthenticated}\r\n                    component={Auth}>\r\n                    </AuthRoute>\r\n                    <Route path='/PaymentPrint'>\r\n                        <PaymentInvoicePrint />\r\n                    </Route>\r\n                    <Route exact path='/PaymentPrintPaid'>\r\n                        <PaymentInvoicePrintPaid />\r\n                    </Route>\r\n                    <Route path='/'>\r\n                            <NavBar />\r\n                            <SideBar />\r\n                            <Switch>\r\n                                <PrivateRoute exact path='/'\r\n                                authenticated={this.state.isAuthenticated}\r\n                                component={Home}>\r\n                                </PrivateRoute>\r\n                                <Route path='/Profile'>\r\n                                    <Profile />\r\n                                </Route>\r\n                                <Route path='/ChangePassword'>\r\n                                    <ChangePassword/>\r\n                                </Route>\r\n                                <Route path='/AdminProfile'>\r\n                                    <AdminProfile/>\r\n                                </Route>\r\n                                <Route path='/Detail/:bookId'>\r\n                                    <Detail />\r\n                                </Route>\r\n                                <Route path='/Search/:title'>\r\n                                    <Search />\r\n                                </Route>\r\n                                <Route path='/RentManagement'>\r\n                                    <RentManagement />\r\n                                </Route>\r\n                                <Route path='/Author'>\r\n                                    <Author />\r\n                                </Route>\r\n                                <Route path='/FineManagement'>\r\n                                    <FineManagement />\r\n                                </Route>\r\n                                <Route path='/TopUp'>\r\n                                    <TopUp />\r\n                                </Route>\r\n                                <Route path='/CategoryManagement'>\r\n                                    <CategoryManagement />\r\n                                </Route>\r\n                                <Route path='/Catalogue'>\r\n                                    <Catalogue />\r\n                                </Route>\r\n                                <Route path='/TopUpManagement'>\r\n                                    <TopUpManagement />\r\n                                </Route>\r\n                                <Route path='/SlideShowManagement'>\r\n                                    <SlideShowManagement />\r\n                                </Route>\r\n                                <Route path='/Payment/:invoiceId?'>\r\n                                    <Payment />\r\n                                </Route>\r\n                                <Route path='/Wishlist'>\r\n                                    <Wishlist/>\r\n                                </Route>\r\n                                <Route path='/PaymentDetail/:userId'>\r\n                                    <PaymentDetail />\r\n                                </Route>\r\n                                <Route path='/History'>\r\n                                    <History />\r\n                                </Route>\r\n                                <Route path='/usermanagement'>\r\n                                    <UserManagement />\r\n                                </Route>\r\n                                <Route path='/bookmanagement'>\r\n                                    <BookManagement />\r\n                                </Route>\r\n                                <Route path='/bookdetail/:bookId'>\r\n                                    <BookDetail />\r\n                                </Route>\r\n                                <Route path='/DetailInvoice/:invoiceId'>\r\n                                    <DetailInvoice />\r\n                                </Route>\r\n                                <Route path='/ReturnBook'>\r\n                                    <ReturnBook />\r\n                                </Route>\r\n                                <Route path='/CheckReturnBook'>\r\n                                    <CheckReturnBook />\r\n                                </Route>\r\n                                <Route path='/DonationManagement'>\r\n                                    <DonationManagement />\r\n                                </Route>\r\n                                 <Route path='/Donation'>\r\n                                    <Donation />\r\n                                </Route>\r\n                                <Route path='/LogManagement'>\r\n                                    <LogManagement />\r\n                                </Route>\r\n                            </Switch>\r\n                            <Footer />\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\nexport default MainNavigation\r\n","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Footer\\Footer.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Payment\\PaymentInvoicePrint.js",["223"],"import React, { Component } from \"react\";\r\nimport MaxIcon from '../../Auth/Assets/Images/bookshelf.png'\r\n\r\nclass PaymentInvoicePrint extends Component {\r\n  \r\n  componentDidMount() {\r\n    window.addEventListener(\"load\", window.print());\r\n  }  \r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <section className=\"invoice\">\r\n          {/* <!-- title row --> */}\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <h4>\r\n                <img\r\n                  src={MaxIcon}\r\n                  style={{height: \"2rem\"}}\r\n                />{\" \"}\r\n                Maxwell Library\r\n                <small className=\"float-right\">Date: 19/11/2020</small>\r\n              </h4>\r\n            </div>\r\n            {/* <!-- /.col --> */}\r\n          </div>\r\n          {/* <!-- info row --> */}\r\n          <div className=\"row invoice-info\">\r\n            <div className=\"col-sm-4 invoice-col\">\r\n              From\r\n              <address>\r\n                <strong>Maxwell Library</strong>\r\n                <br />\r\n                795 Folsom Ave, Suite 600\r\n                <br />\r\n                San Francisco, CA 94107\r\n                <br />\r\n                Phone: (804) 123-5432\r\n                <br />\r\n                Email: maxwell@library.com\r\n              </address>\r\n            </div>\r\n            {/* <!-- /.col --> */}\r\n            <div className=\"col-sm-4 invoice-col\">\r\n              To\r\n              <address>\r\n                <strong>Niki Zefanya</strong>\r\n                <br />\r\n                795 Folsom Ave, Suite 600\r\n                <br />\r\n                San Francisco, CA 94107\r\n                <br />\r\n                Phone: (555) 539-1037\r\n                <br />\r\n                Email: john.doe@example.com\r\n              </address>\r\n            </div>\r\n            {/* <!-- /.col --> */}\r\n            <div className=\"col-sm-4 invoice-col\">\r\n              <b>Invoice #007612</b>\r\n              <br />\r\n            </div>\r\n            {/* <!-- /.col --> */}\r\n          </div>\r\n          {/* <!-- /.row --> */}\r\n\r\n          {/* <!-- Table row --> */}\r\n          <div className=\"row\">\r\n            <div className=\"col-12 table-responsive\">\r\n              <table className=\"table table-striped\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>No.</th>\r\n                    <th>Book Title</th>\r\n                    <th>Borrowed On</th>\r\n                    <th>Due On</th>\r\n                    <th>Late By</th>\r\n                    <th>Fine Amount</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>1</td>\r\n                    <td>Dilan 1990</td>\r\n                    <td>16/11/2020</td>\r\n                    <td>18/11/2020</td>\r\n                    <td>2 Days</td>\r\n                    <td>Rp. 10.000</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>2</td>\r\n                    <td>Harry Potter</td>\r\n                    <td>16/11/2020</td>\r\n                    <td>18/11/2020</td>\r\n                    <td>2 Days</td>\r\n                    <td>Rp. 10.000</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            {/* <!-- /.col --> */}\r\n          </div>\r\n          {/* <!-- /.row --> */}\r\n\r\n          <div className=\"row\">\r\n            {/* <!-- accepted payments column --> */}\r\n            <div className=\"col-6\"></div>\r\n            {/* <!-- /.col --> */}\r\n            <div className=\"col-6\">\r\n              <p className=\"lead\" style={{float:\"right\"}}>\r\n                Amount Due 25/11/2020\r\n              </p>\r\n\r\n              <div className=\"table-responsive\">\r\n                <table className=\"table\">\r\n                  <tr>\r\n                    <th style={{width:\"50%\"}}>Subtotal:</th>\r\n                    <td>Rp. 20.000</td>\r\n                  </tr>\r\n                </table>\r\n              </div>\r\n            </div>\r\n            {/* <!-- /.col --> */}\r\n          </div>\r\n          {/* <!-- /.row --> */}\r\n\r\n          {/* <!-- /.row --> */}\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PaymentInvoicePrint;\r\n","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUpManagement\\TopUpManagement.js",["224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243"],"import React, { Component } from 'react';\r\nimport './TopUpManagement.style.css'\r\nimport Swal from 'sweetalert2';\r\nimport { Link } from 'react-router-dom'\r\nimport Card from '../TopUp/Card';\r\nimport \"bootstrap\";\r\nimport DataTable from \"../../../Components/Datatable/Table\";\r\nimport Action from \"../../../Components/Datatable/Action\";\r\nimport $ from 'jquery'\r\nimport Status from '../../../Components/Datatable/Status'\r\nimport { MDBIcon } from \"mdbreact\";\r\nimport NumberFormat from 'react-number-format';\r\nimport AuthService from '../../../Services/auth.service';\r\nimport Axios2 from '../../../Instances/axios-instances';\r\nimport moment from 'moment';\r\n\r\nclass TopUpManagement extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fields: {},\r\n      errors: {},\r\n      data: [],\r\n      rows: [],\r\n      results: [],\r\n      result: [],\r\n      data: [],\r\n      headings: [],\r\n      user: [],\r\n      role: JSON.parse(localStorage.getItem('user')).userInfo.activeRole,\r\n      show: true,\r\n      userId: \"\",\r\n      checkedRadio: null,\r\n      password: \"\"\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getAll();\r\n    this.show();\r\n    this.getRole();\r\n    this.getUser();\r\n  }\r\n\r\n  async getRole() {    \r\n    if (this.state.role == \"ROLE_ADMIN\") {\r\n      this.setState({ headings: [\"No\", \"Action\", \"Email\", \"Date Input\", \"Date Accept\",\"Total Nominal (Rp)\", \"Payment Method\", \"Status\"] })\r\n    } else {\r\n      this.setState({ headings: [\"No\",\"Date Input\", \"Date Accept\", \"Total Nominal (Rp)\", \"Payment Method\", \"Status\"] })\r\n    }\r\n  }\r\n\r\n  async getAll() {    \r\n    await Axios2.get('top_up_management/getAll').then((getData) => {      \r\n      const result_topup = getData.data;      \r\n      $(\"#example1\").DataTable().destroy();\r\n      this.setState({ data: result_topup });\r\n      this.fetchData(this.state.role);\r\n      $(\"#example1\").DataTable({\r\n        responsive: true,\r\n        autoWidth: false,\r\n      });\r\n    });    \r\n\r\n    // $(\"#example1\").DataTable().destroy();\r\n\r\n    // this.fetchData();\r\n  }\r\n\r\n  getUser() {\r\n    var a =Axios2.get('user').then((getData) => {\r\n      const result_topup = getData.data;      \r\n      this.setState({ user: result_topup });\r\n\r\n    })    \r\n  }\r\n\r\n  getId = (id) => {\r\n    Axios2.get('top_up_management/getId/' + id)\r\n      .then((res) => {        \r\n        this.setState({\r\n          nominal: res.data.nominal,\r\n          paymentMethod: res.data.paymentMethod\r\n        })\r\n        Swal.fire({\r\n          icon: 'question',\r\n          title: 'Are you sure?',\r\n          showCancelButton: true,\r\n          text: 'Are you sure want to confirm this?',\r\n        }).then((result) => {\r\n          /* Read more about isConfirmed, isDenied below */\r\n          if (result.isConfirmed) {\r\n            Axios2.put('top_up/accept/' + id, res)\r\n              .then((response) => {                \r\n              })\r\n            Swal.fire({\r\n              icon: 'success',\r\n              title: 'Success!',\r\n              showCancelButton: false,\r\n              text: 'Confirm Top Up Already Success!',\r\n            }).then((result) => {\r\n              if (result.isConfirmed) {\r\n                this.getAll();\r\n              }\r\n            })\r\n          }\r\n        })\r\n      })\r\n  }\r\n\r\n  getId2 = (id) => {\r\n    Axios2.get('top_up_management/getId/' + id)\r\n      .then((res) => {        \r\n        this.setState({\r\n          nominal: res.data.nominal,\r\n          paymentMethod: res.data.paymentMethod\r\n        })\r\n        Swal.fire({\r\n          icon: 'warning',\r\n          title: 'Warning!',\r\n          showCancelButton: true,\r\n          text: 'Are you sure want to Cancel this?',\r\n        }).then((result) => {\r\n          /* Read more about isConfirmed, isDenied below */\r\n          if (result.isConfirmed) {\r\n            Axios2.put('top_up/cancel/' + id, res)\r\n              .then((response) => {                \r\n              })\r\n            Swal.fire({\r\n              icon: 'success',\r\n              title: 'Success!',\r\n              showCancelButton: false,\r\n              text: 'Cancel Top Up Already Success!',\r\n            }).then((result) => {\r\n              if (result.isConfirmed) {\r\n                this.getAll();\r\n              }\r\n            })\r\n          }\r\n        })\r\n      })\r\n  }\r\n\r\n  convertToDate = (date) => {\r\n    if (date === null) {\r\n        return \"-\"\r\n    } else {\r\n        return moment.utc(date).format('DD-MM-YYYY HH:mm')\r\n    }\r\n}\r\n\r\n  fetchData(getRole) {\r\n    var role = getRole;    \r\n    let results = [];\r\n    let result = this.state.data;\r\n    var no = 1;\r\n\r\n\r\n    result.forEach(topup => {\r\n      var date=topup.dateAcc;\r\n      var row = [];\r\n      var actVal, statusVal = '';\r\n      if (topup.statusPayment == 'Success') {\r\n        actVal = <td className=\"text-center py-0 align-middle\">\r\n          <div className=\"btn-group btn-group-sm\">\r\n            -\r\n          </div>\r\n        </td>\r\n        statusVal = <Status type=\"success\" val=\"Success\" />\r\n      } else if (topup.statusPayment == 'Cancelled') {\r\n        actVal = <td className=\"text-center py-0 align-middle\">\r\n          <div className=\"btn-group btn-group-sm\">\r\n            -\r\n          </div>\r\n        </td>\r\n        statusVal = <Status type=\"danger\" val=\"Cancelled\" />\r\n      } else {\r\n        actVal = <td className=\"text-center py-0 align-middle\">\r\n          <div className=\"btn-group btn-group-sm\">\r\n            <Action type=\"success\" title=\"Edit\" icon=\"fas fa-check\" onClick={() => this.getId(topup.historyBalanceId)} />\r\n            <Action type=\"danger\" title=\"Delete\" icon=\"fas fa-ban\" onClick={() => this.getId2(topup.historyBalanceId)} />\r\n          </div>\r\n        </td>\r\n        statusVal = <Status type=\"warning\" val=\"Pending\" />\r\n      }\r\n      row.push(<td className=\"text-center\" >{no++}</td>);      \r\n      if (role === \"ROLE_ADMIN\") {\r\n        row.push(<td className=\"text-center\" >{actVal}</td>);\r\n        row.push(<td className=\"text-center\" >{topup.userBalanceEntity.userEntity.email}</td>);\r\n      }\r\n      row.push(<td className=\"text-center\" >{this.convertToDate(topup.dateTopup)}</td>);\r\n      if (date==\"\"){\r\n        row.push(<td className=\"text-center\" > - </td>);\r\n      } else{\r\n        row.push(<td className=\"text-center\" >{this.convertToDate(topup.dateAcc)}</td>);\r\n      }\r\n      // row.push(<td className=\"text-center\" >{actVal}</td>);\r\n      if (topup.paymentMethod.startsWith(\"Debit\")){\r\n        row.push(<td>{<NumberFormat value={topup.nominal} displayType={'text'} thousandSeparator={true} prefix={'- Rp. '} />}</td>);\r\n      } else{\r\n        row.push(<td>{<NumberFormat value={topup.nominal} displayType={'text'} thousandSeparator={true} prefix={'+ Rp. '} />}</td>);\r\n      }\r\n      \r\n      row.push(<td>{topup.paymentMethod}</td>);\r\n      row.push(<td className=\"text-center\" >{statusVal}</td>);\r\n      results.push(row);\r\n    });\r\n    this.setState({ rows: results });\r\n  }\r\n\r\n  async show() {   \r\n    if (this.state.role == \"ROLE_ADMIN\") {\r\n      this.setState({ show: true })\r\n    } else {\r\n      this.setState({ show: false })\r\n    }\r\n  }\r\n\r\n  handleValidation2() {\r\n    let fields = this.state.fields;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    if (this.state.userId==\"\"){\r\n      formIsValid = false;\r\n      errors[\"Name\"] = \"User ID cannot be empty\";\r\n    }\r\n\r\n    //Password\r\n    if (!fields[\"PasswordConfirm\"]) {\r\n      formIsValid = false;\r\n      errors[\"PasswordConfirm\"] = \"Password cannot be empty\";\r\n    }\r\n\r\n    //Confrim Password\r\n    if (!fields[\"PasswordConfirm2\"]) {\r\n      formIsValid = false;\r\n      errors[\"PasswordConfirm2\"] = \"Password Confirm cannot be empty\";\r\n    }\r\n\r\n    if (fields[\"PasswordConfirm\"] !== fields[\"PasswordConfirm2\"]) {\r\n      formIsValid = false;\r\n      errors[\"PasswordConfirm2\"] = \"Password don't Match\";\r\n    }\r\n\r\n    this.setState({ errors: errors });\r\n    return formIsValid;\r\n  }\r\n\r\n  async validatepass() {\r\n    let fields = this.state.fields;\r\n    const topup = {\r\n      user_balance_id: fields[\"Name\"],\r\n      password: fields[\"PasswordConfirm\"]\r\n    }\r\n    var match = await Axios2.post('top_up_management/getPass', topup);\r\n    return match.data\r\n  }\r\n\r\n  contactSubmit2(e) {\r\n    let fields = this.state.fields;\r\n    e.preventDefault();\r\n    if (this.handleValidation2()) {          \r\n      const topup = {\r\n        nominal: fields[\"Nominal\"],\r\n        paymentMethod: fields[\"Payment\"],\r\n        user_balance_id: this.state.userId,\r\n        password: fields[\"PasswordConfirm\"]\r\n      }      \r\n      this.validatepass().then(x => {\r\n        if (x == true) {\r\n          Axios2.post('top_up/post2', topup)\r\n            .then((response) => {              \r\n            })\r\n          Swal.fire({\r\n            title: \"Success Save Top Up Data!\",\r\n            text: \"You Already Success to save this data!\",\r\n            icon: \"success\",\r\n            buttons: true,\r\n          })\r\n            .then((isConfirmed) => {\r\n              if (isConfirmed) {                \r\n                this.getAll();                \r\n                $('#passwordModal').modal('hide');  \r\n                $('.modal-backdrop').remove();                 \r\n              }\r\n            })\r\n            \r\n        } else {\r\n          Swal.fire({\r\n            title: \"Wrong Password\",\r\n            text: \"Failed Wrong Password\",\r\n            icon: \"warning\",\r\n            \r\n          })\r\n            .then((isConfirmed) => {\r\n              if (isConfirmed) {\r\n                this.getAll();\r\n              }\r\n            })\r\n        }\r\n      })\r\n\r\n\r\n\r\n    }\r\n  }\r\n\r\n  handleChange2(field, e) {\r\n    let fields = this.state.fields;\r\n    fields[field] = e.target.value;\r\n    this.setState({ fields });\r\n  }\r\n\r\n  handleValidation() {\r\n    let fields = this.state.fields;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n    \r\n    if (this.state.userId==\"\") {\r\n      formIsValid = false;\r\n      errors[\"Name\"] = \"User ID cannot be empty\";\r\n    }\r\n\r\n    //Nominal\r\n    if (!fields[\"Nominal\"]) {\r\n      formIsValid = false;\r\n      errors[\"Nominal\"] = \"Nominal cannot be empty\";\r\n    }\r\n\r\n    //Payment\r\n    if (!fields[\"Payment\"]) {\r\n      formIsValid = false;\r\n      errors[\"Payment\"] = \"Payment cannot be empty\";\r\n    }\r\n\r\n    this.setState({ errors: errors });\r\n    return formIsValid;\r\n  }\r\n\r\n  contactSubmit(e) {\r\n    e.preventDefault();\r\n    if (this.handleValidation()) {\r\n      $('#topupModal').modal('hide');\r\n      $('#checkModal').modal('show');\r\n    }\r\n  }\r\n\r\n  handleChange3 = (event) => {    \r\n\r\n      var userId = event.target.value;    \r\n    this.setState({ userId: userId}); \r\n    \r\n       \r\n }\r\n\r\n refresh(){  \r\n  this.setState({fields:[],userId:\"\",errors:[]})\r\n  $('input[type=\"radio\"]').prop('checked', false);\r\n  $('input[type=\"password\"]').val('');  \r\n  $('#topupModal').modal('show');\r\n \r\n }\r\n\r\n  handleChange(field, e) {\r\n    let fields = this.state.fields;\r\n    fields[field] = e.target.value;\r\n    this.setState({ fields });\r\n  }  \r\n\r\n  render() {\r\n    var lol=JSON.parse(localStorage.getItem('user')).userInfo.activeRole;    \r\n    const { rows, headings, show, user,userId } = this.state;    \r\n    return (\r\n      <div className=\"wrapper\">\r\n        {/* Navbar */}\r\n        {/* Content Wrapper. Contains page content */}\r\n        <div className=\"content-wrapper\">\r\n          {/* Content Header (Page header) */}\r\n          {/* /.modal */}\r\n          <div className=\"modal fade\" id=\"cancelModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabesl\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                    Do you want to cancel?\r\n                  </h5>\r\n                  <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">×</span>\r\n                  </button>\r\n                </div>\r\n                <div className=\"modal-body\">Are you serious want to cancel?</div>\r\n                <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\">\r\n                    Close\r\n                  </button>\r\n                  <a className=\"btn btn-danger\" id=\"btn-delete\" href=\"#\" data-dismiss=\"modal\" data-toggle=\"modal\" data-target=\"#CancelModal\" onclick=\"cancelstatus()\">Cancel</a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal fade\" id=\"topupModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabesl\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                    Top Up\r\n                  </h5>\r\n                  <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">×</span>\r\n                  </button>\r\n                </div>\r\n                <form\r\n                  role=\"form\"\r\n                  id=\"addtopup\"\r\n                  onSubmit={this.contactSubmit.bind(this)}\r\n                >\r\n                  <div className=\"modal-body\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-5\">\r\n                        <label className=\"title-module\">Email User:</label>\r\n                      </div>\r\n                      <div className=\"col-md-7\">\r\n                        {/* <input type=\"text\" id=\"topup-user\" name=\"name\" className=\"form-control\" placeholder=\"Enter ID User\" onChange={this.handleChange.bind(this, \"Name\")} value={this.state.fields[\"Name\"]} />\r\n                      <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"Name\"]}\r\n                          </span> */}\r\n                        <select id=\"dropdown\" className=\"custom-select\"\r\n                          onChange={this.handleChange3} value={userId}>\r\n                            <option value=\"\">Select---</option>\r\n                          {this.state.user.map((person,index) => {return(<option key={index} value={person.userId}>{person.email}</option>) })}                          \r\n                        </select>\r\n                        <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"Name\"]}\r\n                          </span> \r\n                      </div>\r\n                    </div>\r\n                    <hr className=\"divider\" />\r\n                    <div className=\"row\">\r\n                      <div className=\"col-lg-5\">\r\n                        <label className=\"title-module\">Total Nominal:</label>\r\n                      </div>\r\n                      <div className=\"col-lg-7\">\r\n                        <div className=\"form-group\">\r\n                          <div className=\"radio-group\">\r\n                            <div className=\"row row-cols-md-3\" style={{ textAlign: 'center' }}>\r\n                              <div className=\"icheck-primary\">\r\n                                <input type=\"radio\" name=\"option\" id=\"option1\" value=\"10000\" onChange={this.handleChange.bind(this, \"Nominal\")} />\r\n                                <label htmlFor=\"option1\" style={{ fontWeight: 'normal' }}>Rp. 10000</label>\r\n                              </div>\r\n                              <div className=\"icheck-primary\">\r\n                                <input type=\"radio\" name=\"option\" id=\"option2\" value=\"20000\" onChange={this.handleChange.bind(this, \"Nominal\")} />\r\n                                <label htmlFor=\"option2\" style={{ fontWeight: 'normal' }}>Rp. 20000</label>\r\n                              </div>\r\n                              <div className=\"icheck-primary\">\r\n                                <input type=\"radio\" name=\"option\" id=\"option3\" value=\"30000\" onChange={this.handleChange.bind(this, \"Nominal\")} />\r\n                                <label htmlFor=\"option3\" style={{ fontWeight: 'normal' }}>Rp. 30000</label>\r\n                              </div>\r\n                              <div className=\"icheck-primary\">\r\n                                <input type=\"radio\" name=\"option\" id=\"option4\" value=\"50000\" onChange={this.handleChange.bind(this, \"Nominal\")} />\r\n                                <label htmlFor=\"option4\" style={{ fontWeight: 'normal' }}>Rp. 50000</label>\r\n                              </div>\r\n                              <div className=\"icheck-primary\">\r\n                                <input type=\"radio\" name=\"option\" id=\"option5\" value=\"100000\" onChange={this.handleChange.bind(this, \"Nominal\")} />\r\n                                <label htmlFor=\"option5\" style={{ fontWeight: 'normal' }}>Rp. 100000</label>\r\n                              </div>\r\n                              <div className=\"icheck-primary\">\r\n                                <input type=\"radio\" name=\"option\" id=\"option6\" value=\"200000\" onChange={this.handleChange.bind(this, \"Nominal\")} />\r\n                                <label htmlFor=\"option6\" style={{ fontWeight: 'normal' }}>Rp. 200000</label>\r\n                              </div>\r\n                              <span style={{ color: \"red\" }}>\r\n                                {this.state.errors[\"Nominal\"]}\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <hr className=\"divider\" />\r\n                    <div className=\"row\">\r\n                      <div className=\"col-lg-5\">\r\n                        <label className=\"title-module\">Payment Method:</label>\r\n                      </div>\r\n                      <div className=\"col-lg-7\">\r\n                        <div className=\"form-group\">\r\n                          <div className=\"radio-group method\">\r\n                            <div className=\"row row-cols-md-3\" style={{ textAlign: 'center' }}>\r\n                              <div className=\"icheck-primary\">\r\n                                <input type=\"radio\" name=\"option2\" id=\"option-method1\" Value=\"Credit Card\" onChange={this.handleChange.bind(this, \"Payment\")} />\r\n                                <label htmlFor=\"option1\" style={{ fontWeight: 'normal' }}>Credit Card</label>\r\n                              </div>\r\n                              <div className=\"icheck-primary\">\r\n                                <input type=\"radio\" name=\"option2\" id=\"option-method2\" Value=\"Paypall\" onChange={this.handleChange.bind(this, \"Payment\")} />\r\n                                <label htmlFor=\"option2\" style={{ fontWeight: 'normal' }}>Paypall</label>\r\n                              </div>\r\n                              <div className=\"icheck-primary\">\r\n                                <input type=\"radio\" name=\"option2\" id=\"option-method3\" Value=\"OVO\" onChange={this.handleChange.bind(this, \"Payment\")} />\r\n                                <label htmlFor=\"option3\" style={{ fontWeight: 'normal' }}>OVO</label>\r\n                              </div>\r\n                              <div className=\"icheck-primary gopay\">\r\n                                <input type=\"radio\" name=\"option2\" id=\"option-method4\" Value=\"Gopay\" onChange={this.handleChange.bind(this, \"Payment\")} />\r\n                                <label htmlFor=\"option4\" style={{ fontWeight: 'normal' }}>Gopay</label>\r\n                              </div>\r\n                              <div className=\"icheck-primary dana\">\r\n                                <input type=\"radio\" name=\"option2\" id=\"option-method5\" Value=\"Dana\" onChange={this.handleChange.bind(this, \"Payment\")} />\r\n                                <label htmlFor=\"option5\" style={{ fontWeight: 'normal' }}>Dana</label>\r\n                              </div>\r\n                              <div className=\"icheck-primary cash\">\r\n                                <input type=\"radio\" name=\"option2\" id=\"option-method6\" Value=\"Cash\" onChange={this.handleChange.bind(this, \"Payment\")} />\r\n                                <label htmlFor=\"option6\" style={{ fontWeight: 'normal' }}>Cash</label>\r\n                              </div>\r\n                              <span style={{ color: \"red\" }}>\r\n                                {this.state.errors[\"Payment\"]}\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"modal-footer\">\r\n                    <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\">\r\n                      Close\r\n                  </button>\r\n                    <button className=\"btn btn-primary\" id=\"btn-delete\" type=\"submit\" >Next</button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal fade\" id=\"checkModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabesl\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                    Check Data Top Up\r\n                  </h5>                  \r\n                </div>\r\n                <div className=\"modal-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-5\">\r\n                      <label className=\"title-module\">ID User:</label>\r\n                    </div>\r\n                    <div className=\"col-md-7\">\r\n                      <input type=\"text\" id=\"checkuser\" name=\"name\" className=\"form-control\" value={this.state.userId} readOnly placeholder />\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"divider\" />\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-5\">\r\n                      <label className=\"title-module\">Total Nominal:</label>\r\n                    </div>\r\n                    <div className=\"col-md-7\">\r\n                      <input type=\"text\" id=\"checknominal\" name=\"name\" className=\"form-control\" value={this.state.fields[\"Nominal\"]} readOnly placeholder />\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"divider\" />\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-5\">\r\n                      <label className=\"title-module\">Payment Method:</label>\r\n                    </div>\r\n                    <div className=\"col-md-7\">\r\n                      <input type=\"text\" id=\"checkmethod\" name=\"name\" className=\"form-control\" value={this.state.fields[\"Payment\"]} readOnly placeholder />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\" data-target=\"#topupModal\" data-toggle=\"modal\">\r\n                    Back\r\n                  </button>\r\n                  <a className=\"btn btn-primary\" id=\"btn-delete\" href=\"#\" data-dismiss=\"modal\" data-target=\"#passwordModal\" data-toggle=\"modal\">Next</a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal fade\" id=\"passwordModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabesl\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                    Password\r\n                  </h5>                  \r\n                </div>\r\n                <form\r\n                  role=\"form\"\r\n                  id=\"addtopup\"\r\n                  onSubmit={this.contactSubmit2.bind(this)}\r\n                >\r\n                  <div className=\"modal-body\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-5\">\r\n                        <label className=\"title-module\">Password:</label>\r\n                      </div>\r\n                      <div className=\"col-md-7\">\r\n                        <input type=\"password\" id=\"PasswordConfirm\" name=\"PasswordConfirm\" className=\"form-control\" placeholder=\"Password\" onChange={this.handleChange2.bind(this, \"PasswordConfirm\")} value={this.state.fields[\"PasswordConfirm\"]} />\r\n                        <span style={{ color: \"red\" }}>\r\n                          {this.state.errors[\"PasswordConfirm\"]}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <hr className=\"divider\" />\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-5\">\r\n                        <label className=\"title-module\">Confirm Password:</label>\r\n                      </div>\r\n                      <div className=\"col-md-7\">\r\n                        <input type=\"password\" id=\"PasswordConfirm2\" name=\"PasswordConfirm2\" className=\"form-control\" placeholder=\"Confirm Password\" onChange={this.handleChange2.bind(this, \"PasswordConfirm2\")} value={this.state.fields[\"PasswordConfirm2\"]} />\r\n                        <span style={{ color: \"red\" }}>\r\n                          {this.state.errors[\"PasswordConfirm2\"]}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"modal-footer\">\r\n                    <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\" data-toggle=\"modal\" data-target=\"#checkModal\">\r\n                      Back\r\n                  </button>\r\n                    <button className=\"btn btn-success\" id=\"btn-delete\" type=\"submit\">Confirm</button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Main content */}\r\n\r\n          <section className=\"content-header\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row mb-2\">\r\n                <div className=\"col-sm-6\">\r\n                  <h3>History Transaction</h3>\r\n                </div>\r\n                <div className=\"col-sm-6\">\r\n                  <ol className=\"breadcrumb float-sm-right\">\r\n                    <li className=\"breadcrumb-item\">\r\n                      <a href='/'>Home</a>\r\n                    </li>\r\n                    <li className=\"breadcrumb-item active\">History Transaction</li>\r\n                  </ol>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* <!-- /.container-fluid --> */}\r\n          </section>\r\n\r\n          <section className=\"content pdg-btm\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12 ctm-responsive\">\r\n                      {show ? <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary add-btn\"\r\n                        onClick={()=>{this.refresh()}}\r\n                        style={{ float: \"right\" }}\r\n                      >\r\n                        <i className=\"nav-icon fas fa-plus\"></i>\r\n                      Add Top Up\r\n                    </button> : null}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <DataTable headings={headings} rows={rows} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          {/* /.content */}\r\n        </div>\r\n        {/* /.content-wrapper */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TopUpManagement;","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\DetailInvoice\\DetailInvoice.js",["244","245"],"import React, { Component } from 'react'\r\nimport NumberFormat from 'react-number-format';\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport MaxIcon from \"../../Auth/Assets/Images/bookshelf.png\";\r\nimport Axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nclass DetailInvoice extends Component {\r\n    constructor() {\r\n        super();\r\n        let user = JSON.parse(localStorage.getItem('user'))\r\n        const userToken = user.token;\r\n        this.state = {\r\n            invoiceId: '',\r\n            dataInvoice: [],\r\n            dataDetailInvoice: [],\r\n            userToken: userToken\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        const invoiceId = this.props.match.params.invoiceId;\r\n        this.getDetailInvoice(invoiceId);\r\n    }\r\n\r\n    async getDetailInvoice(invoiceId) {\r\n\r\n        const token = this.state.userToken;\r\n        const config = {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n        }\r\n        const getInvoice = await Axios.get(`http://localhost:8080/invoice/get-by-id/${invoiceId}`, config)\r\n        const getInvoiceDetail = await Axios.get(`http://localhost:8080/invoice-detail/get-by-invoice-id/${invoiceId}`, config)\r\n        console.log(getInvoiceDetail);\r\n        this.setState({ dataInvoice: getInvoice.data.data, dataDetailInvoice: getInvoiceDetail.data.data })\r\n    }\r\n\r\n    formatRupiah = (nilai) => {\r\n        return <NumberFormat value={nilai} displayType={'text'} thousandSeparator={true} prefix={'Rp. '} />\r\n    }\r\n    convertToDate = (date) => {\r\n        if (date === null) {\r\n            return \"-\"\r\n        } else {\r\n            return moment.utc(date).format('DD-MM-YYYY hh:mm')\r\n        }\r\n    }\r\n    printStatusPaid = () => {\r\n        if (this.state.dataInvoice.statusInvoice === \"Paid\") {\r\n            return <h2><font color=\"green\">PAID</font></h2>\r\n        }else if (this.state.dataInvoice.statusInvoice === \"Waiting For Payment\"){\r\n            return <h2><font color=\"blue\">Waiting For Payment</font></h2>\r\n        }else if (this.state.dataInvoice.statusInvoice === \"Canceled\"){\r\n            return <h2><font color=\"red\">Canceled</font></h2>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { dataInvoice, dataDetailInvoice } = this.state;\r\n        let cardBody, action;\r\n\r\n        if (dataInvoice != \"\") {\r\n\r\n            cardBody = <div className=\"card-body\">\r\n                <div>\r\n                    <div className=\"invoice p-3 mb-3\">\r\n                        {/* <!-- title row --> */}\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <h4>\r\n                                    <img src={MaxIcon} style={{ height: '2rem' }} /> Maxwell Library <small className=\"float-right\">Date: {this.convertToDate(dataInvoice.invoiceDate)}</small>\r\n                                </h4>\r\n                            </div>\r\n                            {/* <!-- /.col --> */}\r\n                        </div>\r\n                        {/* <!-- info row --> */}\r\n                        <div className=\"row invoice-info\">\r\n                            <div className=\"col-sm-4 invoice-col\">\r\n                                From\r\n            <address>\r\n                                    <strong>Maxwell Library</strong>\r\n                                    <br />\r\n              795 Folsom Ave, Suite 600\r\n              <br />\r\n              San Francisco, CA 94107\r\n              <br />\r\n              Phone: (804) 123-5432\r\n              <br />\r\n              Email: maxwell@library.com\r\n            </address>\r\n                            </div>\r\n                            {/* <!-- /.col --> */}\r\n                            <div className=\"col-sm-4 invoice-col\">\r\n                                To\r\n                        <address>\r\n                                    <strong>{dataInvoice.borrower}</strong><br />\r\n                                    {dataInvoice.address}<br />\r\n            Phone: {dataInvoice.phone}<br />\r\n            Email: {dataInvoice.email}\r\n                                </address>\r\n                            </div>\r\n                            {/* <!-- /.col --> */}\r\n                            <div className=\"col-sm-4 invoice-col\">\r\n                                <b>Invoice {dataInvoice.noInvoice} <font color=\"orange\" >({dataInvoice.typeInvoice})</font></b><br />\r\n                                <br />\r\n                                {this.printStatusPaid()}\r\n                            </div>\r\n                            {/* <!-- /.col --> */}\r\n\r\n                        </div>\r\n                        {/* <!-- /.row --> */}\r\n\r\n                        {/* <!-- Table row --> */}\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 table-responsive\">\r\n                                <table className=\"table table-striped\">\r\n                                    <thead>\r\n                                        <tr className=\"text-nowrap text-center\">\r\n                                            <th>No.</th>\r\n                                            <th>Rent ID</th>\r\n                                            <th>Book Code</th>\r\n                                            <th>Book Title</th>\r\n                                            <th>Borrowed On</th>\r\n                                            <th>Returned Date</th>\r\n                                            <th>Due On</th>\r\n                                            <th>Type</th>\r\n                                            <th>Fine Amount</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            dataDetailInvoice.map((val, index) => {\r\n                                                console.log(val);\r\n                                                return (\r\n                                                    <tr key={index}>\r\n                                                        <td className=\"text-nowrap\" >{index + 1}</td>\r\n                                                        <td className=\"text-nowrap text-center\" >{val.borrowedBookCode}</td>\r\n                                                        <td className=\"text-nowrap text-center\" >{val.bookDetailCode}</td>\r\n                                                        <td className=\"text-nowrap text-center\" >{val.title}</td>\r\n                                                        <td className=\"text-nowrap text-center\" >{this.convertToDate(val.borrowedDate)}</td>\r\n                                                        <td className=\"text-nowrap text-center\" >{this.convertToDate(val.returnDate)}</td>\r\n                                                        <td className=\"text-nowrap text-center\" >{this.convertToDate(val.threshold)}</td>\r\n                                                        <td className=\"text-nowrap\" >{val.type}</td>\r\n                                                        <td className=\"text-nowrap\" >{this.formatRupiah(val.total)}</td>\r\n                                                    </tr>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                            {/* <!-- /.col --> */}\r\n                        </div>\r\n                        {/* <!-- /.row --> */}\r\n\r\n                        <div className=\"row\">\r\n                            {/* <!-- accepted payments column --> */}\r\n                            <div className=\"col-6\"></div>\r\n                            {/* <!-- /.col --> */}\r\n                            <div className=\"col-6\">\r\n                                <p className=\"lead\" style={{ float: 'right' }}>Amount Due {this.convertToDate(dataInvoice.threshold)}</p>\r\n                                <div className=\"table-responsive\">\r\n                                    <table className=\"table\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th style={{ width: \"59%\" }}>Total:</th>\r\n                                                <td>{this.formatRupiah(`${dataInvoice.grandTotal}`)}</td>\r\n                                            </tr>\r\n                                        </thead>\r\n\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                            {/* <!-- /.col --> */}\r\n                        </div>\r\n                        {/* <!-- /.row --> */}\r\n\r\n                        {/* <!-- this row will not appear when printing --> */}\r\n                        <div className=\"row no-print\">\r\n                            <div className=\"col-12\">\r\n                                <Link to=\"/PaymentPrint\" target=\"_blank\">\r\n                                    <i className=\"fas fa-print\"></i> Print\r\n                           </Link>\r\n                                {action}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        } else {\r\n            cardBody = \"\";\r\n            action = \"\";\r\n\r\n        }\r\n        return (\r\n            < div className=\"content-wrapper\" >\r\n                {/* Content Header (Page header) */}\r\n                < section className=\"content-header\" >\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-sm-6\">\r\n                                <h1>Detail Invoice</h1>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <ol className=\"breadcrumb float-sm-right\">\r\n                                    <li className=\"breadcrumb-item\"><Link to=\"/\">Home</Link></li>\r\n                                    <li className=\"breadcrumb-item\"><Link to=\"FineManagement\">Fine Management</Link></li>\r\n                                    <li className=\"breadcrumb-item active\">Detail Invoice</li>\r\n                                </ol>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section >\r\n                {/* Main content */}\r\n                < section className=\"content\" >\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header\">\r\n                                        <h3 className=\"card-title\">Detail Invoice</h3>\r\n                                    </div>\r\n                                    {/* /.card-header */}\r\n                                    {cardBody}\r\n                                    {/* /.card-body */}\r\n                                </div>\r\n                                {/* /.card */}\r\n                            </div>\r\n                            {/* /.col */}\r\n                        </div>\r\n                        {/* /.row */}\r\n                    </div>\r\n                    {/* /.container-fluid */}\r\n                </section >\r\n                {/* /.content */}\r\n            </div >\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(DetailInvoice)","C:\\Users\\ASUS\\maxwell-library-react\\src\\Components\\Datepicker\\Dates.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Profile\\ChangePassword.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\CategoryManagement\\CategoryManagement.js",["246"],"import React, { Component } from \"react\";\r\nimport \"./customtable.css\";\r\nimport \"bootstrap\";\r\nimport DataTable from \"../../../Components/Datatable/Table\";\r\nimport Action from \"../../../Components/Datatable/Action\";\r\nimport $ from \"jquery\";\r\nimport \"bootstrap\";\r\nimport Swal from \"sweetalert2\";\r\nimport Axios from '../../../Instances/axios-instances';\r\n\r\nclass CategoryManagement extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      fields: [],\r\n      errors: {},\r\n      data: [],\r\n      rows: [],\r\n      results: [],\r\n    };\r\n\r\n    this.categoryChange = this.categoryChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  async fetchData() {\r\n    $('#example1').DataTable().destroy();\r\n    const results = [];\r\n    \r\n    var no = 1;\r\n\r\n    await Axios.get('/category/get-all-active')\r\n          .then((response) => {\r\n            const result = response.data;\r\n            this.setState({data: result})\r\n            result.map((category) => {\r\n              console.log(category)\r\n              var row = [];\r\n              row.push(<td className=\"text-center\">{no++}</td>);\r\n              row.push(\r\n                <td className=\"text-center py-0 align-middle\">\r\n                  <div className=\"btn-group btn-group-sm\">\r\n                    <Action\r\n                      type=\"success\"\r\n                      title=\"Edit\"\r\n                      icon=\"pen\"\r\n                      dataToggle=\"modal\"\r\n                      dataTarget=\"#modal-edit\"\r\n                      onClick={() => this.getCategory(category.categoryId)}\r\n                    />\r\n                    <Action\r\n                      type=\"danger\"\r\n                      title=\"Delete\"\r\n                      icon=\"trash\"\r\n                      dataToggle=\"modal\"\r\n                      dataTarget=\"#modal-delete\"\r\n                      onClick={() => this.getCategory(category.categoryId)}\r\n                    />\r\n                  </div>\r\n                </td>\r\n              );\r\n              row.push(<td>{category.categoryId}</td>);\r\n              row.push(<td>{category.category}</td>);\r\n              results.push(row);\r\n            })\r\n            this.setState({ rows: results });\r\n\r\n            $(\"#example1\").DataTable({\r\n              responsive: true,\r\n              autoWidth: false,\r\n              });\r\n          })\r\n  }\r\n\r\n  getCategory = (id) => {\r\n    Axios\r\n      .get(\"/category/get-by-id/\" + id)\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({\r\n          category: response.data.category,\r\n          categoryId: id,\r\n        });\r\n      });\r\n  };\r\n\r\n  updateCategory = (id) => {\r\n\r\n    const category = {\r\n      category: this.state.category,\r\n    };\r\n\r\n    console.log(category)\r\n\r\n    if(this.handleValidationUpdate()) {\r\n      Axios\r\n      .put(\"/category/update-category/\" + id, category)\r\n      .then((response) => {\r\n        console.log(response);\r\n        $(\"#modal-edit\").modal(\"toggle\");\r\n        $('.modal-backdrop').remove();\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          title: \"Success\",\r\n          text: \"Your Data has been Updated\",\r\n          confirmButtonText: `OK`,\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            this.fetchData()\r\n          }\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  handleValidationUpdate() {\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    if(this.state.category === \"\") {\r\n      formIsValid = false;\r\n      errors[\"categoryName\"] = \"Category cannot be empty\";\r\n    }\r\n\r\n    this.setState({errors: errors})\r\n    return formIsValid\r\n  }\r\n\r\n  deleteCategory = (id) => {\r\n    Axios\r\n      .put(\"/category/delete-category/\" + id)\r\n      .then((response) => {\r\n        console.log(response);\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          title: \"Success\",\r\n          text: \"Your Data has been Deleted\",\r\n          confirmButtonText: `OK`,\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            this.fetchData()\r\n          }\r\n        });\r\n      });\r\n  };\r\n\r\n  categoryChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  resetModal() {\r\n    let fields = this.state.fields;\r\n    let errors = {}\r\n    fields[\"CategoryName\"] = \"\";\r\n    errors[\"CategoryName\"] = \"\";\r\n\r\n    this.setState({fields: fields});\r\n    this.setState({errors: errors});\r\n  }\r\n\r\n  handleValidation() {\r\n    let fields = this.state.fields;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    //Category Name\r\n    if (!fields[\"CategoryName\"]) {\r\n      formIsValid = false;\r\n      errors[\"CategoryName\"] = \"Category Name cannot be empty\";\r\n    }\r\n\r\n    this.setState({ errors: errors });\r\n    return formIsValid;\r\n  }\r\n\r\n  contactSubmit(e) {\r\n    let fields = this.state.fields;\r\n    e.preventDefault();\r\n    if (this.handleValidation()) {\r\n      $(\"#modal-add\").modal(\"hide\");\r\n      $('.modal-backdrop').remove();\r\n      const category = {\r\n        category: fields[\"CategoryName\"],\r\n      };\r\n      console.log(category);\r\n      Axios\r\n        .post(\"/category/add-category\", category)\r\n        .then((response) => {\r\n          console.log(response);\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: \"Success\",\r\n            text: \"Your Data has been Added\",\r\n            confirmButtonText: `OK`,\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              this.fetchData()\r\n              this.resetModal()\r\n            }\r\n          });\r\n        })\r\n        .catch((error) =>\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Error\",\r\n            text: \"Category already exist!\",\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              $(\"#modal-add\").modal(\"toggle\");\r\n            }\r\n          })\r\n        );\r\n    }\r\n  }\r\n\r\n  handleChange(field, e) {\r\n    let fields = this.state.fields;\r\n    let errors = {}\r\n    errors[\"CategoryName\"] = \"\";\r\n    fields[field] = e.target.value;\r\n    this.setState({ fields });\r\n    this.setState({ errors: errors})\r\n  }\r\n\r\n  render() {\r\n    const { rows } = this.state;\r\n    const headings = [\"No\", \"Action\", \"Category ID(s)\", \"Category Name\"];\r\n    return (\r\n      <div className=\"content-wrapper\">\r\n        {/* <!-- Content Header (Page header) --> */}\r\n        <section className=\"content-header\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col-sm-6\">\r\n                <h3>Category Management</h3>\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <ol className=\"breadcrumb float-sm-right\">\r\n                  <li className=\"breadcrumb-item\">\r\n                    <a href=\"/\">Home</a>\r\n                  </li>\r\n                  <li className=\"breadcrumb-item active\">Category</li>\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* <!-- /.container-fluid --> */}\r\n        </section>\r\n\r\n        <section className=\"content pdg-btm\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12 ctm-responsive\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-primary add-btn\"\r\n                      data-toggle=\"modal\"\r\n                      data-target=\"#modal-add\"\r\n                      style={{ float: \"right\" }}\r\n                    >\r\n                      <i className=\"nav-icon fas fa-plus\"></i>\r\n                      &nbsp; Add Category\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card-body\">\r\n                <DataTable headings={headings} rows={rows} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* <!--Modal Add--> */}\r\n        <div className=\"modal fade\" id=\"modal-add\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Add Category</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <form id=\"addCategory\" onSubmit={this.contactSubmit.bind(this)}>\r\n                <div className=\"modal-body\">\r\n                  <div className=\"card-body\">\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"inputCategoryName\">Category Name <small className=\"red-asterisk\">*</small></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"inputCategoryName\"\r\n                        name=\"category\"\r\n                        placeholder=\"Enter Category\"\r\n                        onChange={this.handleChange.bind(this, \"CategoryName\")}\r\n                        value={this.state.fields[\"CategoryName\"]}\r\n                      />\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"CategoryName\"]}\r\n                      </span>\r\n                    </div>\r\n                    <small><span className=\"red-asterisk\">*</span> Required</small> \r\n                  </div>\r\n                  \r\n                </div>\r\n                <div className=\"modal-footer justify-content-between\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-default\"\r\n                    data-dismiss=\"modal\"\r\n                    onClick={() => this.resetModal()}\r\n                  >\r\n                    Close\r\n                  </button>\r\n                  <button type=\"submit\" className=\"btn btn-warning\">\r\n                    Add\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n\r\n        {/* <!--Modal Edit--> */}\r\n        <div className=\"modal fade\" id=\"modal-edit\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Edit Category</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <form id=\"editCategory\">\r\n                <div className=\"modal-body\">\r\n                  <div className=\"card-body\">\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"editCategoryName\">Category Name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"category\"\r\n                        id=\"editCategoryName\"\r\n                        value={this.state.category}\r\n                        onChange={this.categoryChange}\r\n                      />\r\n                      <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"categoryName\"]}\r\n                          </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer justify-content-between\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-default\"\r\n                    data-dismiss=\"modal\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => this.updateCategory(this.state.categoryId)}\r\n                    className=\"btn btn-warning\"\r\n                  >\r\n                    Save changes\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n\r\n        {/* <!--Modal Delete--> */}\r\n        <div className=\"modal fade\" id=\"modal-delete\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Delete Category</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                If you Delete this, you can't be returned\r\n              </div>\r\n              <div className=\"modal-footer justify-content-between\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-default\"\r\n                  data-dismiss=\"modal\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-warning\"\r\n                  data-dismiss=\"modal\"\r\n                  onClick={() => this.deleteCategory(this.state.categoryId)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CategoryManagement;\r\n","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\UserManagement\\UserManagement.js",["247","248","249","250"],"import React, { Component } from 'react';\r\nimport DataTable from '../../../Components/Datatable/Table';\r\nimport Status from '../../../Components/Datatable/Status';\r\nimport axios from 'axios';\r\nimport './UserManagement.style.css'\r\nimport { Link } from 'react-router-dom'\r\nimport $ from 'jquery';\r\nimport \"datatables.net-responsive/js/dataTables.responsive\"\r\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\r\nclass UserManagement extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: [],\r\n      rows: [],\r\n      results: [],\r\n      isLoading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchDataUser();\r\n  }\r\n\r\n  async fetchDataUser() {\r\n    let fetchedData = await axios.get(\r\n      'https://dummyapi.io/data/api/user?limit=100',\r\n      {\r\n        headers: {\r\n          'app-id': '5fb34a83ea9b56971e58ca12',\r\n        },\r\n      }\r\n    );\r\n\r\n    this.setState.isLoading = false;\r\n    const resultUser = fetchedData.data.data;\r\n    this.setState({ data: resultUser });\r\n    $('#example1').DataTable().destroy();\r\n    this.fetchData();\r\n    $(\"#example1\").DataTable({\r\n      responsive: true,\r\n      autoWidth: false,\r\n    });\r\n  }\r\n\r\n  fetchData() {\r\n    let results = [];\r\n    let result = this.state.data;\r\n    result.map((user) => {\r\n      this.setState({ isLoading: true });\r\n      let row = [];\r\n      let statusVal = '';\r\n      let actVal = (\r\n        <div className=\"btn-group btn-group-sm\">\r\n          <div className=\"input-group-prepend\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-default dropdown-toggle\"\r\n              data-toggle=\"dropdown\"\r\n            >\r\n              User\r\n            </button>\r\n            <div className=\"dropdown-menu\">\r\n              <a className=\"dropdown-item\" href=\"#\">\r\n                Librarian\r\n              </a>\r\n              <a className=\"dropdown-item\" href=\"#\">\r\n                Superadmin\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n      if (user.title == 'mr') {\r\n        statusVal = <Status type=\"success\" val=\"active\" />;\r\n      } else {\r\n        statusVal = <Status type=\"danger\" val=\"inactive\" />;\r\n      }\r\n\r\n      row.push(<td className=\"text-center\">{user.id}</td>);\r\n      row.push(\r\n        <td class=\"user-info\">\r\n          <img src={user.picture} alt=\"avatar\" />\r\n        </td>\r\n      );\r\n      row.push(\r\n        <td className=\"text-center\">{`${user.firstName} ${user.lastName}`}</td>\r\n      );\r\n      row.push(<td className=\"text-center\">{user.email}</td>);\r\n      row.push(<td className=\"text-center\">{statusVal}</td>);\r\n      row.push(<td className=\"text-center\">{user.title}</td>);\r\n      row.push(<td className=\"text-center\">{actVal}</td>);\r\n      results.push(row);\r\n    });\r\n    this.setState({ rows: results });\r\n    this.setState({ isLoading: false });\r\n  }\r\n\r\n  render() {\r\n    const { rows } = this.state;\r\n    const headings = [\r\n      'ID',\r\n      'Photo',\r\n      'Fullname',\r\n      'Email',\r\n      'Status',\r\n      'Last Activity',\r\n      'Level',\r\n    ];\r\n\r\n    return (\r\n      <div className=\"content-wrapper\">\r\n        <section className=\"content-header\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col-sm-6\">\r\n                <h1>User Management</h1>\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <ol className=\"breadcrumb float-sm-right\">\r\n                  <li className=\"breadcrumb-item\"><Link to=\"/index\">Home</Link></li>\r\n                  <li className=\"breadcrumb-item active\">User Management</li>\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/* Main content */}\r\n        <section className=\"content\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <div className=\"card\">\r\n                  {/* /.card-header */}\r\n                  <div className=\"card-body\">\r\n                    <DataTable headings={headings} rows={rows} />\r\n                    {/* /.card-body */}\r\n                  </div>\r\n                </div>\r\n                {/* /.card */}\r\n              </div>\r\n              {/* /.col */}\r\n            </div>\r\n            {/* /.row */}\r\n          </div>\r\n          {/* /.container-fluid */}\r\n        </section>\r\n        {/* /.content */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserManagement;\r\n","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\FineManagement\\FineManagement.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Catalogue\\Catalogue.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\Card.js",["251"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\Validate.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Profile\\AdminProfile.js",["252","253","254","255","256","257","258","259"],"import React, { Component, Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport avatarUser from '../../../Assets/Media/admin.png'\r\nimport swal from 'sweetalert'\r\n\r\n\r\nclass Profile extends Component {\r\n\r\n    displayEditForm() {\r\n        const editForm = document.querySelector('#container-editform');\r\n        editForm.style.display = 'block';\r\n\r\n    }\r\n\r\n    hiddenEditForm(){\r\n        const editForm = document.querySelector('#container-editform');\r\n        editForm.style.display = 'none';\r\n    }\r\n\r\n    submitEditProfile() {\r\n        const editButton = document.querySelector('button.edit-profile');\r\n        const editForm = document.querySelector('#container-editform');\r\n        const cancelForm = document.querySelector('.btn-editform button');\r\n        \r\n        editForm.style.display = 'none';\r\n    \r\n        var firstName = document.getElementById('user-firstname').value;\r\n        var lastName = document.getElementById('user-lastname').value;\r\n        var dateOfBirth = document.getElementById('date-birth').value;\r\n        var emailUser = document.getElementById('user-email').value;\r\n        var addressUser = document.getElementById('user-address').value;\r\n        var phoneNumber = document.getElementById('user-number').value;\r\n    \r\n        if (firstName == '' || lastName == '' || dateOfBirth == '' || emailUser == '' || addressUser == '' || phoneNumber == ''){\r\n                swal(\r\n                    'Submit Failed !',\r\n                    'You should fill in the blank',\r\n                    'error'\r\n                );\r\n                editForm.style.display = 'none';\r\n            }else{\r\n                swal(\r\n                    'Submitted !',\r\n                    'You clicked the button!',\r\n                    'success'\r\n                );\r\n    \r\n                document.getElementById('firstname').innerHTML = firstName;\r\n                document.getElementById('lastname').innerHTML = lastName;\r\n                document.getElementById('birthday').innerHTML = dateOfBirth;\r\n                document.getElementById('email').innerHTML = emailUser;\r\n                document.getElementById('address').innerHTML = addressUser;\r\n                document.getElementById('phonenumber').innerHTML = phoneNumber;\r\n                \r\n            }\r\n    \r\n    }\r\n    render(){\r\n        return(\r\n            <Fragment>\r\n            <div className=\"content-wrapper\">\r\n                <section className=\"content-user\">\r\n                    <div className=\"container-profile\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <div className=\"profile-account\">\r\n                                    <div className=\"picture\">\r\n                                        <img src={avatarUser} alt=\"Admin Profile\" width='300' height='300'/>\r\n                                    </div>\r\n                                    <button \r\n                                    type=\"button\" \r\n                                    className=\"btn btn-primary edit-profile\"\r\n                                    name=\"editProfile\"\r\n                                    onClick={() => this.displayEditForm()}\r\n                                    >\r\n                                    Edit Profile\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        \r\n                        </div>\r\n                        <h1 className=\"title-profile\">\r\n                        My Profile\r\n                        </h1>\r\n                        <div className=\"data-user\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-6\">\r\n                                <div className=\"data\">\r\n                                    <h5 >Full Name</h5>\r\n                                    <span id=\"firstname\">Admin</span>\r\n                                    <hr/>\r\n                                </div>\r\n                                <div className=\"data\">\r\n                                    <h5 >ID Admin</h5>\r\n                                    <span id=\"lastname\">01</span>\r\n                                    <hr/>\r\n                                </div>\r\n                                <div className=\"data\">\r\n                                    <h5>Date of Birth</h5>\r\n                                    <span id=\"birthday\">19/06/2020</span>\r\n                                    <hr/>\r\n                                </div>\r\n                                <div className=\"data\">\r\n                                    <h5>Address</h5>\r\n                                    <span id=\"address\">Indonesia</span>\r\n                                    <hr/>\r\n                                </div>\r\n                                </div>\r\n                                <div className=\"col-lg-6\">\r\n                                <div className=\"data\">\r\n                                    <h5>Email</h5>\r\n                                    <span id=\"email\">example@gmail.com</span>\r\n                                    <hr/>\r\n                                </div>\r\n                                <div className=\"data\">\r\n                                    <h5 >Phone Number</h5>\r\n                                    <span id=\"phonenumber\">+628123456789</span>\r\n                                    <hr/>\r\n                                </div>\r\n                                <div className=\"data\">\r\n                                    {/* <a href=\"change_password.html\"><strong><u>Change Password</u></strong></a> */}\r\n                                    <Link to='/ChangePassword'>Change Password</Link>\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>  \r\n                    </div>\r\n                </section>\r\n\r\n                {/* Edit Form  */}\r\n                <section className=\"padding-editform\">\r\n                <div id=\"container-editform\">\r\n                <h3 style={{textAlign: 'center'}}>Edit Admin Profile</h3>\r\n                    <div className=\"form-item\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-8\">\r\n                        <label className=\"input-title\">Full Name</label>\r\n                        </div>\r\n                        <div className=\"col-lg-12\">\r\n                        <input className=\"input-value\" id=\"user-firstname\" type=\"text\" name=\"user-firstname\"/>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-item\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-8\">\r\n                        <label className=\"input-title\">ID Admin</label>\r\n                        </div>\r\n                        <div className=\"col-lg-12\">\r\n                        <input className=\"input-value\" id=\"user-lastname\" type=\"text\" name=\"user-lastname\"/>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-item\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-8\">\r\n                        <label className=\"input-title\">Date of Birth</label>\r\n                        </div>\r\n                        <div className=\"col-lg-12\">\r\n                        <input className=\"input-value\" id=\"date-birth\" type=\"text\" name=\"date-birth\" placeholder=\"dd/mm/yyyy\"/>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-item\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-8\">\r\n                        <label className=\"input-title\">Address</label>\r\n                        </div>\r\n                        <div className=\"col-lg-12\">\r\n                        <input className=\"input-value\" id=\"user-address\" type=\"text\" name=\"user-address\"/>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-item\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-8\">\r\n                        <label className=\"input-title\">Email</label>\r\n                        </div>\r\n                        <div className=\"col-lg-12\">\r\n                        <input className=\"input-value\" id=\"user-email\" type=\"email\" name=\"user-email\" placeholder=\"example@gmail.com\"/>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-item\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-8\">\r\n                        <label className=\"input-title\">Phone Number</label>\r\n                        </div>\r\n                        <div className=\"col-lg-12\">\r\n                        <input className=\"input-value\" id=\"user-number\" type=\"text\" name=\"user-number\" placeholder=\"+62-812-345-6789\"/>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"btn-editform\">\r\n                    <input className=\"btn btn-primary mr-2\" type=\"submit\" value=\"Submit\" onClick={()=> this.submitEditProfile()}/>\r\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={() => this.hiddenEditForm()}>Close</button>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            </div>\r\n            </Fragment>\r\n\r\n        )\r\n    }\r\n}\r\nexport default Profile",["260","261"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Payment\\PaymentInvoicePrintPaid.js",["262"],"import React, { Component } from \"react\";\r\nimport MaxIcon from '../../Auth/Assets/Images/bookshelf.png'\r\n\r\nclass PaymentInvoicePrintPaid extends Component {\r\n  \r\n  componentDidMount() {\r\n    window.addEventListener(\"load\", window.print());\r\n  }  \r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <section className=\"invoice\">\r\n          {/* <!-- title row --> */}\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <h4>\r\n                <img\r\n                  src={MaxIcon}\r\n                  style={{height: \"2rem\"}}\r\n                />{\" \"}\r\n                Maxwell Library\r\n                <small className=\"float-right\">Date: 19/11/2020</small>\r\n              </h4>\r\n            </div>\r\n            {/* <!-- /.col --> */}\r\n          </div>\r\n          {/* <!-- info row --> */}\r\n          <div className=\"row invoice-info\">\r\n            <div className=\"col-sm-4 invoice-col\">\r\n              From\r\n              <address>\r\n                <strong>Maxwell Library</strong>\r\n                <br />\r\n                795 Folsom Ave, Suite 600\r\n                <br />\r\n                San Francisco, CA 94107\r\n                <br />\r\n                Phone: (804) 123-5432\r\n                <br />\r\n                Email: maxwell@library.com\r\n              </address>\r\n            </div>\r\n            {/* <!-- /.col --> */}\r\n            <div className=\"col-sm-4 invoice-col\">\r\n              To\r\n              <address>\r\n                <strong>Niki Zefanya</strong>\r\n                <br />\r\n                795 Folsom Ave, Suite 600\r\n                <br />\r\n                San Francisco, CA 94107\r\n                <br />\r\n                Phone: (555) 539-1037\r\n                <br />\r\n                Email: john.doe@example.com\r\n              </address>\r\n            </div>\r\n            {/* <!-- /.col --> */}\r\n            <div className=\"col-sm-4 invoice-col\">\r\n              <b>Invoice #007612</b>\r\n              <br /><br/>\r\n             <h2><font color=\"green\">PAID</font></h2>\r\n            </div>\r\n            {/* <!-- /.col --> */}\r\n          </div>\r\n          {/* <!-- /.row --> */}\r\n\r\n          {/* <!-- Table row --> */}\r\n          <div className=\"row\">\r\n            <div className=\"col-12 table-responsive\">\r\n              <table className=\"table table-striped\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>No.</th>\r\n                    <th>Book Title</th>\r\n                    <th>Borrowed On</th>\r\n                    <th>Due On</th>\r\n                    <th>Late By</th>\r\n                    <th>Fine Amount</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>1</td>\r\n                    <td>Dilan 1990</td>\r\n                    <td>16/11/2020</td>\r\n                    <td>18/11/2020</td>\r\n                    <td>2 Days</td>\r\n                    <td>Rp. 10.000</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>2</td>\r\n                    <td>Harry Potter</td>\r\n                    <td>16/11/2020</td>\r\n                    <td>18/11/2020</td>\r\n                    <td>2 Days</td>\r\n                    <td>Rp. 10.000</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            {/* <!-- /.col --> */}\r\n          </div>\r\n          {/* <!-- /.row --> */}\r\n\r\n          <div className=\"row\">\r\n            {/* <!-- accepted payments column --> */}\r\n            <div className=\"col-6\"></div>\r\n            {/* <!-- /.col --> */}\r\n            <div className=\"col-6\">\r\n              <p className=\"lead\" style={{float:\"right\"}}>\r\n                Amount Due 25/11/2020\r\n              </p>\r\n\r\n              <div className=\"table-responsive\">\r\n                <table className=\"table\">\r\n                  <tr>\r\n                    <th style={{width:\"50%\"}}>Subtotal:</th>\r\n                    <td>Rp. 20.000</td>\r\n                  </tr>\r\n                </table>\r\n              </div>\r\n            </div>\r\n            {/* <!-- /.col --> */}\r\n          </div>\r\n          {/* <!-- /.row --> */}\r\n\r\n          {/* <!-- /.row --> */}\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PaymentInvoicePrintPaid;\r\n","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Profile\\Profile.js",["263"],"import React, { Component, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport axios from '../../../Instances/axios-instances';\r\nimport moment from 'moment';\r\nimport dayjs from 'dayjs';\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.submitUpdateProfile = this.submitUpdateProfile.bind(this);\r\n    this.state = {\r\n      firstname: '',\r\n      lastname: '',\r\n      datebirth: '',\r\n      email: '',\r\n      address: '',\r\n      number: '',\r\n      img: '',\r\n      balance: '',\r\n\r\n      profileimage: '',\r\n      updateFirstName: '',\r\n      updateLastName: '',\r\n      updateBirthDate: '',\r\n      updateAddress: '',\r\n      updatePhoneNumber: '',\r\n\r\n      dataLogUser : [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchDataUser();\r\n    this.getLogUser();\r\n  }\r\n\r\n  handleChangeProfile(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    console.log(this.state);\r\n  }\r\n\r\n  handleAddFile(e) {\r\n    this.getBase64(e.target.files[0]).then((data) =>\r\n      this.setState({\r\n        [e.target.name]: data.split(',').pop(),\r\n      })\r\n    );\r\n  }\r\n\r\n  getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n  }\r\n\r\n  submitUpdateProfile(e) {\r\n    e.preventDefault();\r\n\r\n    let {\r\n      profileimage,\r\n      updateFirstName,\r\n      updateLastName,\r\n      updateBirthDate,\r\n      updateAddress,\r\n      updatePhoneNumber,\r\n    } = this.state;\r\n\r\n    let postData = {\r\n      firstName: updateFirstName,\r\n      lastName: updateLastName,\r\n      address: updateAddress,\r\n      phoneNumber: updatePhoneNumber,\r\n      dateOfBirth: updateBirthDate,\r\n      img: profileimage,\r\n    };\r\n\r\n    axios\r\n      .post('profile', postData)\r\n      .then(() => {\r\n        this.hiddenEditForm();\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Update Profile Success!',\r\n          showCancelButton: false,\r\n          text: 'Update profile succes',\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            this.fetchDataUser();\r\n          }\r\n        });\r\n      })\r\n      .catch((error) =>\r\n        Swal.fire('Update Failed !', 'Incorrect parameter', 'error')\r\n      );\r\n  }\r\n\r\n  async fetchDataUser() {\r\n    let balance = JSON.parse(localStorage.getItem('balance'));\r\n    let date = null\r\n    await axios\r\n      .get('/profile')\r\n      .then((response) => {\r\n        const dataProfile = response.data;\r\n\r\n        if(dataProfile.dateOfBirth) {\r\n          date = new Date(dataProfile.dateOfBirth).toISOString().slice(0, 10);\r\n        }\r\n\r\n        this.setState({\r\n          firstname: dataProfile.firstName,\r\n          lastname: dataProfile.lastName,\r\n          img: dataProfile.img,\r\n          email: dataProfile.email,\r\n          balance: balance,\r\n          address: dataProfile.address,\r\n          datebirth: date,\r\n          number: dataProfile.phoneNumber,\r\n        });\r\n\r\n        this.setState({\r\n          updateFirstName: this.state.firstname,\r\n          updateLastName: this.state.lastname,\r\n          updateBirthDate: this.state.datebirth,\r\n          updateAddress: this.state.address,\r\n          updatePhoneNumber: this.state.number,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  async getLogUser() {\r\n      let fetchLogUser = await axios.get('log/get-log-user')\r\n      this.setState({ dataLogUser : fetchLogUser.data});\r\n      console.log(this.state.dataLogUser);\r\n  }\r\n\r\n\r\n  displayEditForm() {\r\n    const editForm = document.querySelector('#container-editform');\r\n    editForm.style.display = 'block';\r\n  }\r\n\r\n  hiddenEditForm() {\r\n    const editForm = document.querySelector('#container-editform');\r\n    editForm.style.display = 'none';\r\n  }\r\n\r\n  submitEditProfile() {\r\n    const editForm = document.querySelector('#container-editform');\r\n\r\n    editForm.style.display = 'none';\r\n\r\n    var firstName = document.getElementById('user-firstname').value;\r\n    var lastName = document.getElementById('user-lastname').value;\r\n    var dateOfBirth = document.getElementById('date-birth').value;\r\n    var emailUser = document.getElementById('user-email').value;\r\n    var addressUser = document.getElementById('user-address').value;\r\n    var phoneNumber = document.getElementById('user-number').value;\r\n\r\n    if (\r\n      firstName === '' ||\r\n      lastName === '' ||\r\n      dateOfBirth === '' ||\r\n      emailUser === '' ||\r\n      addressUser === '' ||\r\n      phoneNumber === ''\r\n    ) {\r\n      Swal.fire('Submit Failed !', 'You should fill in the blank', 'error');\r\n      editForm.style.display = 'none';\r\n    } else {\r\n      Swal.fire('Submitted !', 'You clicked the button!', 'success');\r\n\r\n      document.getElementById('firstname').innerHTML = firstName;\r\n      document.getElementById('lastname').innerHTML = lastName;\r\n      document.getElementById('birthday').innerHTML = dateOfBirth;\r\n      document.getElementById('email').innerHTML = emailUser;\r\n      document.getElementById('address').innerHTML = addressUser;\r\n      document.getElementById('phonenumber').innerHTML = phoneNumber;\r\n    }\r\n  }\r\n\r\n  convertToTime = (date) => {\r\n    if (date === null) {\r\n        return \"-\"\r\n    } else {\r\n        return moment.utc(date).format('HH:mm')\r\n    }\r\n  }\r\n\r\n  convertToDate = (date) => {\r\n    if (date === null) {\r\n        return \"-\"\r\n    } else {\r\n        return moment.utc(date).format('MMM Do, YYYY')\r\n    }\r\n  }\r\n\r\n  dateLog = (date) => {\r\n    var relativeTime = require('dayjs/plugin/relativeTime');\r\n    dayjs.extend(relativeTime);\r\n\r\n    if (date === null) {\r\n      return \"-\"\r\n    } else {\r\n        return dayjs().to(dayjs(date));\r\n    }\r\n  }\r\n  render() {\r\n\r\n    const { dataLogUser } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <section className=\"content-user\">\r\n            <div className=\"container-profile\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-12\">\r\n                  <div className=\"profile-account\">\r\n                    <div className=\"picture\">\r\n                      <img\r\n                        src={this.state.img}\r\n                        className=\"img-circle elevation-2 profile-img-custom\"\r\n                        style={{ height: '100px' }}\r\n                        alt=\"avatarUser\"\r\n                      />\r\n                    </div>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-primary edit-profile\"\r\n                      name=\"editProfile\"\r\n                      onClick={() => this.displayEditForm()}\r\n                    >\r\n                      Edit Profile\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <h1 className=\"title-profile\">My Profile</h1>\r\n              <div className=\"data-user\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-6\">\r\n                    <div className=\"data\">\r\n                      <h5>First Name</h5>\r\n                      <span id=\"firstname\">{this.state.firstname}</span>\r\n                      <hr />\r\n                    </div>\r\n                    <div className=\"data\">\r\n                      <h5>Last Name</h5>\r\n                      <span id=\"lastname\">{this.state.lastname}</span>\r\n                      <hr />\r\n                    </div>\r\n                    <div className=\"data\">\r\n                      <h5>Date of Birth</h5>\r\n                      <span id=\"birthday\">{this.state.datebirth}</span>\r\n                      <hr />\r\n                    </div>\r\n                    <div className=\"data\">\r\n                      <h5>Address</h5>\r\n                      <span id=\"address\">{this.state.address}</span>\r\n                      <hr />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-lg-6\">\r\n                    <div className=\"data\">\r\n                      <h5>Email</h5>\r\n                      <span id=\"email\">{this.state.email}</span>\r\n                      <hr />\r\n                    </div>\r\n                    <div className=\"data\">\r\n                      <h5>Phone Number</h5>\r\n                      <span id=\"phonenumber\">{this.state.number}</span>\r\n                      <hr />\r\n                    </div>\r\n                    <div className=\"data\">\r\n                      <h5>Your Balance</h5>\r\n                      <span id=\"mybalance\">{`Rp. ${this.state.balance},-`}</span>\r\n                      <hr />\r\n                    </div>\r\n                    <div className=\"data\">\r\n                      {/* <a href=\"change_password.html\"><strong><u>Change Password</u></strong></a> */}\r\n                      <Link to=\"/ChangePassword\">Change Password</Link>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>             \r\n        \r\n          {/* Edit Form  */}\r\n          <section className=\"padding-editform\">\r\n            <div id=\"container-editform\">\r\n              <h3 style={{ textAlign: 'center' }}>Edit Your Profile</h3>\r\n              <form onSubmit={this.submitUpdateProfile}>\r\n                <div className=\"form-item\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-8\">\r\n                      <label className=\"input-title\">Profile Image</label>\r\n                    </div>\r\n                    <div className=\"col-lg-12\">\r\n                      <input\r\n                        className=\"input-value\"\r\n                        id=\"user-image\"\r\n                        type=\"file\"\r\n                        accept=\"image/*\"\r\n                        name=\"profileimage\"\r\n                        onChange={this.handleAddFile.bind(this)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-item\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-8\">\r\n                      <label className=\"input-title\">First Name</label>\r\n                    </div>\r\n                    <div className=\"col-lg-12\">\r\n                      <input\r\n                        className=\"input-value\"\r\n                        id=\"user-firstname\"\r\n                        type=\"text\"\r\n                        name=\"updateFirstName\"\r\n                        placeholder=\"Input firstname\"\r\n                        value={this.state.updateFirstName}\r\n                        onChange={this.handleChangeProfile.bind(this)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-item\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-8\">\r\n                      <label className=\"input-title\">Last Name</label>\r\n                    </div>\r\n                    <div className=\"col-lg-12\">\r\n                      <input\r\n                        value={this.state.updateLastName}\r\n                        className=\"input-value\"\r\n                        id=\"user-lastname\"\r\n                        type=\"text\"\r\n                        name=\"updateLastName\"\r\n                        placeholder=\"Input lastname\"\r\n                        onChange={this.handleChangeProfile.bind(this)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-item\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-8\">\r\n                      <label className=\"input-title\">Date of Birth</label>\r\n                    </div>\r\n                    <div className=\"col-lg-12 input-group date\">\r\n                      <input\r\n                        value={this.state.updateBirthDate}\r\n                        className=\"input-value\"\r\n                        id=\"date-birth\"\r\n                        type=\"date\"\r\n                        min='1900-01-01'\r\n                        max='2015-12-12'\r\n                        name=\"updateBirthDate\"\r\n                        onChange={this.handleChangeProfile.bind(this)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-item\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-8\">\r\n                      <label className=\"input-title\">Address</label>\r\n                    </div>\r\n                    <div className=\"col-lg-12\">\r\n                      <input\r\n                        value={this.state.updateAddress}\r\n                        className=\"input-value\"\r\n                        id=\"user-address\"\r\n                        type=\"text\"\r\n                        name=\"updateAddress\"\r\n                        placeholder=\"Input address\"\r\n                        onChange={this.handleChangeProfile.bind(this)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-item\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-8\">\r\n                      <label className=\"input-title\">Phone Number</label>\r\n                    </div>\r\n                    <div className=\"col-lg-12\">\r\n                      <input\r\n                        value={this.state.updatePhoneNumber}\r\n                        className=\"input-value\"\r\n                        id=\"user-number\"\r\n                        type=\"text\"\r\n                        name=\"updatePhoneNumber\"\r\n                        placeholder=\"0858868999\"\r\n                        onChange={this.handleChangeProfile.bind(this)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"btn-editform\">\r\n                  <input\r\n                    className=\"btn btn-primary mr-2\"\r\n                    type=\"submit\"\r\n                    value=\"Submit\"\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={() => this.hiddenEditForm()}\r\n                  >\r\n                    Close\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </section>\r\n        \r\n        {/* Log Activity User */}\r\n        <section className = \"content-user\" sytle={{ margin : \"20px\"}}>\r\n          <h3 className=\"logTitle\" style={{ paddingLeft : \"20px\"}}>Your Activity</h3>\r\n        {dataLogUser.map((data) => {\r\n          return(\r\n            /* timeline */\r\n            <div className=\"row\" style={{marginLeft : \"20px\", paddingBottom :\"0px\", marginBottom : \"0px\"}}>\r\n              <div className=\"col-md-12\" style={{paddingBottom : \"0px\", marginBottom : \"0px\"}}>\r\n                <div className=\"timeline\" style={{marginBottom : \"0px\"}}>\r\n                  {/* timeline-label */}\r\n                    <div className=\"time-label\" style={{marginTop : \"0px\"}}>\r\n                      {/* <span className=\"bg-read\">{this.convertToDate(data.dateTime)}</span> */}\r\n                    </div>\r\n                \r\n                    <div>\r\n                      <i className=\"fas fa-user bg-green\"></i>\r\n                      <div className=\"timeline-item\">\r\n                        <span className=\"time\"><i class=\"fas fa-clock\"></i> {this.dateLog(data.dateTime)}</span>\r\n                        <small style={{ margin : \"10px\"}}>Your Activity : {data.action}</small>\r\n                        <h3 className=\"timeline-header no-border\" style={{ marginTop : \"0px\"}}><a href=\"#\">{data.name}</a> - {data.description}</h3>\r\n                      </div>\r\n                    </div>\r\n\r\n                                 \r\n                </div>\r\n              </div>\r\n            </div>\r\n          )\r\n        })}\r\n\r\n        </section>\r\n        \r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Profile;\r\n","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\DonationManagement\\DonationManagement.js",["264","265","266"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\ReturnBook\\CheckReturnBook.js",["267","268","269","270","271","272","273","274"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Author\\Author.js",["275","276","277"],"import React, { Component } from \"react\";\r\nimport \"./customtable.css\";\r\nimport \"bootstrap\";\r\nimport DataTable from \"../../../Components/Datatable/Table\";\r\nimport Action from \"../../../Components/Datatable/Action\";\r\nimport $ from \"jquery\";\r\nimport \"bootstrap\";\r\nimport Swal from \"sweetalert2\";\r\nimport Axios from '../../../Instances/axios-instances';\r\n\r\nclass Author extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      fields: [],\r\n      errors: {},\r\n      data: [],\r\n      rows: [],\r\n      results: [],\r\n    };\r\n\r\n    this.authorChange = this.authorChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  async fetchData() {\r\n    $('#example1').DataTable().destroy();\r\n    const results = [];\r\n\r\n    var no = 1;\r\n\r\n    await Axios.get('/author/getAll')\r\n      .then((response) => {\r\n        const result = response.data;\r\n        this.setState({ data: result })\r\n        result.map((author) => {\r\n          var row = [];\r\n          row.push(<td className=\"text-center\">{no++}</td>);\r\n          row.push(\r\n            <td className=\"text-center py-0 align-middle\">\r\n              <div className=\"btn-group btn-group-sm\">\r\n                <Action\r\n                  type=\"success\"\r\n                  title=\"Edit\"\r\n                  icon=\"pen\"\r\n                  dataToggle=\"modal\"\r\n                  dataTarget=\"#modal-edit\"\r\n                  onClick={() => this.getAuthor(author.authorId)}\r\n                />\r\n                <Action\r\n                  type=\"danger\"\r\n                  title=\"Delete\"\r\n                  icon=\"trash\"\r\n                  dataToggle=\"modal\"\r\n                  dataTarget=\"#modal-delete\"\r\n                  onClick={() => this.getAuthor(author.authorId)}\r\n                />\r\n              </div>\r\n            </td>\r\n          );\r\n          row.push(<td>{author.authorName}</td>);\r\n          results.push(row);\r\n        })\r\n        this.setState({ rows: results });\r\n\r\n        $(\"#example1\").DataTable({\r\n          responsive: true,\r\n          autoWidth: false,\r\n        });\r\n      })\r\n  }\r\n\r\n  getAuthor(id) {\r\n    let errors = {}\r\n    errors[\"AuthorName\"] = \"\";\r\n    this.setState({ errors: errors });\r\n\r\n    Axios\r\n      .get(\"/author/getid/\" + id)\r\n      .then((response) => {\r\n        this.setState({\r\n          authorName: response.data.authorName,\r\n          authorId: id,\r\n          name: response.data.authorName\r\n        });\r\n      });\r\n  };\r\n\r\n  updateAuthor = (id) => {\r\n    var name = this.state.name\r\n    const author = {\r\n      authorName: this.state.authorName,\r\n\r\n    };\r\n\r\n    if (this.handleValidationUpdate()) {\r\n      Axios\r\n        .get(\"/author/getAuthor/\" + author.authorName)\r\n        .then((response) => {\r\n          const result2 = response.data;\r\n          Axios\r\n            .get(\"/author/getCount/\" + id)\r\n            .then((response) => {\r\n              if (author.authorName == name) {\r\n                Swal.fire({\r\n                  icon: \"warning\",\r\n                  title: \"Warning\",\r\n                  text: \"You Enter the same Name\",\r\n                  confirmButtonText: `OK`,\r\n                })\r\n              } else if (author.authorName == result2) {\r\n                Swal.fire({\r\n                  icon: \"warning\",\r\n                  title: \"Warning\",\r\n                  text: \"Name Already saved\",\r\n                  confirmButtonText: `OK`,\r\n                })\r\n              } else if (response.data > 0) {\r\n                Swal.fire({\r\n                  icon: \"warning\",\r\n                  title: \"Warning\",\r\n                  text: \"You can't update Data already used\",\r\n                  confirmButtonText: `OK`,\r\n                })\r\n              } else {\r\n                Axios\r\n                  .put(\"/author/update/\" + id, author)\r\n                  .then((response) => {\r\n                    $(\"#modal-edit\").modal(\"toggle\");\r\n                    $('.modal-backdrop').remove();\r\n                    Swal.fire({\r\n                      icon: \"success\",\r\n                      title: \"Success\",\r\n                      text: \"Your Data has been Updated\",\r\n                      confirmButtonText: `OK`,\r\n                    }).then((result) => {\r\n                      if (result.isConfirmed) {\r\n                        this.fetchData()\r\n                      }\r\n                    });\r\n                  });\r\n              }\r\n            });\r\n\r\n\r\n\r\n\r\n        })\r\n    }\r\n  };\r\n\r\n  handleValidationUpdate() {\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    if (this.state.authorName === \"\") {\r\n      formIsValid = false;\r\n      errors[\"AuthorName\"] = \"Author Name cannot be empty\";\r\n    }\r\n\r\n    this.setState({ errors: errors })\r\n    return formIsValid\r\n  }\r\n\r\n  deleteAuthor = (id) => {\r\n    Axios\r\n      .get(\"/author/getCount/\" + id)\r\n      .then((response) => {\r\n        if (response.data > 0) {\r\n          Swal.fire({\r\n            icon: \"warning\",\r\n            title: \"Warning\",\r\n            text: \"You can't delete Data already used\",\r\n            confirmButtonText: `OK`,\r\n          })\r\n        } else {\r\n          Axios\r\n            .put(\"/author/delete/\" + id)\r\n            .then((response) => {\r\n              Swal.fire({\r\n                icon: \"success\",\r\n                title: \"Success\",\r\n                text: \"Your Data has been Deleted\",\r\n                confirmButtonText: `OK`,\r\n              }).then((result) => {\r\n                if (result.isConfirmed) {\r\n                  this.fetchData()\r\n                }\r\n              });\r\n            });\r\n        }\r\n      });\r\n\r\n  };\r\n\r\n  authorChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  resetModal() {\r\n    let fields = this.state.fields;\r\n    let errors = {}\r\n    fields[\"AuthorName\"] = \"\";\r\n    errors[\"AuthorName\"] = \"\";\r\n\r\n    this.setState({ fields: fields });\r\n    this.setState({ errors: errors });\r\n  }\r\n\r\n  handleValidation() {\r\n    let fields = this.state.fields;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    //Author Name\r\n    if (!fields[\"AuthorName\"]) {\r\n      formIsValid = false;\r\n      errors[\"AuthorName\"] = \"Author Name cannot be empty\";\r\n    }\r\n\r\n    this.setState({ errors: errors });\r\n    return formIsValid;\r\n  }\r\n\r\n  contactSubmit(e) {\r\n    let fields = this.state.fields;\r\n    e.preventDefault();\r\n    if (this.handleValidation()) {\r\n      $(\"#modal-add\").modal(\"hide\");\r\n      $('.modal-backdrop').remove();\r\n      const author = {\r\n        authorName: fields[\"AuthorName\"],\r\n      };\r\n      Axios\r\n        .post(\"/author/post\", author)\r\n        .then((response) => {\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: \"Success\",\r\n            text: \"Your Data has been Added\",\r\n            confirmButtonText: `OK`,\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              this.fetchData()\r\n              this.resetModal()\r\n            }\r\n          });\r\n        })\r\n        .catch((error) =>\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Error\",\r\n            text: \"Author already exist!\",\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              $(\"#modal-add\").modal(\"toggle\");\r\n            }\r\n          })\r\n        );\r\n    }\r\n  }\r\n\r\n  handleChange(field, e) {\r\n    let fields = this.state.fields;\r\n    let errors = {}\r\n    errors[\"AuthorName\"] = \"\";\r\n    fields[field] = e.target.value;\r\n    this.setState({ fields });\r\n    this.setState({ errors: errors })\r\n  }\r\n\r\n  render() {\r\n    const { rows } = this.state;\r\n    const headings = [\"No\", \"Action\", \"Author Name\"];\r\n    return (\r\n      <div className=\"content-wrapper\">\r\n        {/* <!-- Content Header (Page header) --> */}\r\n        <section className=\"content-header\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col-sm-6\">\r\n                <h3>Author Management</h3>\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <ol className=\"breadcrumb float-sm-right\">\r\n                  <li className=\"breadcrumb-item\">\r\n                    <a href=\"/\">Home</a>\r\n                  </li>\r\n                  <li className=\"breadcrumb-item active\">Author</li>\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* <!-- /.container-fluid --> */}\r\n        </section>\r\n\r\n        <section className=\"content pdg-btm\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12 ctm-responsive\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-primary add-btn\"\r\n                      data-toggle=\"modal\"\r\n                      data-target=\"#modal-add\"\r\n                      onClick={() => { this.resetModal() }}\r\n                      style={{ float: \"right\" }}\r\n                    >\r\n                      <i className=\"nav-icon fas fa-plus\"></i>\r\n                      &nbsp; Add Author\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card-body\">\r\n                <DataTable headings={headings} rows={rows} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* <!--Modal Add--> */}\r\n        <div className=\"modal fade\" id=\"modal-add\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Add Author</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <form id=\"addAuthor\" onSubmit={this.contactSubmit.bind(this)}>\r\n                <div className=\"modal-body\">\r\n                  <div className=\"card-body\">\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"inputAuthorName\">Author Name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"inputAuthorName\"\r\n                        name=\"author\"\r\n                        placeholder=\"Enter Author Name\"\r\n                        onChange={this.handleChange.bind(this, \"AuthorName\")}\r\n                        value={this.state.fields[\"AuthorName\"]}\r\n                      />\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"AuthorName\"]}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer justify-content-between\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-default\"\r\n                    data-dismiss=\"modal\"\r\n                    onClick={() => this.resetModal()}\r\n                  >\r\n                    Close\r\n                  </button>\r\n                  <button type=\"submit\" className=\"btn btn-warning\">\r\n                    Add\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n\r\n        {/* <!--Modal Edit--> */}\r\n        <div className=\"modal fade\" id=\"modal-edit\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Edit Author</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <form id=\"editAuthor\">\r\n                <div className=\"modal-body\">\r\n                  <div className=\"card-body\">\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"editAuthorName\">Author Name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"authorName\"\r\n                        id=\"editAuthorName\"\r\n                        value={this.state.authorName}\r\n                        onChange={this.authorChange}\r\n                      />\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"AuthorName\"]}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer justify-content-between\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-default\"\r\n                    data-dismiss=\"modal\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => this.updateAuthor(this.state.authorId)}\r\n                    className=\"btn btn-warning\"\r\n                  >\r\n                    Save changes\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n\r\n        {/* <!--Modal Delete--> */}\r\n        <div className=\"modal fade\" id=\"modal-delete\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Delete Author</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                If you Delete this, you can't be returned\r\n              </div>\r\n              <div className=\"modal-footer justify-content-between\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-default\"\r\n                  data-dismiss=\"modal\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-warning\"\r\n                  data-dismiss=\"modal\"\r\n                  onClick={() => this.deleteAuthor(this.state.authorId)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Author;\r\n","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\RentManagement\\RentManagement.js",["278","279"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\SlideShowManagement\\SlideShowManagement.js",["280","281","282","283"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\History\\History.js",["284","285","286","287","288","289","290","291","292","293","294"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\showResult.js",["295","296","297"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\SideBar\\SideBar.js",["298","299","300","301","302","303","304","305","306"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\TopUp2.js",["307","308"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\TopUp1.js",["309","310","311","312","313"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\TopUp4.js",[],{"ruleId":"314","severity":1,"message":"315","line":46,"column":35,"nodeType":"316","messageId":"317","endLine":46,"endColumn":37},{"ruleId":"318","severity":1,"message":"319","line":206,"column":13,"nodeType":"320","messageId":"321","endLine":206,"endColumn":29},{"ruleId":"322","severity":1,"message":"323","line":208,"column":70,"nodeType":"324","messageId":"325","endLine":208,"endColumn":72},{"ruleId":"326","replacedBy":"327"},{"ruleId":"328","replacedBy":"329"},{"ruleId":"318","severity":1,"message":"330","line":2,"column":28,"nodeType":"320","messageId":"321","endLine":2,"endColumn":39},{"ruleId":"318","severity":1,"message":"331","line":4,"column":9,"nodeType":"320","messageId":"321","endLine":4,"endColumn":13},{"ruleId":"332","severity":1,"message":"333","line":30,"column":17,"nodeType":"334","endLine":30,"endColumn":168},{"ruleId":"332","severity":1,"message":"333","line":44,"column":17,"nodeType":"334","endLine":44,"endColumn":168},{"ruleId":"332","severity":1,"message":"333","line":66,"column":21,"nodeType":"334","endLine":66,"endColumn":91},{"ruleId":"318","severity":1,"message":"335","line":3,"column":8,"nodeType":"320","messageId":"321","endLine":3,"endColumn":17},{"ruleId":"318","severity":1,"message":"336","line":4,"column":8,"nodeType":"320","messageId":"321","endLine":4,"endColumn":19},{"ruleId":"318","severity":1,"message":"337","line":5,"column":8,"nodeType":"320","messageId":"321","endLine":5,"endColumn":17},{"ruleId":"318","severity":1,"message":"338","line":73,"column":74,"nodeType":"320","messageId":"321","endLine":73,"endColumn":88},{"ruleId":"318","severity":1,"message":"339","line":5,"column":8,"nodeType":"320","messageId":"321","endLine":5,"endColumn":13},{"ruleId":"314","severity":1,"message":"315","line":65,"column":29,"nodeType":"316","messageId":"317","endLine":65,"endColumn":31},{"ruleId":"318","severity":1,"message":"335","line":2,"column":8,"nodeType":"320","messageId":"321","endLine":2,"endColumn":17},{"ruleId":"318","severity":1,"message":"336","line":3,"column":8,"nodeType":"320","messageId":"321","endLine":3,"endColumn":19},{"ruleId":"318","severity":1,"message":"337","line":4,"column":8,"nodeType":"320","messageId":"321","endLine":4,"endColumn":17},{"ruleId":"318","severity":1,"message":"340","line":5,"column":8,"nodeType":"320","messageId":"321","endLine":5,"endColumn":16},{"ruleId":"318","severity":1,"message":"341","line":25,"column":11,"nodeType":"320","messageId":"321","endLine":25,"endColumn":20},{"ruleId":"318","severity":1,"message":"342","line":1,"column":17,"nodeType":"320","messageId":"321","endLine":1,"endColumn":26},{"ruleId":"326","replacedBy":"343"},{"ruleId":"328","replacedBy":"344"},{"ruleId":"318","severity":1,"message":"345","line":2,"column":21,"nodeType":"320","messageId":"321","endLine":2,"endColumn":29},{"ruleId":"318","severity":1,"message":"346","line":12,"column":10,"nodeType":"320","messageId":"321","endLine":12,"endColumn":17},{"ruleId":"322","severity":1,"message":"323","line":66,"column":52,"nodeType":"324","messageId":"325","endLine":66,"endColumn":54},{"ruleId":"347","severity":1,"message":"348","line":70,"column":13,"nodeType":"320","messageId":"349","endLine":70,"endColumn":19},{"ruleId":"322","severity":1,"message":"323","line":88,"column":25,"nodeType":"324","messageId":"325","endLine":88,"endColumn":27},{"ruleId":"350","severity":1,"message":"351","line":89,"column":64,"nodeType":"352","messageId":"325","endLine":89,"endColumn":69},{"ruleId":"350","severity":1,"message":"351","line":91,"column":65,"nodeType":"352","messageId":"325","endLine":91,"endColumn":70},{"ruleId":"322","severity":1,"message":"323","line":184,"column":25,"nodeType":"324","messageId":"325","endLine":184,"endColumn":27},{"ruleId":"322","severity":1,"message":"323","line":223,"column":33,"nodeType":"324","messageId":"325","endLine":223,"endColumn":35},{"ruleId":"318","severity":1,"message":"353","line":325,"column":11,"nodeType":"320","messageId":"321","endLine":325,"endColumn":17},{"ruleId":"322","severity":1,"message":"323","line":339,"column":30,"nodeType":"324","messageId":"325","endLine":339,"endColumn":32},{"ruleId":"318","severity":1,"message":"354","line":410,"column":11,"nodeType":"320","messageId":"321","endLine":410,"endColumn":20},{"ruleId":"318","severity":1,"message":"355","line":424,"column":52,"nodeType":"320","messageId":"321","endLine":424,"endColumn":56},{"ruleId":"318","severity":1,"message":"356","line":424,"column":58,"nodeType":"320","messageId":"321","endLine":424,"endColumn":69},{"ruleId":"357","severity":1,"message":"358","line":440,"column":21,"nodeType":"334","endLine":440,"endColumn":104},{"ruleId":"357","severity":1,"message":"358","line":447,"column":23,"nodeType":"334","endLine":447,"endColumn":77},{"ruleId":"332","severity":1,"message":"359","line":526,"column":19,"nodeType":"334","endLine":526,"endColumn":154},{"ruleId":"318","severity":1,"message":"360","line":4,"column":8,"nodeType":"320","messageId":"321","endLine":4,"endColumn":19},{"ruleId":"318","severity":1,"message":"361","line":2,"column":35,"nodeType":"320","messageId":"321","endLine":2,"endColumn":43},{"ruleId":"318","severity":1,"message":"362","line":62,"column":17,"nodeType":"320","messageId":"321","endLine":62,"endColumn":21},{"ruleId":"357","severity":1,"message":"358","line":18,"column":17,"nodeType":"334","endLine":21,"endColumn":19},{"ruleId":"318","severity":1,"message":"331","line":4,"column":10,"nodeType":"320","messageId":"321","endLine":4,"endColumn":14},{"ruleId":"318","severity":1,"message":"363","line":5,"column":8,"nodeType":"320","messageId":"321","endLine":5,"endColumn":12},{"ruleId":"318","severity":1,"message":"346","line":11,"column":10,"nodeType":"320","messageId":"321","endLine":11,"endColumn":17},{"ruleId":"318","severity":1,"message":"360","line":13,"column":8,"nodeType":"320","messageId":"321","endLine":13,"endColumn":19},{"ruleId":"350","severity":1,"message":"364","line":28,"column":7,"nodeType":"352","messageId":"325","endLine":28,"endColumn":11},{"ruleId":"322","severity":1,"message":"323","line":46,"column":25,"nodeType":"324","messageId":"325","endLine":46,"endColumn":27},{"ruleId":"318","severity":1,"message":"365","line":71,"column":9,"nodeType":"320","messageId":"321","endLine":71,"endColumn":10},{"ruleId":"322","severity":1,"message":"323","line":163,"column":31,"nodeType":"324","messageId":"325","endLine":163,"endColumn":33},{"ruleId":"322","severity":1,"message":"323","line":170,"column":38,"nodeType":"324","messageId":"325","endLine":170,"endColumn":40},{"ruleId":"322","severity":1,"message":"323","line":192,"column":15,"nodeType":"324","messageId":"325","endLine":192,"endColumn":17},{"ruleId":"322","severity":1,"message":"323","line":212,"column":25,"nodeType":"324","messageId":"325","endLine":212,"endColumn":27},{"ruleId":"322","severity":1,"message":"323","line":224,"column":26,"nodeType":"324","messageId":"325","endLine":224,"endColumn":28},{"ruleId":"322","severity":1,"message":"323","line":271,"column":15,"nodeType":"324","messageId":"325","endLine":271,"endColumn":17},{"ruleId":"322","severity":1,"message":"323","line":320,"column":26,"nodeType":"324","messageId":"325","endLine":320,"endColumn":28},{"ruleId":"318","severity":1,"message":"366","line":372,"column":9,"nodeType":"320","messageId":"321","endLine":372,"endColumn":12},{"ruleId":"318","severity":1,"message":"362","line":373,"column":35,"nodeType":"320","messageId":"321","endLine":373,"endColumn":39},{"ruleId":"332","severity":1,"message":"333","line":397,"column":19,"nodeType":"334","endLine":397,"endColumn":167},{"ruleId":"367","severity":1,"message":"368","line":413,"column":17,"nodeType":"334","endLine":417,"endColumn":18},{"ruleId":"332","severity":1,"message":"333","line":572,"column":19,"nodeType":"334","endLine":572,"endColumn":145},{"ruleId":"367","severity":1,"message":"368","line":585,"column":17,"nodeType":"334","endLine":589,"endColumn":18},{"ruleId":"322","severity":1,"message":"369","line":61,"column":25,"nodeType":"324","messageId":"325","endLine":61,"endColumn":27},{"ruleId":"357","severity":1,"message":"358","line":70,"column":37,"nodeType":"334","endLine":70,"endColumn":85},{"ruleId":"314","severity":1,"message":"315","line":40,"column":35,"nodeType":"316","messageId":"317","endLine":40,"endColumn":37},{"ruleId":"314","severity":1,"message":"315","line":49,"column":23,"nodeType":"316","messageId":"317","endLine":49,"endColumn":25},{"ruleId":"332","severity":1,"message":"333","line":64,"column":15,"nodeType":"334","endLine":64,"endColumn":53},{"ruleId":"332","severity":1,"message":"333","line":67,"column":15,"nodeType":"334","endLine":67,"endColumn":53},{"ruleId":"322","severity":1,"message":"323","line":74,"column":22,"nodeType":"324","messageId":"325","endLine":74,"endColumn":24},{"ruleId":"318","severity":1,"message":"370","line":8,"column":10,"nodeType":"320","messageId":"321","endLine":8,"endColumn":15},{"ruleId":"318","severity":1,"message":"371","line":21,"column":15,"nodeType":"320","messageId":"321","endLine":21,"endColumn":25},{"ruleId":"318","severity":1,"message":"372","line":23,"column":15,"nodeType":"320","messageId":"321","endLine":23,"endColumn":25},{"ruleId":"322","severity":1,"message":"323","line":34,"column":23,"nodeType":"324","messageId":"325","endLine":34,"endColumn":25},{"ruleId":"322","severity":1,"message":"323","line":34,"column":41,"nodeType":"324","messageId":"325","endLine":34,"endColumn":43},{"ruleId":"322","severity":1,"message":"323","line":34,"column":62,"nodeType":"324","messageId":"325","endLine":34,"endColumn":64},{"ruleId":"322","severity":1,"message":"323","line":34,"column":81,"nodeType":"324","messageId":"325","endLine":34,"endColumn":83},{"ruleId":"322","severity":1,"message":"323","line":34,"column":102,"nodeType":"324","messageId":"325","endLine":34,"endColumn":104},{"ruleId":"322","severity":1,"message":"323","line":34,"column":123,"nodeType":"324","messageId":"325","endLine":34,"endColumn":125},{"ruleId":"326","replacedBy":"373"},{"ruleId":"328","replacedBy":"374"},{"ruleId":"357","severity":1,"message":"358","line":18,"column":17,"nodeType":"334","endLine":21,"endColumn":19},{"ruleId":"332","severity":1,"message":"333","line":453,"column":96,"nodeType":"334","endLine":453,"endColumn":108},{"ruleId":"318","severity":1,"message":"375","line":5,"column":13,"nodeType":"320","messageId":"321","endLine":5,"endColumn":18},{"ruleId":"318","severity":1,"message":"376","line":5,"column":20,"nodeType":"320","messageId":"321","endLine":5,"endColumn":25},{"ruleId":"318","severity":1,"message":"377","line":51,"column":9,"nodeType":"320","messageId":"321","endLine":51,"endColumn":11},{"ruleId":"314","severity":1,"message":"315","line":29,"column":50,"nodeType":"316","messageId":"317","endLine":29,"endColumn":52},{"ruleId":"314","severity":1,"message":"315","line":43,"column":50,"nodeType":"316","messageId":"317","endLine":43,"endColumn":52},{"ruleId":"314","severity":1,"message":"315","line":64,"column":50,"nodeType":"316","messageId":"317","endLine":64,"endColumn":52},{"ruleId":"322","severity":1,"message":"323","line":100,"column":41,"nodeType":"324","messageId":"325","endLine":100,"endColumn":43},{"ruleId":"322","severity":1,"message":"323","line":114,"column":78,"nodeType":"324","messageId":"325","endLine":114,"endColumn":80},{"ruleId":"322","severity":1,"message":"369","line":115,"column":19,"nodeType":"324","messageId":"325","endLine":115,"endColumn":21},{"ruleId":"322","severity":1,"message":"323","line":126,"column":101,"nodeType":"324","messageId":"325","endLine":126,"endColumn":103},{"ruleId":"322","severity":1,"message":"369","line":214,"column":18,"nodeType":"324","messageId":"325","endLine":214,"endColumn":20},{"ruleId":"314","severity":1,"message":"315","line":40,"column":29,"nodeType":"316","messageId":"317","endLine":40,"endColumn":31},{"ruleId":"322","severity":1,"message":"323","line":108,"column":37,"nodeType":"324","messageId":"325","endLine":108,"endColumn":39},{"ruleId":"322","severity":1,"message":"323","line":115,"column":44,"nodeType":"324","messageId":"325","endLine":115,"endColumn":46},{"ruleId":"314","severity":1,"message":"315","line":91,"column":35,"nodeType":"316","messageId":"317","endLine":91,"endColumn":37},{"ruleId":"322","severity":1,"message":"323","line":122,"column":82,"nodeType":"324","messageId":"325","endLine":122,"endColumn":84},{"ruleId":"314","severity":1,"message":"315","line":44,"column":32,"nodeType":"316","messageId":"317","endLine":44,"endColumn":34},{"ruleId":"367","severity":1,"message":"368","line":438,"column":11,"nodeType":"334","endLine":438,"endColumn":88},{"ruleId":"367","severity":1,"message":"368","line":498,"column":11,"nodeType":"334","endLine":498,"endColumn":48},{"ruleId":"357","severity":1,"message":"358","line":581,"column":13,"nodeType":"334","endLine":581,"endColumn":50},{"ruleId":"318","severity":1,"message":"378","line":3,"column":8,"nodeType":"320","messageId":"321","endLine":3,"endColumn":13},{"ruleId":"318","severity":1,"message":"379","line":4,"column":8,"nodeType":"320","messageId":"321","endLine":4,"endColumn":14},{"ruleId":"318","severity":1,"message":"380","line":5,"column":8,"nodeType":"320","messageId":"321","endLine":5,"endColumn":14},{"ruleId":"318","severity":1,"message":"381","line":6,"column":8,"nodeType":"320","messageId":"321","endLine":6,"endColumn":14},{"ruleId":"318","severity":1,"message":"382","line":7,"column":8,"nodeType":"320","messageId":"321","endLine":7,"endColumn":14},{"ruleId":"318","severity":1,"message":"383","line":8,"column":8,"nodeType":"320","messageId":"321","endLine":8,"endColumn":14},{"ruleId":"318","severity":1,"message":"384","line":9,"column":8,"nodeType":"320","messageId":"321","endLine":9,"endColumn":14},{"ruleId":"318","severity":1,"message":"385","line":10,"column":8,"nodeType":"320","messageId":"321","endLine":10,"endColumn":14},{"ruleId":"318","severity":1,"message":"386","line":11,"column":8,"nodeType":"320","messageId":"321","endLine":11,"endColumn":14},{"ruleId":"318","severity":1,"message":"387","line":12,"column":8,"nodeType":"320","messageId":"321","endLine":12,"endColumn":15},{"ruleId":"318","severity":1,"message":"331","line":13,"column":10,"nodeType":"320","messageId":"321","endLine":13,"endColumn":14},{"ruleId":"318","severity":1,"message":"388","line":2,"column":8,"nodeType":"320","messageId":"321","endLine":2,"endColumn":13},{"ruleId":"318","severity":1,"message":"389","line":6,"column":7,"nodeType":"320","messageId":"321","endLine":6,"endColumn":12},{"ruleId":"322","severity":1,"message":"323","line":17,"column":26,"nodeType":"324","messageId":"325","endLine":17,"endColumn":28},{"ruleId":"318","severity":1,"message":"390","line":4,"column":8,"nodeType":"320","messageId":"321","endLine":4,"endColumn":18},{"ruleId":"318","severity":1,"message":"339","line":9,"column":8,"nodeType":"320","messageId":"321","endLine":9,"endColumn":13},{"ruleId":"350","severity":1,"message":"391","line":39,"column":7,"nodeType":"352","messageId":"325","endLine":39,"endColumn":16},{"ruleId":"322","severity":1,"message":"323","line":47,"column":25,"nodeType":"324","messageId":"325","endLine":47,"endColumn":27},{"ruleId":"350","severity":1,"message":"351","line":48,"column":64,"nodeType":"352","messageId":"325","endLine":48,"endColumn":69},{"ruleId":"350","severity":1,"message":"351","line":50,"column":65,"nodeType":"352","messageId":"325","endLine":50,"endColumn":70},{"ruleId":"318","severity":1,"message":"392","line":97,"column":11,"nodeType":"320","messageId":"321","endLine":97,"endColumn":18},{"ruleId":"393","severity":1,"message":"394","line":122,"column":23,"nodeType":"334","endLine":122,"endColumn":131},{"ruleId":"332","severity":1,"message":"333","line":172,"column":23,"nodeType":"334","endLine":172,"endColumn":56},{"ruleId":"318","severity":1,"message":"395","line":20,"column":27,"nodeType":"320","messageId":"321","endLine":20,"endColumn":35},{"ruleId":"318","severity":1,"message":"396","line":20,"column":51,"nodeType":"320","messageId":"321","endLine":20,"endColumn":61},{"ruleId":"318","severity":1,"message":"397","line":14,"column":7,"nodeType":"320","messageId":"321","endLine":14,"endColumn":14},{"ruleId":"318","severity":1,"message":"398","line":22,"column":11,"nodeType":"320","messageId":"321","endLine":22,"endColumn":22},{"ruleId":"318","severity":1,"message":"395","line":22,"column":38,"nodeType":"320","messageId":"321","endLine":22,"endColumn":46},{"ruleId":"318","severity":1,"message":"399","line":22,"column":48,"nodeType":"320","messageId":"321","endLine":22,"endColumn":60},{"ruleId":"318","severity":1,"message":"396","line":22,"column":62,"nodeType":"320","messageId":"321","endLine":22,"endColumn":72},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'statusBookDetail' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["400"],"no-negated-in-lhs",["401"],"'useCallback' is defined but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'firstHero' is defined but never used.","'secondtHero' is defined but never used.","'thirdHero' is defined but never used.","'recommendedCat' is assigned a value but never used.","'Axios' is defined but never used.","'Flickity' is defined but never used.","'userToken' is assigned a value but never used.","'Component' is defined but never used.",["400"],["401"],"'FormText' is defined but never used.","'MDBIcon' is defined but never used.","no-redeclare","'status' is already defined.","redeclared","no-dupe-keys","Duplicate key 'role2'.","ObjectExpression","'config' is assigned a value but never used.","'rateStar2' is assigned a value but never used.","'star' is assigned a value but never used.","'description' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'AuthService' is defined but never used.","'Redirect' is defined but never used.","'user' is assigned a value but never used.","'Card' is defined but never used.","Duplicate key 'data'.","'a' is assigned a value but never used.","'lol' is assigned a value but never used.","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","Expected '!==' and instead saw '!='.","'reset' is defined but never used.","'editButton' is assigned a value but never used.","'cancelForm' is assigned a value but never used.",["400"],["401"],"'error' is defined but never used.","'event' is defined but never used.","'no' is assigned a value but never used.","'photo' is defined but never used.","'photo2' is defined but never used.","'photo3' is defined but never used.","'photo4' is defined but never used.","'photo5' is defined but never used.","'photo6' is defined but never used.","'photo7' is defined but never used.","'photo8' is defined but never used.","'photo9' is defined but never used.","'photo10' is defined but never used.","'axios' is defined but never used.","'sleep' is assigned a value but never used.","'avatarUser' is defined but never used.","Duplicate key 'userToken'.","'balance' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'pristine' is assigned a value but never used.","'submitting' is assigned a value but never used.","'refresh' is assigned a value but never used.","'handlekeyup' is assigned a value but never used.","'previousPage' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]