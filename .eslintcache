[{"C:\\Users\\ASUS\\maxwell-library-react\\src\\reportWebVitals.js":"1","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\NavBar\\NavBar.js":"2","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Footer\\Footer.js":"3","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Profile\\AdminProfile.js":"4","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Payment\\PaymentInvoicePrint.js":"5","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Donation\\Donation.js":"6","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Payment\\PaymentInvoicePrintPaid.js":"7","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\RentManagement\\RentManagement.js":"8","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\SlideShowManagement\\SlideShowManagement.js":"9","C:\\Users\\ASUS\\maxwell-library-react\\src\\Components\\Datatable\\Table.js":"10","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\TopUp3.js":"11","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\Validate.js":"12","C:\\Users\\ASUS\\maxwell-library-react\\src\\Navigations\\AuthRoute.js":"13","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUpManagement\\TopUpManagement.js":"14","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\SideBar\\SideBar.js":"15","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\BookManagement\\BookDetail.js":"16"},{"size":375,"mtime":1606198920915,"results":"17","hashOfConfig":"18"},{"size":3815,"mtime":1610092736195,"results":"19","hashOfConfig":"18"},{"size":519,"mtime":1606198920912,"results":"20","hashOfConfig":"18"},{"size":9745,"mtime":1606392264711,"results":"21","hashOfConfig":"18"},{"size":4202,"mtime":1606455043006,"results":"22","hashOfConfig":"18"},{"size":11011,"mtime":1609912342780,"results":"23","hashOfConfig":"18"},{"size":4270,"mtime":1606455043006,"results":"24","hashOfConfig":"18"},{"size":8884,"mtime":1610259575662,"results":"25","hashOfConfig":"18"},{"size":19342,"mtime":1610259575662,"results":"26","hashOfConfig":"18"},{"size":1681,"mtime":1609843597897,"results":"27","hashOfConfig":"18"},{"size":2330,"mtime":1606455043013,"results":"28","hashOfConfig":"18"},{"size":1069,"mtime":1609905735501,"results":"29","hashOfConfig":"18"},{"size":521,"mtime":1609994094142,"results":"30","hashOfConfig":"18"},{"size":27699,"mtime":1610266665091,"results":"31","hashOfConfig":"18"},{"size":10335,"mtime":1610267022568,"results":"32","hashOfConfig":"18"},{"size":19083,"mtime":1610266580658,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11ui09a",{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ASUS\\maxwell-library-react\\src\\reportWebVitals.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\NavBar\\NavBar.js",["67","68","69","70","71"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Footer\\Footer.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Profile\\AdminProfile.js",["72","73","74","75","76","77","78","79"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Payment\\PaymentInvoicePrint.js",["80"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Donation\\Donation.js",["81","82"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Payment\\PaymentInvoicePrintPaid.js",["83"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\RentManagement\\RentManagement.js",["84","85"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\SlideShowManagement\\SlideShowManagement.js",["86","87","88","89"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Components\\Datatable\\Table.js",["90"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\TopUp3.js",["91","92"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\Validate.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Navigations\\AuthRoute.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUpManagement\\TopUpManagement.js",["93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110"],"import React, { Component } from 'react';\r\nimport './TopUpManagement.style.css'\r\nimport Swal from 'sweetalert2';\r\nimport { Link } from 'react-router-dom'\r\nimport Card from '../TopUp/Card';\r\nimport \"bootstrap\";\r\nimport DataTable from \"../../../Components/Datatable/Table\";\r\nimport Action from \"../../../Components/Datatable/Action\";\r\nimport $ from 'jquery'\r\nimport Status from '../../../Components/Datatable/Status'\r\nimport { MDBIcon } from \"mdbreact\";\r\nimport NumberFormat from 'react-number-format';\r\nimport AuthService from '../../../Services/auth.service';\r\nimport Axios2 from '../../../Instances/axios-instances';\r\n\r\nclass TopUpManagement extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fields: {},\r\n      errors: {},\r\n      data: [],\r\n      rows: [],\r\n      results: [],\r\n      result: [],\r\n      data: [],\r\n      headings: [],\r\n      user: [],\r\n      role: JSON.parse(localStorage.getItem('user')).userInfo.activeRole,\r\n      show: true,\r\n      userId: \"\",\r\n      checkedRadio: null,\r\n      password: \"\"\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getAll();\r\n    this.show();\r\n    this.getRole();\r\n    this.getUser();\r\n  }\r\n\r\n  async getRole() {    \r\n    if (this.state.role == \"ROLE_ADMIN\") {\r\n      this.setState({ headings: [\"No\", \"Action\", \"Email\", \"Total Nominal (Rp)\", \"Payment Method\", \"Status\"] })\r\n    } else {\r\n      this.setState({ headings: [\"No\", \"Total Nominal (Rp)\", \"Payment Method\", \"Status\"] })\r\n    }\r\n  }\r\n\r\n  async getAll() {    \r\n    await Axios2.get('top_up_management/getAll').then((getData) => {      \r\n      const result_topup = getData.data;\r\n      console.log(result_topup)\r\n      $(\"#example1\").DataTable().destroy();\r\n      this.setState({ data: result_topup });\r\n      this.fetchData(this.state.role);\r\n      $(\"#example1\").DataTable({\r\n        responsive: true,\r\n        autoWidth: false,\r\n      });\r\n    });    \r\n\r\n    // $(\"#example1\").DataTable().destroy();\r\n\r\n    // this.fetchData();\r\n  }\r\n\r\n  getUser() {\r\n    var a =Axios2.get('user').then((getData) => {\r\n      const result_topup = getData.data;\r\n      console.log(getData)\r\n      this.setState({ user: result_topup });\r\n\r\n    })\r\n    console.log(a)\r\n  }\r\n\r\n  getId = (id) => {\r\n    Axios2.get('top_up_management/getId/' + id)\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.setState({\r\n          nominal: res.data.nominal,\r\n          paymentMethod: res.data.paymentMethod\r\n        })\r\n        Swal.fire({\r\n          icon: 'warning',\r\n          title: 'Warning!',\r\n          showCancelButton: true,\r\n          text: 'Are you sure want to confirm this?',\r\n        }).then((result) => {\r\n          /* Read more about isConfirmed, isDenied below */\r\n          if (result.isConfirmed) {\r\n            Axios2.put('top_up/accept/' + id, res)\r\n              .then((response) => {\r\n                console.log(response);\r\n              })\r\n            Swal.fire({\r\n              icon: 'success',\r\n              title: 'Success!',\r\n              showCancelButton: false,\r\n              text: 'Confirm Top Up Already Success!',\r\n            }).then((result) => {\r\n              if (result.isConfirmed) {\r\n                this.getAll();\r\n              }\r\n            })\r\n          }\r\n        })\r\n      })\r\n  }\r\n\r\n  getId2 = (id) => {\r\n    Axios2.get('top_up_management/getId/' + id)\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.setState({\r\n          nominal: res.data.nominal,\r\n          paymentMethod: res.data.paymentMethod\r\n        })\r\n        Swal.fire({\r\n          icon: 'warning',\r\n          title: 'Warning!',\r\n          showCancelButton: true,\r\n          text: 'Are you sure want to Cancel this?',\r\n        }).then((result) => {\r\n          /* Read more about isConfirmed, isDenied below */\r\n          if (result.isConfirmed) {\r\n            Axios2.put('top_up/cancel/' + id, res)\r\n              .then((response) => {\r\n                console.log(response);\r\n              })\r\n            Swal.fire({\r\n              icon: 'success',\r\n              title: 'Success!',\r\n              showCancelButton: false,\r\n              text: 'Cancel Top Up Already Success!',\r\n            }).then((result) => {\r\n              if (result.isConfirmed) {\r\n                this.getAll();\r\n              }\r\n            })\r\n          }\r\n        })\r\n      })\r\n  }\r\n\r\n  fetchData(getRole) {\r\n    var role = getRole;\r\n    console.log(role.data)\r\n    let results = [];\r\n    let result = this.state.data;\r\n    var no = 1;\r\n\r\n\r\n    result.forEach(topup => {\r\n      var row = [];\r\n      var actVal, statusVal = '';\r\n      if (topup.statusPayment == 'Success') {\r\n        actVal = <td className=\"text-center py-0 align-middle\">\r\n          <div className=\"btn-group btn-group-sm\">\r\n            -\r\n          </div>\r\n        </td>\r\n        statusVal = <Status type=\"success\" val=\"Success\" />\r\n      } else if (topup.statusPayment == 'Cancelled') {\r\n        actVal = <td className=\"text-center py-0 align-middle\">\r\n          <div className=\"btn-group btn-group-sm\">\r\n            -\r\n          </div>\r\n        </td>\r\n        statusVal = <Status type=\"danger\" val=\"Cancelled\" />\r\n      } else {\r\n        actVal = <td className=\"text-center py-0 align-middle\">\r\n          <div className=\"btn-group btn-group-sm\">\r\n            <Action type=\"success\" title=\"Edit\" icon=\"fas fa-check\" onClick={() => this.getId(topup.historyBalanceId)} />\r\n            <Action type=\"danger\" title=\"Delete\" icon=\"fas fa-ban\" onClick={() => this.getId2(topup.historyBalanceId)} />\r\n          </div>\r\n        </td>\r\n        statusVal = <Status type=\"warning\" val=\"Pending\" />\r\n      }\r\n      row.push(<td className=\"text-center\" >{no++}</td>);      \r\n      if (role === \"ROLE_ADMIN\") {\r\n        row.push(<td className=\"text-center\" >{actVal}</td>);\r\n        row.push(<td className=\"text-center\" >{topup.userBalanceEntity.userEntity.email}</td>);\r\n      }\r\n      // row.push(<td className=\"text-center\" >{actVal}</td>);\r\n      if (topup.paymentMethod==\"Debit\"){\r\n        row.push(<td>{<NumberFormat value={topup.nominal} displayType={'text'} thousandSeparator={true} prefix={'- Rp. '} />}</td>);\r\n      } else{\r\n        row.push(<td>{<NumberFormat value={topup.nominal} displayType={'text'} thousandSeparator={true} prefix={'+ Rp. '} />}</td>);\r\n      }\r\n      \r\n      row.push(<td>{topup.paymentMethod}</td>);\r\n      row.push(<td className=\"text-center\" >{statusVal}</td>);\r\n      results.push(row);\r\n    });\r\n    this.setState({ rows: results });\r\n  }\r\n\r\n  async show() {   \r\n    if (this.state.role == \"ROLE_ADMIN\") {\r\n      this.setState({ show: true })\r\n    } else {\r\n      this.setState({ show: false })\r\n    }\r\n  }\r\n\r\n  handleValidation2() {\r\n    let fields = this.state.fields;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    if (this.state.userId==\"\"){\r\n      formIsValid = false;\r\n      errors[\"Name\"] = \"User ID cannot be empty\";\r\n    }\r\n\r\n    //Password\r\n    if (!fields[\"PasswordConfirm\"]) {\r\n      formIsValid = false;\r\n      errors[\"PasswordConfirm\"] = \"Password cannot be empty\";\r\n    }\r\n\r\n    //Confrim Password\r\n    if (!fields[\"PasswordConfirm2\"]) {\r\n      formIsValid = false;\r\n      errors[\"PasswordConfirm2\"] = \"Password Confirm cannot be empty\";\r\n    }\r\n\r\n    if (fields[\"PasswordConfirm\"] !== fields[\"PasswordConfirm2\"]) {\r\n      formIsValid = false;\r\n      errors[\"PasswordConfirm2\"] = \"Password don't Match\";\r\n    }\r\n\r\n    this.setState({ errors: errors });\r\n    return formIsValid;\r\n  }\r\n\r\n  async validatepass() {\r\n    let fields = this.state.fields;\r\n    const topup = {\r\n      user_balance_id: fields[\"Name\"],\r\n      password: fields[\"PasswordConfirm\"]\r\n    }\r\n    var match = await Axios2.post('top_up_management/getPass', topup);\r\n    return match.data\r\n  }\r\n\r\n  contactSubmit2(e) {\r\n    let fields = this.state.fields;\r\n    e.preventDefault();\r\n    if (this.handleValidation2()) {          \r\n      const topup = {\r\n        nominal: fields[\"Nominal\"],\r\n        paymentMethod: fields[\"Payment\"],\r\n        user_balance_id: this.state.userId,\r\n        password: fields[\"PasswordConfirm\"]\r\n      }\r\n      console.log(topup)\r\n      this.validatepass().then(x => {\r\n        if (x == true) {\r\n          Axios2.post('top_up/post2', topup)\r\n            .then((response) => {\r\n              console.log(response);\r\n            })\r\n          Swal.fire({\r\n            title: \"Success Save Top Up Data!\",\r\n            text: \"You Already Success to save this data!\",\r\n            icon: \"success\",\r\n            buttons: true,\r\n          })\r\n            .then((isConfirmed) => {\r\n              if (isConfirmed) {                \r\n                this.getAll();                \r\n                $('#passwordModal').modal('hide');  \r\n                $('.modal-backdrop').remove(); \r\n              }\r\n            })\r\n            \r\n        } else {\r\n          Swal.fire({\r\n            title: \"Wrong Password\",\r\n            text: \"Failed Wrong Password\",\r\n            icon: \"warning\",\r\n            \r\n          })\r\n            .then((isConfirmed) => {\r\n              if (isConfirmed) {\r\n                this.getAll();\r\n              }\r\n            })\r\n        }\r\n      })\r\n\r\n\r\n\r\n    }\r\n  }\r\n\r\n  handleChange2(field, e) {\r\n    let fields = this.state.fields;\r\n    fields[field] = e.target.value;\r\n    this.setState({ fields });\r\n  }\r\n\r\n  handleValidation() {\r\n    let fields = this.state.fields;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n    \r\n    if (this.state.userId==\"\") {\r\n      formIsValid = false;\r\n      errors[\"Name\"] = \"User ID cannot be empty\";\r\n    }\r\n\r\n    //Nominal\r\n    if (!fields[\"Nominal\"]) {\r\n      formIsValid = false;\r\n      errors[\"Nominal\"] = \"Nominal cannot be empty\";\r\n    }\r\n\r\n    //Payment\r\n    if (!fields[\"Payment\"]) {\r\n      formIsValid = false;\r\n      errors[\"Payment\"] = \"Payment cannot be empty\";\r\n    }\r\n\r\n    this.setState({ errors: errors });\r\n    return formIsValid;\r\n  }\r\n\r\n  contactSubmit(e) {\r\n    e.preventDefault();\r\n    if (this.handleValidation()) {\r\n      $('#topupModal').modal('hide');\r\n      $('#checkModal').modal('show');\r\n    }\r\n  }\r\n\r\n  handleChange3 = (event) => {    \r\n\r\n      var userId = event.target.value;\r\n    console.log(userId)\r\n    this.setState({ userId: userId}); \r\n    \r\n       \r\n }\r\n\r\n refresh(){\r\n  this.setState({fields:[],userId:\"\",errors:[]})\r\n  $('input[type=\"radio\"]').prop('checked', false);\r\n  $('#topupModal').modal('show');\r\n }\r\n\r\n  handleChange(field, e) {\r\n    let fields = this.state.fields;\r\n    fields[field] = e.target.value;\r\n    this.setState({ fields });\r\n  }  \r\n\r\n  render() {\r\n    var lol=JSON.parse(localStorage.getItem('user')).userInfo.activeRole;\r\n    console.log(lol)\r\n    const { rows, headings, show, user,userId } = this.state;\r\n    console.log(this.state.user)\r\n    return (\r\n      <div className=\"wrapper\">\r\n        {/* Navbar */}\r\n        {/* Content Wrapper. Contains page content */}\r\n        <div className=\"content-wrapper\">\r\n          {/* Content Header (Page header) */}\r\n          {/* /.modal */}\r\n          <div className=\"modal fade\" id=\"cancelModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabesl\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                    Do you want to cancel?\r\n                  </h5>\r\n                  <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">×</span>\r\n                  </button>\r\n                </div>\r\n                <div className=\"modal-body\">Are you serious want to cancel?</div>\r\n                <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\">\r\n                    Close\r\n                  </button>\r\n                  <a className=\"btn btn-danger\" id=\"btn-delete\" href=\"#\" data-dismiss=\"modal\" data-toggle=\"modal\" data-target=\"#CancelModal\" onclick=\"cancelstatus()\">Cancel</a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal fade\" id=\"topupModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabesl\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                    Top Up\r\n                  </h5>\r\n                  <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">×</span>\r\n                  </button>\r\n                </div>\r\n                <form\r\n                  role=\"form\"\r\n                  id=\"addtopup\"\r\n                  onSubmit={this.contactSubmit.bind(this)}\r\n                >\r\n                  <div className=\"modal-body\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-5\">\r\n                        <label className=\"title-module\">Email User:</label>\r\n                      </div>\r\n                      <div className=\"col-md-7\">\r\n                        {/* <input type=\"text\" id=\"topup-user\" name=\"name\" className=\"form-control\" placeholder=\"Enter ID User\" onChange={this.handleChange.bind(this, \"Name\")} value={this.state.fields[\"Name\"]} />\r\n                      <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"Name\"]}\r\n                          </span> */}\r\n                        <select id=\"dropdown\" className=\"custom-select\"\r\n                          onChange={this.handleChange3} value={userId}>\r\n                            <option value=\"\">Select---</option>\r\n                          {this.state.user.map((person,index) => {return(<option key={index} value={person.userId}>{person.email}</option>) })}                          \r\n                        </select>\r\n                        <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"Name\"]}\r\n                          </span> \r\n                      </div>\r\n                    </div>\r\n                    <hr className=\"divider\" />\r\n                    <div className=\"row\">\r\n                      <div className=\"col-lg-5\">\r\n                        <label className=\"title-module\">Total Nominal:</label>\r\n                      </div>\r\n                      <div className=\"col-lg-7\">\r\n                        <div className=\"form-group\">\r\n                          <div className=\"radio-group\">\r\n                            <div className=\"row row-cols-md-3\" style={{ textAlign: 'center' }}>\r\n                              <div className=\"icheck-primary\">\r\n                                <input type=\"radio\" name=\"option\" id=\"option1\" value=\"10000\" onChange={this.handleChange.bind(this, \"Nominal\")} />\r\n                                <label htmlFor=\"option1\" style={{ fontWeight: 'normal' }}>Rp. 10000</label>\r\n                              </div>\r\n                              <div className=\"icheck-primary\">\r\n                                <input type=\"radio\" name=\"option\" id=\"option2\" value=\"20000\" onChange={this.handleChange.bind(this, \"Nominal\")} />\r\n                                <label htmlFor=\"option2\" style={{ fontWeight: 'normal' }}>Rp. 20000</label>\r\n                              </div>\r\n                              <div className=\"icheck-primary\">\r\n                                <input type=\"radio\" name=\"option\" id=\"option3\" value=\"30000\" onChange={this.handleChange.bind(this, \"Nominal\")} />\r\n                                <label htmlFor=\"option3\" style={{ fontWeight: 'normal' }}>Rp. 30000</label>\r\n                              </div>\r\n                              <div className=\"icheck-primary\">\r\n                                <input type=\"radio\" name=\"option\" id=\"option4\" value=\"50000\" onChange={this.handleChange.bind(this, \"Nominal\")} />\r\n                                <label htmlFor=\"option4\" style={{ fontWeight: 'normal' }}>Rp. 50000</label>\r\n                              </div>\r\n                              <div className=\"icheck-primary\">\r\n                                <input type=\"radio\" name=\"option\" id=\"option5\" value=\"100000\" onChange={this.handleChange.bind(this, \"Nominal\")} />\r\n                                <label htmlFor=\"option5\" style={{ fontWeight: 'normal' }}>Rp. 100000</label>\r\n                              </div>\r\n                              <div className=\"icheck-primary\">\r\n                                <input type=\"radio\" name=\"option\" id=\"option6\" value=\"200000\" onChange={this.handleChange.bind(this, \"Nominal\")} />\r\n                                <label htmlFor=\"option6\" style={{ fontWeight: 'normal' }}>Rp. 200000</label>\r\n                              </div>\r\n                              <span style={{ color: \"red\" }}>\r\n                                {this.state.errors[\"Nominal\"]}\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <hr className=\"divider\" />\r\n                    <div className=\"row\">\r\n                      <div className=\"col-lg-5\">\r\n                        <label className=\"title-module\">Payment Method:</label>\r\n                      </div>\r\n                      <div className=\"col-lg-7\">\r\n                        <div className=\"form-group\">\r\n                          <div className=\"radio-group method\">\r\n                            <div className=\"row row-cols-md-3\" style={{ textAlign: 'center' }}>\r\n                              <div className=\"icheck-primary\">\r\n                                <input type=\"radio\" name=\"option2\" id=\"option-method1\" Value=\"Credit Card\" onChange={this.handleChange.bind(this, \"Payment\")} />\r\n                                <label htmlFor=\"option1\" style={{ fontWeight: 'normal' }}>Credit Card</label>\r\n                              </div>\r\n                              <div className=\"icheck-primary\">\r\n                                <input type=\"radio\" name=\"option2\" id=\"option-method2\" Value=\"Paypall\" onChange={this.handleChange.bind(this, \"Payment\")} />\r\n                                <label htmlFor=\"option2\" style={{ fontWeight: 'normal' }}>Paypall</label>\r\n                              </div>\r\n                              <div className=\"icheck-primary\">\r\n                                <input type=\"radio\" name=\"option2\" id=\"option-method3\" Value=\"OVO\" onChange={this.handleChange.bind(this, \"Payment\")} />\r\n                                <label htmlFor=\"option3\" style={{ fontWeight: 'normal' }}>OVO</label>\r\n                              </div>\r\n                              <div className=\"icheck-primary gopay\">\r\n                                <input type=\"radio\" name=\"option2\" id=\"option-method4\" Value=\"Gopay\" onChange={this.handleChange.bind(this, \"Payment\")} />\r\n                                <label htmlFor=\"option4\" style={{ fontWeight: 'normal' }}>Gopay</label>\r\n                              </div>\r\n                              <div className=\"icheck-primary dana\">\r\n                                <input type=\"radio\" name=\"option2\" id=\"option-method5\" Value=\"Dana\" onChange={this.handleChange.bind(this, \"Payment\")} />\r\n                                <label htmlFor=\"option5\" style={{ fontWeight: 'normal' }}>Dana</label>\r\n                              </div>\r\n                              <div className=\"icheck-primary cash\">\r\n                                <input type=\"radio\" name=\"option2\" id=\"option-method6\" Value=\"Cash\" onChange={this.handleChange.bind(this, \"Payment\")} />\r\n                                <label htmlFor=\"option6\" style={{ fontWeight: 'normal' }}>Cash</label>\r\n                              </div>\r\n                              <span style={{ color: \"red\" }}>\r\n                                {this.state.errors[\"Payment\"]}\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"modal-footer\">\r\n                    <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\">\r\n                      Close\r\n                  </button>\r\n                    <button className=\"btn btn-primary\" id=\"btn-delete\" type=\"submit\" >Next</button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal fade\" id=\"checkModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabesl\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                    Check Data Top Up\r\n                  </h5>                  \r\n                </div>\r\n                <div className=\"modal-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-5\">\r\n                      <label className=\"title-module\">ID User:</label>\r\n                    </div>\r\n                    <div className=\"col-md-7\">\r\n                      <input type=\"text\" id=\"checkuser\" name=\"name\" className=\"form-control\" value={this.state.userId} readOnly placeholder />\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"divider\" />\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-5\">\r\n                      <label className=\"title-module\">Total Nominal:</label>\r\n                    </div>\r\n                    <div className=\"col-md-7\">\r\n                      <input type=\"text\" id=\"checknominal\" name=\"name\" className=\"form-control\" value={this.state.fields[\"Nominal\"]} readOnly placeholder />\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"divider\" />\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-5\">\r\n                      <label className=\"title-module\">Payment Method:</label>\r\n                    </div>\r\n                    <div className=\"col-md-7\">\r\n                      <input type=\"text\" id=\"checkmethod\" name=\"name\" className=\"form-control\" value={this.state.fields[\"Payment\"]} readOnly placeholder />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\" data-target=\"#topupModal\" data-toggle=\"modal\">\r\n                    Back\r\n                  </button>\r\n                  <a className=\"btn btn-primary\" id=\"btn-delete\" href=\"#\" data-dismiss=\"modal\" data-toggle=\"modal\" data-target=\"#passwordModal\">Next</a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal fade\" id=\"passwordModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabesl\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                    Password\r\n                  </h5>                  \r\n                </div>\r\n                <form\r\n                  role=\"form\"\r\n                  id=\"addtopup\"\r\n                  onSubmit={this.contactSubmit2.bind(this)}\r\n                >\r\n                  <div className=\"modal-body\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-5\">\r\n                        <label className=\"title-module\">Password:</label>\r\n                      </div>\r\n                      <div className=\"col-md-7\">\r\n                        <input type=\"password\" id=\"PasswordConfirm\" name=\"PasswordConfirm\" className=\"form-control\" placeholder=\"Password\" onChange={this.handleChange2.bind(this, \"PasswordConfirm\")} value={this.state.fields[\"PasswordConfirm\"]} />\r\n                        <span style={{ color: \"red\" }}>\r\n                          {this.state.errors[\"PasswordConfirm\"]}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <hr className=\"divider\" />\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-5\">\r\n                        <label className=\"title-module\">Confirm Password:</label>\r\n                      </div>\r\n                      <div className=\"col-md-7\">\r\n                        <input type=\"password\" id=\"PasswordConfirm2\" name=\"PasswordConfirm2\" className=\"form-control\" placeholder=\"Confirm Password\" onChange={this.handleChange2.bind(this, \"PasswordConfirm2\")} value={this.state.fields[\"PasswordConfirm2\"]} />\r\n                        <span style={{ color: \"red\" }}>\r\n                          {this.state.errors[\"PasswordConfirm2\"]}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"modal-footer\">\r\n                    <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\" data-toggle=\"modal\" data-target=\"#checkModal\">\r\n                      Back\r\n                  </button>\r\n                    <button className=\"btn btn-success\" id=\"btn-delete\" type=\"submit\">Confirm</button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Main content */}\r\n\r\n          <section className=\"content-header\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row mb-2\">\r\n                <div className=\"col-sm-6\">\r\n                  <h3>History Transaction</h3>\r\n                </div>\r\n                <div className=\"col-sm-6\">\r\n                  <ol className=\"breadcrumb float-sm-right\">\r\n                    <li className=\"breadcrumb-item\">\r\n                      <a href='/'>Home</a>\r\n                    </li>\r\n                    <li className=\"breadcrumb-item active\">History Transaction</li>\r\n                  </ol>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* <!-- /.container-fluid --> */}\r\n          </section>\r\n\r\n          <section className=\"content pdg-btm\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12 ctm-responsive\">\r\n                      {show ? <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary add-btn\"\r\n                        onClick={()=>{this.refresh()}}\r\n                        style={{ float: \"right\" }}\r\n                      >\r\n                        <i className=\"nav-icon fas fa-plus\"></i>\r\n                      Add Top Up\r\n                    </button> : null}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <DataTable headings={headings} rows={rows} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          {/* /.content */}\r\n        </div>\r\n        {/* /.content-wrapper */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TopUpManagement;","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\SideBar\\SideBar.js",["111","112","113","114","115","116","117"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\BookManagement\\BookDetail.js",["118","119","120"],{"ruleId":"121","severity":1,"message":"122","line":2,"column":28,"nodeType":"123","messageId":"124","endLine":2,"endColumn":39},{"ruleId":"121","severity":1,"message":"125","line":4,"column":9,"nodeType":"123","messageId":"124","endLine":4,"endColumn":13},{"ruleId":"126","severity":1,"message":"127","line":30,"column":17,"nodeType":"128","endLine":30,"endColumn":168},{"ruleId":"126","severity":1,"message":"127","line":44,"column":17,"nodeType":"128","endLine":44,"endColumn":168},{"ruleId":"126","severity":1,"message":"127","line":66,"column":21,"nodeType":"128","endLine":66,"endColumn":91},{"ruleId":"121","severity":1,"message":"129","line":21,"column":15,"nodeType":"123","messageId":"124","endLine":21,"endColumn":25},{"ruleId":"121","severity":1,"message":"130","line":23,"column":15,"nodeType":"123","messageId":"124","endLine":23,"endColumn":25},{"ruleId":"131","severity":1,"message":"132","line":34,"column":23,"nodeType":"133","messageId":"134","endLine":34,"endColumn":25},{"ruleId":"131","severity":1,"message":"132","line":34,"column":41,"nodeType":"133","messageId":"134","endLine":34,"endColumn":43},{"ruleId":"131","severity":1,"message":"132","line":34,"column":62,"nodeType":"133","messageId":"134","endLine":34,"endColumn":64},{"ruleId":"131","severity":1,"message":"132","line":34,"column":81,"nodeType":"133","messageId":"134","endLine":34,"endColumn":83},{"ruleId":"131","severity":1,"message":"132","line":34,"column":102,"nodeType":"133","messageId":"134","endLine":34,"endColumn":104},{"ruleId":"131","severity":1,"message":"132","line":34,"column":123,"nodeType":"133","messageId":"134","endLine":34,"endColumn":125},{"ruleId":"135","severity":1,"message":"136","line":18,"column":17,"nodeType":"128","endLine":21,"endColumn":19},{"ruleId":"121","severity":1,"message":"137","line":6,"column":8,"nodeType":"123","messageId":"124","endLine":6,"endColumn":16},{"ruleId":"126","severity":1,"message":"138","line":282,"column":19,"nodeType":"128","endLine":284,"endColumn":20},{"ruleId":"135","severity":1,"message":"136","line":18,"column":17,"nodeType":"128","endLine":21,"endColumn":19},{"ruleId":"139","severity":1,"message":"140","line":68,"column":35,"nodeType":"141","messageId":"142","endLine":68,"endColumn":37},{"ruleId":"131","severity":1,"message":"132","line":88,"column":82,"nodeType":"133","messageId":"134","endLine":88,"endColumn":84},{"ruleId":"139","severity":1,"message":"140","line":43,"column":32,"nodeType":"141","messageId":"142","endLine":43,"endColumn":34},{"ruleId":"143","severity":1,"message":"144","line":401,"column":11,"nodeType":"128","endLine":401,"endColumn":88},{"ruleId":"143","severity":1,"message":"144","line":461,"column":11,"nodeType":"128","endLine":461,"endColumn":48},{"ruleId":"135","severity":1,"message":"136","line":543,"column":13,"nodeType":"128","endLine":543,"endColumn":50},{"ruleId":"121","severity":1,"message":"145","line":3,"column":8,"nodeType":"123","messageId":"124","endLine":3,"endColumn":9},{"ruleId":"121","severity":1,"message":"146","line":12,"column":25,"nodeType":"123","messageId":"124","endLine":12,"endColumn":33},{"ruleId":"121","severity":1,"message":"147","line":12,"column":49,"nodeType":"123","messageId":"124","endLine":12,"endColumn":59},{"ruleId":"121","severity":1,"message":"125","line":4,"column":10,"nodeType":"123","messageId":"124","endLine":4,"endColumn":14},{"ruleId":"121","severity":1,"message":"148","line":5,"column":8,"nodeType":"123","messageId":"124","endLine":5,"endColumn":12},{"ruleId":"121","severity":1,"message":"149","line":11,"column":10,"nodeType":"123","messageId":"124","endLine":11,"endColumn":17},{"ruleId":"121","severity":1,"message":"150","line":13,"column":8,"nodeType":"123","messageId":"124","endLine":13,"endColumn":19},{"ruleId":"151","severity":1,"message":"152","line":27,"column":7,"nodeType":"153","messageId":"134","endLine":27,"endColumn":11},{"ruleId":"131","severity":1,"message":"132","line":45,"column":25,"nodeType":"133","messageId":"134","endLine":45,"endColumn":27},{"ruleId":"131","severity":1,"message":"132","line":161,"column":31,"nodeType":"133","messageId":"134","endLine":161,"endColumn":33},{"ruleId":"131","severity":1,"message":"132","line":168,"column":38,"nodeType":"133","messageId":"134","endLine":168,"endColumn":40},{"ruleId":"131","severity":1,"message":"132","line":190,"column":30,"nodeType":"133","messageId":"134","endLine":190,"endColumn":32},{"ruleId":"131","severity":1,"message":"132","line":204,"column":25,"nodeType":"133","messageId":"134","endLine":204,"endColumn":27},{"ruleId":"131","severity":1,"message":"132","line":216,"column":26,"nodeType":"133","messageId":"134","endLine":216,"endColumn":28},{"ruleId":"131","severity":1,"message":"132","line":264,"column":15,"nodeType":"133","messageId":"134","endLine":264,"endColumn":17},{"ruleId":"131","severity":1,"message":"132","line":314,"column":26,"nodeType":"133","messageId":"134","endLine":314,"endColumn":28},{"ruleId":"121","severity":1,"message":"154","line":367,"column":35,"nodeType":"123","messageId":"124","endLine":367,"endColumn":39},{"ruleId":"126","severity":1,"message":"127","line":392,"column":19,"nodeType":"128","endLine":392,"endColumn":167},{"ruleId":"143","severity":1,"message":"144","line":408,"column":17,"nodeType":"128","endLine":412,"endColumn":18},{"ruleId":"126","severity":1,"message":"127","line":567,"column":19,"nodeType":"128","endLine":567,"endColumn":145},{"ruleId":"143","severity":1,"message":"144","line":580,"column":17,"nodeType":"128","endLine":584,"endColumn":18},{"ruleId":"121","severity":1,"message":"155","line":9,"column":8,"nodeType":"123","messageId":"124","endLine":9,"endColumn":13},{"ruleId":"151","severity":1,"message":"156","line":39,"column":7,"nodeType":"153","messageId":"134","endLine":39,"endColumn":16},{"ruleId":"131","severity":1,"message":"132","line":47,"column":26,"nodeType":"133","messageId":"134","endLine":47,"endColumn":28},{"ruleId":"131","severity":1,"message":"132","line":57,"column":28,"nodeType":"133","messageId":"134","endLine":57,"endColumn":30},{"ruleId":"121","severity":1,"message":"157","line":98,"column":13,"nodeType":"123","messageId":"124","endLine":98,"endColumn":20},{"ruleId":"158","severity":1,"message":"159","line":123,"column":17,"nodeType":"128","endLine":123,"endColumn":112},{"ruleId":"126","severity":1,"message":"127","line":165,"column":17,"nodeType":"128","endLine":165,"endColumn":50},{"ruleId":"139","severity":1,"message":"140","line":46,"column":35,"nodeType":"141","messageId":"142","endLine":46,"endColumn":37},{"ruleId":"121","severity":1,"message":"160","line":199,"column":13,"nodeType":"123","messageId":"124","endLine":199,"endColumn":29},{"ruleId":"131","severity":1,"message":"132","line":201,"column":70,"nodeType":"133","messageId":"134","endLine":201,"endColumn":72},"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'editButton' is assigned a value but never used.","'cancelForm' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Reactdom' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","'$' is defined but never used.","'pristine' is assigned a value but never used.","'submitting' is assigned a value but never used.","'Card' is defined but never used.","'MDBIcon' is defined but never used.","'AuthService' is defined but never used.","no-dupe-keys","Duplicate key 'data'.","ObjectExpression","'user' is assigned a value but never used.","'Axios' is defined but never used.","Duplicate key 'userToken'.","'balance' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'statusBookDetail' is defined but never used."]