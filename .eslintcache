[{"D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\BookManagement\\BookManagement.js":"1","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\SlideShowManagement\\SlideShowManagement.js":"2","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\index.js":"3","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Instances\\axios-instances.js":"4","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Footer\\Footer.js":"5","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\SideBar\\SideBar.js":"6","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\NavBar\\NavBar.js":"7","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\TopUp.js":"8","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\Payment\\Payment.js":"9","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\BookManagement\\BookDetail.js":"10","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\Donation\\Donation.js":"11","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Components\\Datatable\\Table.js":"12","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\TopUp3.js":"13","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\Validate.js":"14","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\LogManagement\\LogManagement.js":"15","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\Profile\\Profile.js":"16"},{"size":30919,"mtime":1610346377021,"results":"17","hashOfConfig":"18"},{"size":20373,"mtime":1610353802279,"results":"19","hashOfConfig":"18"},{"size":937,"mtime":1609725081312,"results":"20","hashOfConfig":"18"},{"size":332,"mtime":1610077558860,"results":"21","hashOfConfig":"18"},{"size":519,"mtime":1606199030103,"results":"22","hashOfConfig":"18"},{"size":10335,"mtime":1610330975080,"results":"23","hashOfConfig":"18"},{"size":3815,"mtime":1610330975079,"results":"24","hashOfConfig":"18"},{"size":573,"mtime":1610201263935,"results":"25","hashOfConfig":"18"},{"size":16240,"mtime":1610330975078,"results":"26","hashOfConfig":"18"},{"size":19177,"mtime":1610330975076,"results":"27","hashOfConfig":"18"},{"size":11011,"mtime":1609921581720,"results":"28","hashOfConfig":"18"},{"size":1681,"mtime":1609856420897,"results":"29","hashOfConfig":"18"},{"size":2330,"mtime":1609321786469,"results":"30","hashOfConfig":"18"},{"size":1069,"mtime":1609921581725,"results":"31","hashOfConfig":"18"},{"size":3636,"mtime":1610352718696,"results":"32","hashOfConfig":"18"},{"size":16560,"mtime":1610357079923,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"19k8gcz",{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\BookManagement\\BookManagement.js",["68"],"import React, { Component } from \"react\";\r\nimport DataTable from \"../../../Components/Datatable/Table\";\r\nimport Action from \"../../../Components/Datatable/Action\";\r\nimport $ from \"jquery\";\r\nimport \"datatables.net-responsive/js/dataTables.responsive\";\r\nimport \"datatables.net-dt/css/jquery.dataTables.css\";\r\nimport Swal from \"sweetalert2\";\r\nimport Axios from '../../../Instances/axios-instances';\r\n\r\nclass BookManagement extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      fields: {},\r\n      errors: {},\r\n      data: [],\r\n      rows: [],\r\n      results: [],\r\n      category: [],\r\n      imgBanner: \"\",\r\n      imgDetail: \"\",\r\n      chooseFileBanner: \"Choose Image Banner\",\r\n      chooseFileDetail: \"Choose Image Detail\"\r\n    };\r\n\r\n    this.bookChange = this.bookChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCategory();\r\n    this.fetchData();\r\n  }\r\n\r\n  async getCategory() {\r\n    let fetchCategory = await Axios.get(\r\n      \"/category/get-all-active\"\r\n    );\r\n    console.log(fetchCategory);\r\n    const resultCategory = fetchCategory.data;\r\n    this.setState({ category: resultCategory });\r\n  }\r\n\r\n  async fetchData() {\r\n    $(\"#example1\").DataTable().destroy();\r\n    let results = [];\r\n\r\n    var no = 1;\r\n\r\n    await Axios.get('/book/get-all-active')\r\n        .then((response) => {\r\n          const result = response.data\r\n          this.setState({data: result})\r\n          result.map((book) => {\r\n            let row = [];\r\n\r\n            row.push(<td className=\"text-center\">{no++}</td>);\r\n            row.push(\r\n              <td className=\"text-center py-0 align-middle\">\r\n                <div className=\"btn-group btn-group-sm\">\r\n                  <Action\r\n                    type=\"success\"\r\n                    title=\"Edit\"\r\n                    icon=\"pen\"\r\n                    dataToggle=\"modal\"\r\n                    dataTarget=\"#modal-edit\"\r\n                    onClick={() => this.getBook(book.bookId)}\r\n                  />\r\n                  <Action\r\n                    type=\"danger\"\r\n                    title=\"Delete\"\r\n                    icon=\"trash\"\r\n                    dataToggle=\"modal\"\r\n                    dataTarget=\"#modal-delete\"\r\n                    onClick={() => this.getBook(book.bookId)}\r\n                  />\r\n                  <Action\r\n                    type=\"info\"\r\n                    title=\"Detail\"\r\n                    icon=\"eye\"\r\n                    link={`BookDetail/${book.bookId}`}\r\n                  />\r\n                </div>\r\n              </td>\r\n            );\r\n            row.push(<td className=\"text-center\">{book.bookCode}</td>);\r\n            row.push(<td className=\"text-center\">{book.title}</td>);\r\n            row.push(<td className=\"text-center\">{book.author}</td>);\r\n            row.push(<td className=\"text-center\"><img src={book.imgBanner} alt=\"placeholder\" style={{width: 146, height: 100}} /></td>);\r\n            row.push(<td className=\"text-center\"><img src={book.imgDetail} alt=\"placeholder\" style={{width: 100, height: 146}} /></td>);\r\n            row.push(<td className=\"text-center\">{book.publishDate}</td>);\r\n            row.push(<td className=\"text-center\">{book.qty}</td>);\r\n            row.push(<td className=\"text-center\">{book.categoryEntity.category}</td>);\r\n            results.push(row);\r\n                })\r\n            this.setState({ rows: results });\r\n\r\n            $(\"#example1\").DataTable({\r\n              responsive: true,\r\n              autoWidth: false,\r\n            });\r\n        })\r\n  }\r\n\r\n  bookChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  resetModal() {\r\n    let fields = this.state.fields\r\n    fields[\"title\"] = \"\"\r\n    fields[\"author\"] = \"\"\r\n    fields[\"categoryId\"] = \"\"\r\n    fields[\"statusBook\"] = \"\"\r\n    fields[\"description\"] = \"\"\r\n    fields[\"publishDate\"] = \"\"\r\n    fields[\"statusBook\"] = \"\"\r\n    fields[\"imgBanner\"] = \"\"\r\n    fields[\"imgDetail\"] = \"\"\r\n    fields[\"title\"] = \"\"\r\n\r\n    let errors = {}\r\n    errors[\"title\"] = \"\"\r\n    errors[\"author\"] = \"\"\r\n    errors[\"categoryId\"] = \"\"\r\n    errors[\"statusBook\"] = \"\"\r\n    errors[\"description\"] = \"\"\r\n    errors[\"publishDate\"] = \"\"\r\n    errors[\"statusBook\"] = \"\"\r\n    errors[\"imgBanner\"] = \"\"\r\n    errors[\"imgDetail\"] = \"\"\r\n    errors[\"title\"] = \"\"\r\n\r\n    this.setState({fields: fields})\r\n    this.setState({errors: errors})\r\n  }\r\n\r\n  getBook = (id) => {\r\n    Axios.get(\"/book/get-by-id/\" + id).then((response) => {\r\n      console.log(response);\r\n\r\n      let imgBannerConvert = this.base64Converter(response.data.imgBanner)\r\n      console.log(\"Convert Base64 Banner: \" + imgBannerConvert)\r\n\r\n      let imgDetailConvert = this.base64Converter(response.data.imgDetail)\r\n      console.log(imgDetailConvert)\r\n\r\n      this.setState({\r\n        author: response.data.author,\r\n        description: response.data.description,\r\n        imgBanner: response.data.imgBanner,\r\n        imgDetail: response.data.imgDetail,\r\n        publishDate: response.data.publishDate,\r\n        qty: response.data.qty,\r\n        statusBook: response.data.statusBook,\r\n        title: response.data.title,\r\n        categoryId: response.data.categoryEntity.categoryId,\r\n        bookId: id,\r\n      });\r\n    });\r\n  };\r\n\r\n  updateBook = (id) => {\r\n    let user = JSON.parse(localStorage.getItem(\"user\"));\r\n    const token = user.token;\r\n    console.log(token)\r\n    const config = {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    };\r\n\r\n    const book = {\r\n      author: this.state.author,\r\n      description: this.state.description,\r\n      imgBanner: this.state.imgBanner,\r\n      imgDetail: this.state.imgDetail,\r\n      publishDate: this.state.publishDate,\r\n      qty: this.state.qty,\r\n      statusBook: this.state.statusBook,\r\n      title: this.state.title,\r\n      categoryId: this.state.categoryId,\r\n    };\r\n\r\n    console.log(book)\r\n\r\n    if(this.handleValidationUpdate()) {\r\n      Axios\r\n      .put(\"/book/update-book/\" + id, book, config)\r\n      .then((response) => {\r\n        console.log(response);\r\n        $(\"#modal-edit\").modal(\"toggle\");\r\n        $('.modal-backdrop').remove();\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          title: \"Success\",\r\n          text: \"Your Data has been Updated\",\r\n          confirmButtonText: `OK`,\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            this.fetchData()\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n  };\r\n\r\n  deleteBook = (id) => {\r\n    Axios\r\n      .put(\"/book/delete-book/\" + id)\r\n      .then((response) => {\r\n        console.log(response);\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          title: \"Success\",\r\n          text: \"Your Data has been Deleted\",\r\n          confirmButtonText: `OK`,\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            this.fetchData()\r\n            \r\n          }\r\n        });\r\n      });\r\n  };\r\n\r\n  handleChange(field, e) {\r\n    let fields = this.state.fields;\r\n    let errors = {}\r\n    errors[\"title\"] = \"\"\r\n    errors[\"author\"] = \"\"\r\n    errors[\"description\"] = \"\"\r\n    errors[\"publishDate\"] = \"\"\r\n    errors[\"categoryId\"] = \"\"\r\n    errors[\"imgBanner\"] = \"\"\r\n    errors[\"imgDetail\"] = \"\"\r\n    fields[field] = e.target.value;\r\n    this.setState({ fields });\r\n    this.setState({errors: errors})\r\n    \r\n  }\r\n\r\n  handleImageDetail = (e) => {\r\n    const fileImg = e.target.files[0]\r\n    this.setState({chooseFileDetail: fileImg.name})\r\n    console.log(this.state.chooseFileDetail)\r\n    const fileReader = new FileReader();\r\n\r\n    fileReader.readAsDataURL(fileImg)\r\n\r\n    fileReader.onload = e => {\r\n      let base64Image = e.target.result\r\n      let base64ImageStrip = base64Image.split(\"base64,\")[1];\r\n      \r\n      this.setState({imgDetail: base64ImageStrip})\r\n      console.log(this.state.imgDetail)\r\n    }\r\n  }\r\n\r\n  base64Converter = (fileImg) =>{\r\n    const data = fileImg\r\n    var base64Convert = btoa(data)\r\n    return base64Convert\r\n  }\r\n\r\n  handleImageBanner = (e) => {\r\n    const fileImg = e.target.files[0]\r\n    this.setState({chooseFileBanner: fileImg.name})\r\n    console.log(this.state.chooseFileBanner)\r\n    const fileReader = new FileReader();\r\n\r\n    fileReader.readAsDataURL(fileImg)\r\n\r\n    fileReader.onload = e => {\r\n      let base64Image = e.target.result\r\n      let base64ImageStrip = base64Image.split(\"base64,\")[1];\r\n      \r\n      this.setState({imgBanner: base64ImageStrip})\r\n      console.log(this.state.imgBanner)\r\n    }\r\n  }\r\n\r\n\r\n  handleValidation() {\r\n    let fields = this.state.fields;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    // Title\r\n    if (!fields[\"title\"]) {\r\n      formIsValid = false;\r\n      errors[\"title\"] = \"Title cannot be empty\";\r\n    }\r\n\r\n    //Author\r\n    if (!fields[\"author\"]) {\r\n      formIsValid = false;\r\n      errors[\"author\"] = \"Author cannot be empty\";\r\n    }\r\n\r\n    //Description\r\n    if (!fields[\"description\"]) {\r\n      formIsValid = false;\r\n      errors[\"description\"] = \"Description cannot be empty\";\r\n    }\r\n\r\n    //Publish Date\r\n    if (!fields[\"publishDate\"]) {\r\n      formIsValid = false;\r\n      errors[\"publishDate\"] = \"Publish Date cannot be empty\";\r\n    }\r\n\r\n    //Category\r\n    if (!fields[\"categoryId\"]) {\r\n      formIsValid = false;\r\n      errors[\"categoryId\"] = \"Please Choose a Category!\";\r\n    }\r\n\r\n    //Image Banner\r\n    if (fields[\"imgBanner\"] === \"\") {\r\n      formIsValid = false;\r\n      errors[\"imgBanner\"] = \"Image Banner cannot be empty!\";\r\n    }\r\n\r\n    //Image Detail\r\n    if (fields[\"imgDetail\"] === \"\") {\r\n      formIsValid = false;\r\n      errors[\"imgDetail\"] = \"Image Detail cannot be empty!\";\r\n    }\r\n\r\n    this.setState({ errors: errors });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleValidationUpdate() {\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    if(this.state.title === \"\") {\r\n      formIsValid = false;\r\n      errors[\"title\"] = \"Title cannot be empty\";\r\n    }\r\n\r\n    if(this.state.author === \"\") {\r\n      formIsValid = false;\r\n      errors[\"author\"] = \"Author cannot be empty\";\r\n    }\r\n\r\n    if(this.state.categoryId === \"\") {\r\n      formIsValid = false;\r\n      errors[\"categoryId\"] = \"Please Choose a Category!\";\r\n    }\r\n\r\n    if(this.state.description === \"\") {\r\n      formIsValid = false;\r\n      errors[\"description\"] = \"Description cannot be empty\";\r\n    }\r\n\r\n    if(this.state.imgBanner === \"\") {\r\n      formIsValid = false;\r\n      errors[\"imgBanner\"] = \"Image Banner cannot be empty!\";\r\n    }\r\n\r\n    if(this.state.imgDetail === \"\") {\r\n      formIsValid = false;\r\n      errors[\"imgDetail\"] = \"Image Detail cannot be empty!\";\r\n    }\r\n\r\n    this.setState({ errors: errors });\r\n    return formIsValid;\r\n  }\r\n\r\n  contactSubmit(e) {\r\n    let fields = this.state.fields;\r\n    let user = JSON.parse(localStorage.getItem(\"user\"));\r\n    const token = user.token;\r\n    console.log(token);\r\n    const config = {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    };\r\n\r\n    e.preventDefault();\r\n    if (this.handleValidation()) {\r\n      $(\"#modal-add\").modal(\"toggle\");\r\n      $('.modal-backdrop').remove();\r\n      const book = {\r\n        author: fields[\"author\"],\r\n        description: fields[\"description\"],\r\n        imgBanner: this.state.imgBanner,\r\n        imgDetail: this.state.imgDetail,\r\n        qty: fields[\"qty\"],\r\n        statusBook: fields[\"statusBook\"],\r\n        title: fields[\"title\"],\r\n        categoryId: fields[\"categoryId\"],\r\n        publishDate: fields[\"publishDate\"],\r\n      };\r\n\r\n      console.log(book);\r\n\r\n      Axios\r\n        .post(\"/book/add-book\", book, config)\r\n        .then((response) => {\r\n          console.log(response);\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: \"Success\",\r\n            text: \"Your Data has been Added\",\r\n            confirmButtonText: `OK`,\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              this.fetchData()\r\n              this.resetModal()\r\n            }\r\n          });\r\n        }).catch((error) =>\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Error\",\r\n          text: \"Book already exist!\",\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            $(\"#modal-add\").modal(\"toggle\");\r\n          }\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { rows, category } = this.state;\r\n    const headings = [\r\n      \"No.\",\r\n      \"Action\",\r\n      \"Book ID\",\r\n      \"Title\",\r\n      \"Author\",\r\n      \"Image Banner\",\r\n      \"Image Detail\",\r\n      \"Publish Date\",\r\n      \"Quantity\",\r\n      \"Category\",\r\n    ];\r\n\r\n    return (\r\n      <div className=\"content-wrapper\">\r\n        <section className=\"content-header\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col-sm-6\">\r\n                <h1>Book Management</h1>\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <ol className=\"breadcrumb float-sm-right\">\r\n                  <li className=\"breadcrumb-item\">\r\n                    <a href=\"index.html\">Home</a>\r\n                  </li>\r\n                  <li className=\"breadcrumb-item active\">Book Management</li>\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/* Main content */}\r\n        <section className=\"content\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12 ctm-responsive\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary add-btn\"\r\n                          data-toggle=\"modal\"\r\n                          data-target=\"#modal-add\"\r\n                          style={{ float: \"right\" }}\r\n                        >\r\n                          <i className=\"nav-icon fas fa-plus\"></i>\r\n                          &nbsp; Add Book\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  {/* /.card-header */}\r\n                  <div className=\"card-body\">\r\n                    <DataTable headings={headings} rows={rows} />\r\n                    {/* /.card-body */}\r\n                  </div>\r\n                </div>\r\n                {/* /.card */}\r\n              </div>\r\n              {/* /.col */}\r\n            </div>\r\n            {/* /.row */}\r\n          </div>\r\n          {/* /.container-fluid */}\r\n        </section>\r\n        {/* /.content */}\r\n\r\n        {/* <!--Modal Add--> */}\r\n        <div className=\"modal fade\" id=\"modal-add\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Add Book</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <form id=\"addBook\" onSubmit={this.contactSubmit.bind(this)}>\r\n                <div className=\"modal-body\">\r\n                  <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-sm-6\">\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"inputTitle\">Title</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"inputTitle\"\r\n                            name=\"title\"\r\n                            placeholder=\"Enter Title\"\r\n                            onChange={this.handleChange.bind(this, \"title\")}\r\n                            value={this.state.fields[\"title\"]}\r\n                          />\r\n                          <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"title\"]}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"col-sm-6\">\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"inputAuthor\">Author</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"inputAuthor\"\r\n                            name=\"author\"\r\n                            placeholder=\"Enter Author\"\r\n                            onChange={this.handleChange.bind(this, \"author\")}\r\n                            value={this.state.fields[\"author\"]}\r\n                          />\r\n                          <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"author\"]}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"inputCategoryId\">Category</label>\r\n                      <select\r\n                        name=\"categoryId\"\r\n                        className=\"form-control\"\r\n                        id=\"inputCategoryId\"\r\n                        value={this.state.fields[\"categoryId\"]}\r\n                        onChange={this.handleChange.bind(this, \"categoryId\")}\r\n                      >\r\n                        <option value=\"null\">Choose Category</option>\r\n                        {category.map((category) => {\r\n                          return (\r\n                            <option value={category.categoryId}>\r\n                              {category.category}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </select>\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"categoryId\"]}\r\n                      </span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"inputDescription\">Description</label>\r\n                      <textarea\r\n                        className=\"form-control\"\r\n                        id=\"inputDescription\"\r\n                        name=\"description\"\r\n                        placeholder=\"Enter Description\"\r\n                        rows=\"4\"\r\n                        cols=\"50\"\r\n                        onChange={this.handleChange.bind(this, \"description\")}\r\n                        value={this.state.fields[\"description\"]}\r\n                      ></textarea>\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"description\"]}\r\n                      </span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                    <label htmlFor=\"inputImgBanner\">Image Banner</label>\r\n                      <div className=\"input-group\">\r\n                        <div className=\"custom-file\">\r\n                          <input type=\"file\" accept=\"image/*\" className=\"custom-file-input\" id=\"inputImgBanner\" name=\"imgBanner\" onChange={this.handleImageBanner}\r\n                        value={this.state.fields[\"imgBanner\"]}/>\r\n                          <label className=\"custom-file-label\" for=\"exampleInputFile\" style={{overflow:\"hidden\"}}>{this.state.chooseFileBanner}</label>                   \r\n                        </div>\r\n                      </div> \r\n                      <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"imgBanner\"]}\r\n                          </span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"inputImgDetail\">Image Detail</label>\r\n                      <div className=\"input-group\">\r\n                        <div className=\"custom-file\">\r\n                          <input type=\"file\" accept=\"image/*\" className=\"custom-file-input\" id=\"inputImgDetail\" name=\"imgDetail\" onChange={this.handleImageDetail}\r\n                        value={this.state.fields[\"imgDetail\"]}/>\r\n                          <label className=\"custom-file-label\" for=\"exampleInputFile\" style={{overflow:\"hidden\"}}>{this.state.chooseFileDetail}</label>                   \r\n                        </div>\r\n                      </div>\r\n                      <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"imgDetail\"]}\r\n                          </span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"inputPublishDate\">Publish Date</label>\r\n                      <input\r\n                        type=\"date\"\r\n                        className=\"form-control\"\r\n                        id=\"inputPublishDate\"\r\n                        name=\"publishDate\"\r\n                        placeholder=\"Enter Publish Date\"\r\n                        onChange={this.handleChange.bind(this, \"publishDate\")}\r\n                        value={this.state.fields[\"publishDate\"]}\r\n                      />\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"publishDate\"]}\r\n                      </span>\r\n                    </div>\r\n\r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer justify-content-between\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-default\"\r\n                    data-dismiss=\"modal\"\r\n                    onClick={() => this.resetModal()}\r\n                  >\r\n                    Close\r\n                  </button>\r\n                  <button type=\"submit\" className=\"btn btn-warning\">\r\n                    Add\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n\r\n        {/* <!--Modal Edit--> */}\r\n        <div className=\"modal fade\" id=\"modal-edit\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Edit Book</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <form id=\"editBook\">\r\n                <div className=\"modal-body\">\r\n                  <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-sm-6\">\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"editTitle\">Title</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"editTitle\"\r\n                            name=\"title\"\r\n                            onChange={this.bookChange}\r\n                            value={this.state.title}\r\n                          />\r\n                          <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"title\"]}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"col-sm-6\">\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"editAuthor\">Author</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"editAuthor\"\r\n                            name=\"author\"\r\n                            placeholder=\"Enter Author\"\r\n                            onChange={this.bookChange}\r\n                            value={this.state.author}\r\n                          />\r\n                          <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"author\"]}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"editCategoryId\">Category</label>\r\n                      <select\r\n                        name=\"categoryId\"\r\n                        className=\"form-control\"\r\n                        id=\"editCategoryId\"\r\n                        value={this.state.categoryId}\r\n                        onChange={this.bookChange}\r\n                      >\r\n                        {category.map((category) => {\r\n                          return (\r\n                            <option value={category.categoryId}>\r\n                              {category.category}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </select>\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"categoryId\"]}\r\n                      </span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"editDescription\">Description</label>\r\n                      <textarea\r\n                        className=\"form-control\"\r\n                        id=\"editDescription\"\r\n                        name=\"description\"\r\n                        placeholder=\"Enter Description\"\r\n                        rows=\"4\"\r\n                        cols=\"50\"\r\n                        onChange={this.bookChange}\r\n                        value={this.state.description}\r\n                      ></textarea>\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"description\"]}\r\n                      </span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                    <label htmlFor=\"editImgBanner\">Image Banner</label>\r\n                      <div className=\"input-group\">\r\n                        <div className=\"custom-file\">\r\n                          <input type=\"file\" accept=\"image/*\" className=\"custom-file-input\" id=\"editImgBanner\" name=\"imgBanner\" onChange={this.handleImageBanner}  />\r\n                          <label className=\"custom-file-label\" for=\"exampleInputFile\" style={{overflow:\"hidden\"}}>{this.state.imgBanner}</label>                   \r\n                        </div>\r\n                      </div> \r\n                      <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"imgBanner\"]}\r\n                          </span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"editImgDetail\">Image Detail</label>\r\n                      <div className=\"input-group\">\r\n                        <div className=\"custom-file\">\r\n                          <input type=\"file\" accept=\"image/*\" className=\"custom-file-input\" id=\"editImgDetail\" name=\"imgDetail\" onChange={this.handleImageDetail}/>\r\n                          <label className=\"custom-file-label\" for=\"exampleInputFile\" style={{overflow:\"hidden\"}}>{this.state.imgDetail}</label>                   \r\n                        </div>\r\n                      </div>\r\n                      <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"imgDetail\"]}\r\n                          </span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"editPublishDate\">Publish Date</label>\r\n                      <input\r\n                        type=\"date\"\r\n                        className=\"form-control\"\r\n                        id=\"editPublishDate\"\r\n                        name=\"publishDate\"\r\n                        placeholder=\"Enter Publish Date\"\r\n                        onChange={this.bookChange}\r\n                        value={this.state.publishDate}\r\n                      />\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"publishDate\"]}\r\n                      </span>\r\n                    </div>\r\n\r\n                   \r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer justify-content-between\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-default\"\r\n                    data-dismiss=\"modal\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => this.updateBook(this.state.bookId)}\r\n                    className=\"btn btn-warning\"\r\n                  >\r\n                    Save changes\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n\r\n        {/* <!--Modal Delete--> */}\r\n        <div className=\"modal fade\" id=\"modal-delete\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Delete Book</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                If you Delete this, you can't be returned\r\n              </div>\r\n              <div className=\"modal-footer justify-content-between\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-default\"\r\n                  data-dismiss=\"modal\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-warning\"\r\n                  type=\"button\"\r\n                  data-dismiss=\"modal\"\r\n                  onClick={() => this.deleteBook(this.state.bookId)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BookManagement;\r\n",["69","70"],"D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\SlideShowManagement\\SlideShowManagement.js",["71","72","73","74"],"D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\index.js",[],"D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Instances\\axios-instances.js",[],"D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Footer\\Footer.js",[],"D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\SideBar\\SideBar.js",["75","76","77","78","79","80","81"],"D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\NavBar\\NavBar.js",["82","83","84","85","86"],"D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\TopUp.js",["87"],"D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\Payment\\Payment.js",["88","89"],"D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\BookManagement\\BookDetail.js",["90","91","92"],"D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\Donation\\Donation.js",["93","94"],"D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Components\\Datatable\\Table.js",["95"],"D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\TopUp3.js",["96","97"],"D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\Validate.js",[],"D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\LogManagement\\LogManagement.js",["98","99"],"D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\Profile\\Profile.js",["100","101","102","103"],{"ruleId":"104","severity":1,"message":"105","line":53,"column":29,"nodeType":"106","messageId":"107","endLine":53,"endColumn":31},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"104","severity":1,"message":"105","line":43,"column":32,"nodeType":"106","messageId":"107","endLine":43,"endColumn":34},{"ruleId":"112","severity":1,"message":"113","line":440,"column":11,"nodeType":"114","endLine":440,"endColumn":88},{"ruleId":"112","severity":1,"message":"113","line":500,"column":11,"nodeType":"114","endLine":500,"endColumn":48},{"ruleId":"115","severity":1,"message":"116","line":583,"column":13,"nodeType":"114","endLine":583,"endColumn":50},{"ruleId":"117","severity":1,"message":"118","line":9,"column":8,"nodeType":"119","messageId":"120","endLine":9,"endColumn":13},{"ruleId":"121","severity":1,"message":"122","line":39,"column":7,"nodeType":"123","messageId":"124","endLine":39,"endColumn":16},{"ruleId":"125","severity":1,"message":"126","line":47,"column":26,"nodeType":"127","messageId":"124","endLine":47,"endColumn":28},{"ruleId":"125","severity":1,"message":"126","line":57,"column":28,"nodeType":"127","messageId":"124","endLine":57,"endColumn":30},{"ruleId":"117","severity":1,"message":"128","line":98,"column":13,"nodeType":"119","messageId":"120","endLine":98,"endColumn":20},{"ruleId":"129","severity":1,"message":"130","line":123,"column":17,"nodeType":"114","endLine":123,"endColumn":112},{"ruleId":"131","severity":1,"message":"132","line":165,"column":17,"nodeType":"114","endLine":165,"endColumn":50},{"ruleId":"117","severity":1,"message":"133","line":2,"column":28,"nodeType":"119","messageId":"120","endLine":2,"endColumn":39},{"ruleId":"117","severity":1,"message":"134","line":4,"column":9,"nodeType":"119","messageId":"120","endLine":4,"endColumn":13},{"ruleId":"131","severity":1,"message":"132","line":30,"column":17,"nodeType":"114","endLine":30,"endColumn":168},{"ruleId":"131","severity":1,"message":"132","line":44,"column":17,"nodeType":"114","endLine":44,"endColumn":168},{"ruleId":"131","severity":1,"message":"132","line":66,"column":21,"nodeType":"114","endLine":66,"endColumn":91},{"ruleId":"117","severity":1,"message":"118","line":5,"column":8,"nodeType":"119","messageId":"120","endLine":5,"endColumn":13},{"ruleId":"125","severity":1,"message":"135","line":159,"column":23,"nodeType":"127","messageId":"124","endLine":159,"endColumn":25},{"ruleId":"115","severity":1,"message":"116","line":181,"column":28,"nodeType":"114","endLine":181,"endColumn":76},{"ruleId":"104","severity":1,"message":"105","line":46,"column":35,"nodeType":"106","messageId":"107","endLine":46,"endColumn":37},{"ruleId":"117","severity":1,"message":"136","line":202,"column":13,"nodeType":"119","messageId":"120","endLine":202,"endColumn":29},{"ruleId":"125","severity":1,"message":"126","line":204,"column":70,"nodeType":"127","messageId":"124","endLine":204,"endColumn":72},{"ruleId":"117","severity":1,"message":"137","line":6,"column":8,"nodeType":"119","messageId":"120","endLine":6,"endColumn":16},{"ruleId":"131","severity":1,"message":"138","line":282,"column":19,"nodeType":"114","endLine":284,"endColumn":20},{"ruleId":"117","severity":1,"message":"139","line":3,"column":8,"nodeType":"119","messageId":"120","endLine":3,"endColumn":9},{"ruleId":"117","severity":1,"message":"140","line":12,"column":25,"nodeType":"119","messageId":"120","endLine":12,"endColumn":33},{"ruleId":"117","severity":1,"message":"141","line":12,"column":49,"nodeType":"119","messageId":"120","endLine":12,"endColumn":59},{"ruleId":"117","severity":1,"message":"142","line":3,"column":8,"nodeType":"119","messageId":"120","endLine":3,"endColumn":14},{"ruleId":"104","severity":1,"message":"105","line":45,"column":24,"nodeType":"106","messageId":"107","endLine":45,"endColumn":26},{"ruleId":"131","severity":1,"message":"132","line":426,"column":63,"nodeType":"114","endLine":426,"endColumn":75},{"ruleId":"131","severity":1,"message":"132","line":451,"column":59,"nodeType":"114","endLine":451,"endColumn":71},{"ruleId":"131","severity":1,"message":"132","line":459,"column":59,"nodeType":"114","endLine":459,"endColumn":71},{"ruleId":"131","severity":1,"message":"132","line":467,"column":59,"nodeType":"114","endLine":467,"endColumn":71},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-native-reassign",["143"],"no-negated-in-lhs",["144"],"jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-unused-vars","'Axios' is defined but never used.","Identifier","unusedVar","no-dupe-keys","Duplicate key 'userToken'.","ObjectExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'balance' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useCallback' is defined but never used.","'Link' is defined but never used.","Expected '!==' and instead saw '!='.","'statusBookDetail' is defined but never used.","'Reactdom' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'$' is defined but never used.","'pristine' is assigned a value but never used.","'submitting' is assigned a value but never used.","'Action' is defined but never used.","no-global-assign","no-unsafe-negation"]