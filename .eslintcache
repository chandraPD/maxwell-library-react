[{"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Payment\\Payment.js":"1","C:\\Users\\ASUS\\maxwell-library-react\\src\\index.js":"2","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\SideBar\\SideBar.js":"3","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Profile\\ChangePassword.js":"4","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\SlideShowManagement\\SlideShowManagement.js":"5","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\ReturnBook\\ReturnBook.js":"6","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\TopUp1.js":"7","C:\\Users\\ASUS\\maxwell-library-react\\src\\Components\\Datepicker\\Dates.js":"8","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\showResult.js":"9","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Auth\\Auth.js":"10","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\UserManagement\\UserManagement.js":"11","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\TopUp.js":"12","C:\\Users\\ASUS\\maxwell-library-react\\src\\Components\\Datatable\\Action.js":"13","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\Validate.js":"14","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUpManagement\\TopUpManagement.js":"15","C:\\Users\\ASUS\\maxwell-library-react\\src\\App.js":"16","C:\\Users\\ASUS\\maxwell-library-react\\src\\Components\\Datatable\\Status.js":"17"},{"size":26478,"mtime":1606455043004,"results":"18","hashOfConfig":"19"},{"size":849,"mtime":1606462685722,"results":"20","hashOfConfig":"19"},{"size":7587,"mtime":1606448316990,"results":"21","hashOfConfig":"19"},{"size":10606,"mtime":1606450648446,"results":"22","hashOfConfig":"19"},{"size":12336,"mtime":1606448316987,"results":"23","hashOfConfig":"19"},{"size":7817,"mtime":1606455043008,"results":"24","hashOfConfig":"19"},{"size":3570,"mtime":1606455043010,"results":"25","hashOfConfig":"19"},{"size":651,"mtime":1606403782592,"results":"26","hashOfConfig":"19"},{"size":4229,"mtime":1609144239593,"results":"27","hashOfConfig":"19"},{"size":18226,"mtime":1606455043002,"results":"28","hashOfConfig":"19"},{"size":4505,"mtime":1606448316988,"results":"29","hashOfConfig":"19"},{"size":349,"mtime":1606384946778,"results":"30","hashOfConfig":"19"},{"size":447,"mtime":1606450648422,"results":"31","hashOfConfig":"19"},{"size":1117,"mtime":1606391814916,"results":"32","hashOfConfig":"19"},{"size":23640,"mtime":1609149736630,"results":"33","hashOfConfig":"19"},{"size":156,"mtime":1606213026556,"results":"34","hashOfConfig":"19"},{"size":142,"mtime":1606362277693,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"11ui09a",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Payment\\Payment.js",["77","78","79","80"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\index.js",[],["81","82"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\SideBar\\SideBar.js",["83","84"],"\r\nimport React, { Component } from 'react';\r\nimport './SideBar.style.css'\r\nimport avatarUser from '../../Assets/Media/user/profile.png'\r\nimport logo from '../../Assets/Media/icon/bookshelf.png'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class SideBar extends Component {\r\n    render() {\r\n        return (\r\n            <aside className=\"main-sidebar elevation-4 sidebar-light-primary\">\r\n  {/* Brand Logo */}\r\n  <a href=\"index.html\" className=\"brand-link\">\r\n    <img src={logo} alt=\"Maxwell Library\" style={{height: '2rem', marginLeft: '.7rem'}} />\r\n    <span className=\"brand-text font-weight-light\">Maxwell Library</span>\r\n  </a>\r\n  {/* Sidebar */}\r\n  <div className=\"sidebar os-host os-theme-light os-host-overflow os-host-overflow-y os-host-resize-disabled os-host-scrollbar-horizontal-hidden os-host-transition\">\r\n    <div className=\"os-resize-observer-host observed\">\r\n      <div className=\"os-resize-observer\" style={{left: 0, right: 'auto'}} />\r\n    </div>\r\n    <div className=\"os-size-auto-observer observed\" style={{height: 'calc(100% + 1px)', float: 'left'}}>\r\n      <div className=\"os-resize-observer\" />\r\n    </div>\r\n    <div className=\"os-content-glue\" style={{margin: '0px -8px', width: 249, height: 514}} />\r\n    <div className=\"os-padding\">\r\n      <div className=\"os-viewport os-viewport-native-scrollbars-invisible\" style={{overflowY: 'scroll'}}>\r\n        <div className=\"os-content\" style={{padding: '0px 8px', height: '100%', width: '100%'}}>\r\n          {/* Sidebar user panel (optional) */}\r\n          <div className=\"user-panel mt-3 pb-3 mb-3 d-flex\">\r\n            <div className=\"image my-center\">\r\n              <Link to='/Profile'>\r\n                <img src={avatarUser} className=\"img-circle elevation-2 profile-img-custom\" alt=\"User Image\" />\r\n                </Link>\r\n            </div>\r\n            <div className=\"info\">\r\n              <a href=\"Profile.html\" className=\"d-block user-name\">Niki Zefanya</a>\r\n              <p style={{fontSize: '1.3rem', fontWeight: 'normal', marginBottom: 0, color: '#000'}}>Rp. 50.000,-</p>\r\n              <Link to='/TopUp' className=\"btn btn-sm btn-primary\" style={{color: 'white'}}>\r\n                <i style={{color: 'white'}} className=\"fas fa-plus-square\" /> &nbsp; Top Up\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          {/* Sidebar Menu */}\r\n          <nav className=\"mt-2\">\r\n            <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n              {/* Add icons to the links using the .nav-icon class\r\n                 with font-awesome or any other icon font library */}\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/Profile\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-user\" />\r\n                  <p>\r\n                    Profile\r\n                  </p>\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n               <Link to=\"/\" className=\"nav-link\" id=\"index\">\r\n                  <i className=\"nav-icon fas fa-book\" />\r\n                  <p>\r\n                    Explore\r\n                  </p>\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/History\" className=\"nav-link\" id=\"history\">\r\n                  <i className=\"nav-icon fas fa-history\" />\r\n                  <p>\r\n                    History\r\n                  </p>\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item has-treeview menu-open\">\r\n                <a href=\"#\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-list-ul\" />\r\n                  <p>\r\n                    Process Management\r\n                    <i className=\"fas fa-angle-left right\" />\r\n                  </p>\r\n                </a>\r\n                <ul className=\"nav nav-treeview\">\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/UserManagement\" className=\"nav-link\">\r\n                      <i className=\"fas fa-users nav-icon\" />\r\n                      <p>User Management</p>\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/BookManagement\" className=\"nav-link\">\r\n                      <i className=\"fas fa-book nav-icon\" />\r\n                      <p>Book Management</p>\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/RentManagement\" className=\"nav-link\">\r\n                      <i className=\"far fa-hourglass nav-icon\" />\r\n                      <p>Rent Management </p>\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/FineManagement\" className=\"nav-link\">\r\n                      <i className=\"fas fa-gavel nav-icon\" />\r\n                      <p>Fine Management</p>\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/CategoryManagement\" className=\"nav-link\">\r\n                      <i className=\"fas fa-th nav-icon\" />\r\n                      <p>Category Management</p>\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/SlideShowManagement\" className=\"nav-link\">\r\n                      <i className=\"far fa-images nav-icon\" />\r\n                      <p>Slide Show Management</p>\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/DonateManagement\" className=\"nav-link\">\r\n                      <i className=\"fa fa-hands-helping nav-icon\" />\r\n                      <p>Donation Management</p>\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/TopUpManagement\" className=\"nav-link\">\r\n                      <i className=\"fa fa-credit-card nav-icon\" />\r\n                      <p>Top Up Management</p>\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/Donation\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-people-carry\" />\r\n                  <p>\r\n                    Donation\r\n                  </p>\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/Auth\" className=\"nav-link\" data-target=\"#modal-xl\">\r\n                  <i className=\"nav-icon fas fa-sign-out-alt\" />\r\n                  <p>\r\n                    Log Out\r\n                  </p>\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n          {/* /.sidebar-menu */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"os-scrollbar os-scrollbar-horizontal os-scrollbar-unusable os-scrollbar-auto-hidden\">\r\n      <div className=\"os-scrollbar-track\">\r\n        <div className=\"os-scrollbar-handle\" style={{width: '100%', transform: 'translate(0px, 0px)'}} />\r\n      </div>\r\n    </div>\r\n    <div className=\"os-scrollbar os-scrollbar-vertical os-scrollbar-auto-hidden\">\r\n      <div className=\"os-scrollbar-track\">\r\n        <div className=\"os-scrollbar-handle\" style={{height: '49.8548%', transform: 'translate(0px, 0px)'}} />\r\n      </div>\r\n    </div>\r\n    <div className=\"os-scrollbar-corner\" />\r\n  </div>\r\n  {/* /.sidebar */}\r\n</aside>\r\n\r\n        )\r\n    }\r\n}\r\n",["85","86"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Profile\\ChangePassword.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\SlideShowManagement\\SlideShowManagement.js",["87","88","89","90","91"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\ReturnBook\\ReturnBook.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\TopUp1.js",["92","93","94","95"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Components\\Datepicker\\Dates.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\showResult.js",["96"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Auth\\Auth.js",["97","98","99","100","101","102","103"],"import React, { Component } from \"react\";\r\nimport \"./Assets/Css/login.css\";\r\nimport LoginImage from \"./Assets/Images/cover.png\";\r\nimport BookShelfImage from \"./Assets/Images/bookshelf.png\";\r\nimport { Link, Redirect, withRouter } from \"react-router-dom\";\r\n\r\nclass Auth extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       fields: {},\r\n       errors: {}\r\n    }\r\n  }\r\n\r\n  handleValidationSignUp() {\r\n    let fields = this.state.fields;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    //username\r\n    if(!fields[\"userNameSignUp\"]) {\r\n      formIsValid = false;\r\n      errors[\"userNameSignUp\"] = \"Username cannot be empty\"\r\n    }\r\n\r\n    //name\r\n    if(!fields[\"fullNameSignUp\"]) {\r\n      formIsValid = false;\r\n      errors[\"fullNameSignUp\"] = \"Name cannot be empty\"\r\n    }\r\n\r\n    //email\r\n    if(!fields[\"emailSignUp\"]) {\r\n      formIsValid = false\r\n      errors[\"emailSignUp\"] = \"Cannot be empty\"\r\n    }\r\n\r\n    if(typeof fields[\"emailSignUp\"] !== \"undefined\") {\r\n      let lastAtPos = fields[\"emailSignUp\"].lastIndexOf('@')\r\n      let lastDotPos = fields[\"emailSignUp\"].lastIndexOf('.')\r\n\r\n      if(!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"emailSignUp\"].indexOf('@@') == -1 && lastDotPos > 2 && (fields[\"emailSignUp\"].length - lastDotPos) > 2)) {\r\n        formIsValid = false;\r\n        errors[\"emailSignUp\"] = \"Email is not valid\"\r\n      }\r\n    }\r\n\r\n    if(fields[\"PasswordSignUp\"] != null) {\r\n      let lengthPass = fields[\"PasswordSignUp\"].length\r\n      if(lengthPass < 8) {\r\n        formIsValid = false\r\n        errors[\"PasswordSignUp\"] = \"Your password must be at least 8 characters long\"\r\n      }\r\n    }\r\n\r\n    if(!fields[\"PasswordSignUp\"]) {\r\n      formIsValid = false\r\n      errors[\"PasswordSignUp\"] = \"Password cannot be empty\"\r\n    }\r\n\r\n    this.setState({errors: errors})\r\n    return formIsValid\r\n  }\r\n\r\n  handleValidationSignIn() {\r\n    let fields = this.state.fields;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    //email\r\n    if(!fields[\"emailSignIn\"]) {\r\n      formIsValid = false\r\n      errors[\"emailSignIn\"] = \"Email cannot be empty\"\r\n    }\r\n\r\n    if(typeof fields[\"emailSignIn\"] !== \"undefined\") {\r\n      let lastAtPos = fields[\"emailSignIn\"].lastIndexOf('@')\r\n      let lastDotPos = fields[\"emailSignIn\"].lastIndexOf('.')\r\n\r\n      if(!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"emailSignIn\"].indexOf('@@') == -1 && lastDotPos > 2 && (fields[\"emailSignIn\"].length - lastDotPos) > 2)) {\r\n        formIsValid = false;\r\n        errors[\"emailSignIn\"] = \"Email is not valid\"\r\n      }\r\n    }\r\n\r\n    if(!fields[\"PasswordSignIn\"]) {\r\n      formIsValid = false\r\n      errors[\"PasswordSignIn\"] = \"Password cannot be empty\"\r\n    }\r\n\r\n    this.setState({errors: errors})\r\n    return formIsValid\r\n  }\r\n\r\n  handleValidationForgotPass() {\r\n    let fields = this.state.fields;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    //username\r\n    if(!fields[\"userNameForgotPass\"]) {\r\n      formIsValid = false;\r\n      errors[\"userNameForgotPass\"] = \"Username cannot be empty\"\r\n    }\r\n\r\n    //email\r\n    if(!fields[\"emailForgotPass\"]) {\r\n      formIsValid = false\r\n      errors[\"emailForgotPass\"] = \"Cannot be empty\"\r\n    }\r\n\r\n    if(typeof fields[\"emailForgotPass\"] !== \"undefined\") {\r\n      let lastAtPos = fields[\"emailForgotPass\"].lastIndexOf('@')\r\n      let lastDotPos = fields[\"emailForgotPass\"].lastIndexOf('.')\r\n\r\n      if(!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"emailForgotPass\"].indexOf('@@') == -1 && lastDotPos > 2 && (fields[\"emailForgotPass\"].length - lastDotPos) > 2)) {\r\n        formIsValid = false;\r\n        errors[\"emailForgotPass\"] = \"Email is not valid\"\r\n      }\r\n    }\r\n\r\n    this.setState({errors: errors})\r\n    return formIsValid\r\n  }\r\n\r\n  contactSubmitSignUp(e) {\r\n    e.preventDefault()\r\n\r\n    if(this.handleValidationSignUp()){\r\n      alert(\"Success!\")\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  contactSubmitSignIn(e) {\r\n    e.preventDefault()\r\n\r\n    if(this.handleValidationSignIn()){\r\n      this.props.history.push('/')\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  contactSubmitForgotPass(e) {\r\n    e.preventDefault()\r\n\r\n    if(this.handleValidationForgotPass()){\r\n      alert(\"Success!\")\r\n    } else {\r\n    }\r\n  }\r\n\r\n  handleChangeSignUp(field, e) {\r\n    let fields = this.state.fields\r\n    fields[field] = e.target.value\r\n    this.setState({fields})\r\n  }\r\n\r\n  handleChangeSignIn(field, e) {\r\n    let fields = this.state.fields\r\n    fields[field] = e.target.value\r\n    this.setState({fields})\r\n  }\r\n\r\n  handleChangeForgotPass(field, e) {\r\n    let fields = this.state.fields\r\n    fields[field] = e.target.value\r\n    this.setState({fields})\r\n  }\r\n  \r\n\r\n  displaySignUp() {\r\n      var login = document.getElementById(\"login\")\r\n      var register = document.getElementById(\"register\")\r\n      var forgotPassword = document.getElementById(\"forgotPassword\")\r\n\r\n      login.style.display = \"none\"\r\n      register.style.display = \"block\"\r\n      forgotPassword.style.display = \"none\"\r\n  }\r\n\r\n  displayLogIn() {\r\n    var login = document.getElementById(\"login\")\r\n    var register = document.getElementById(\"register\")\r\n    var forgotPassword = document.getElementById(\"forgotPassword\")\r\n\r\n    login.style.display = \"block\";\r\n    register.style.display = \"none\";\r\n    forgotPassword.style.display = \"none\";\r\n  }\r\n\r\n  displayForgotPassword() {\r\n    var login = document.getElementById(\"login\")\r\n    var register = document.getElementById(\"register\")\r\n    var forgotPassword = document.getElementById(\"forgotPassword\")\r\n\r\n    login.style.display = \"none\";\r\n    register.style.display = \"none\";\r\n    forgotPassword.style.display = \"block\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main className=\"main-style\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-7 px-0 d-none d-sm-block\">\r\n              <div className=\"main-title\">\r\n                <h1>\r\n                  Book is a window <br />\r\n                  to the world\r\n                </h1>\r\n                <p>Photo by Mark Pan4ratte on Unsplash</p>\r\n                <div className=\"img-cover\"></div>\r\n                <img src={LoginImage} alt=\"login image\" className=\"login-img\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-sm-5 login-section-wrapper\">\r\n              <div className=\"brand-wrapper\">\r\n                <img src={BookShelfImage} alt=\"logo\" className=\"logo\" />\r\n              </div>\r\n\r\n              {/* <!--Login Form--> */}\r\n              <div className=\"login-wrapper my-auto\" id=\"login\" onSubmit={this.contactSubmitSignIn.bind(this)}>\r\n                <h1 className=\"form-title\">Login</h1>\r\n                <p className=\"form-subtitle\">\r\n                  Welcome Back, Please Login to your Account\r\n                </p>\r\n\r\n                <form action=\"#\" id=\"loginForm\" >\r\n                  <div className=\"container-form\">\r\n                    <div className=\"login form-group bottom-label\">\r\n                      <label for=\"exampleInputEmail1\" className=\"label-login\">\r\n                        Email address\r\n                      </label>\r\n                      <input\r\n                        type=\"email\"\r\n                        name=\"emailSignIn\"\r\n                        className=\"form-control custom-form\"\r\n                        id=\"exampleInputEmail1\"\r\n                        placeholder=\"Enter email\"\r\n                        onChange={this.handleChangeSignUp.bind(this, \"emailSignIn\")}\r\n                        value={this.state.fields[\"emailSignIn\"]}\r\n                      />\r\n                      <span style={{color: \"red\", marginLeft: \"15px\", fontSize: \"13px\"}}>{this.state.errors[\"emailSignIn\"]}</span>\r\n                    </div>\r\n                    <div className=\"login form-group bottom-label\">\r\n                      <label\r\n                        for=\"exampleInputPassword1\"\r\n                        className=\"label-login\"\r\n                      >\r\n                        Password\r\n                      </label>\r\n                      <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        className=\"form-control custom-form\"\r\n                        id=\"exampleInputPassword1\"\r\n                        placeholder=\"Password\"\r\n                        onChange={this.handleChangeSignUp.bind(this, \"PasswordSignIn\")}\r\n                        value={this.state.fields[\"PasswordSignIn\"]}\r\n                      />\r\n                      <span style={{color: \"red\", marginLeft: \"15px\", fontSize: \"13px\"}}>{this.state.errors[\"PasswordSignIn\"]}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"pass-manager\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"rememberPassword\"\r\n                      name=\"rememberPassword\"\r\n                    />\r\n                    <label for=\"rememberPassword\">Remember Password</label>\r\n                    \r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"forgot-btn\"\r\n                      onClick={() => this.displayForgotPassword()}\r\n                    >\r\n                      Forgot Password\r\n                    </button>\r\n                    \r\n                  </div>\r\n                  <div className=\"container-btn\">\r\n                    <div className=\"row\">\r\n                      <button\r\n                        name=\"login\"\r\n                        id=\"submit\"\r\n                        className=\"btn login-btn\"\r\n                        type=\"submit\"\r\n                        value=\"Login\"\r\n                      >Login</button>\r\n                      <input\r\n                        name=\"signup\"\r\n                        id=\"signup\"\r\n                        className=\"btn signup-btn\"\r\n                        type=\"button\"\r\n                        value=\"Sign Up\"\r\n                        onClick={() => this.displaySignUp()}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n\r\n              {/* <!--Register Form--> */}\r\n              <div className=\"register-wrapper my-auto\" id=\"register\" onSubmit={this.contactSubmitSignUp.bind(this)}>\r\n                <h1 className=\"form-title\">Register</h1>\r\n                <p className=\"form-subtitle\">\r\n                  Welcome! Please Register to your Account\r\n                </p>\r\n\r\n                <form role=\"form\" id=\"formRegister\">\r\n                  <div className=\"container-form\">\r\n                    <div className=\"login form-group bottom-label\">\r\n                      <label for=\"inputUsername\" className=\"label-login\">\r\n                        Username\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"userNameSignUp\"\r\n                        className=\"form-control custom-form\"\r\n                        id=\"inputUsername\"\r\n                        placeholder=\"Enter username\"\r\n                        autocomplete=\"off\"\r\n                        onChange={this.handleChangeSignUp.bind(this, \"userNameSignUp\")}\r\n                        value={this.state.fields[\"userNameSignUp\"]}\r\n                      />\r\n                      <span style={{color: \"red\", marginLeft: \"15px\", fontSize: \"13px\"}}>{this.state.errors[\"userNameSignUp\"]}</span>\r\n                    </div>\r\n                    <div className=\"login form-group bottom-label\">\r\n                      <label for=\"inputFullName\" className=\"label-login\">\r\n                        Full Name\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"fullNameSignUp\"\r\n                        className=\"form-control custom-form\"\r\n                        id=\"inputFullName\"\r\n                        placeholder=\"Enter full name\"\r\n                        autocomplete=\"off\"\r\n                        onChange={this.handleChangeSignUp.bind(this, \"fullNameSignUp\")}\r\n                        value={this.state.fields[\"fullNameSignUp\"]}\r\n                      />\r\n                      <span style={{color: \"red\", marginLeft: \"15px\", fontSize: \"13px\"}}>{this.state.errors[\"fullNameSignUp\"]}</span>\r\n                    </div>\r\n                    <div className=\"login form-group bottom-label\">\r\n                      <label for=\"inputEmail\" className=\"label-login\">\r\n                        Email address\r\n                      </label>\r\n                      <input\r\n                        type=\"email\"\r\n                        name=\"emailSignUp\"\r\n                        className=\"form-control custom-form\"\r\n                        id=\"inputEmail\"\r\n                        placeholder=\"Enter email\"\r\n                        autocomplete=\"off\"\r\n                        onChange={this.handleChangeSignUp.bind(this, \"emailSignUp\")}\r\n                        value={this.state.fields[\"emailSignUp\"]}\r\n                      />\r\n                      <span style={{color: \"red\", marginLeft: \"15px\", fontSize: \"13px\"}}>{this.state.errors[\"emailSignUp\"]}</span>\r\n                    </div>\r\n                    <div className=\"login form-group bottom-label\">\r\n                      <label for=\"inputPassword\" className=\"label-login\">\r\n                        Password\r\n                      </label>\r\n                      <input\r\n                        type=\"password\"\r\n                        name=\"passwordSignUp\"\r\n                        className=\"form-control custom-form\"\r\n                        id=\"exampleInputPassword\"\r\n                        placeholder=\"Password\"\r\n                        onChange={this.handleChangeSignUp.bind(this, \"PasswordSignUp\")}\r\n                        value={this.state.fields[\"PasswordSignUp\"]}\r\n                      />\r\n                      <span style={{color: \"red\", marginLeft: \"15px\", fontSize: \"13px\"}}>{this.state.errors[\"PasswordSignUp\"]}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"container-btn\">\r\n                    <div className=\"row \">\r\n                      <button\r\n                        name=\"signup\"\r\n                        id=\"signup\"\r\n                        className=\"btn signup-btn\"\r\n                        type=\"submit\"\r\n                        value=\"Sign Up\"\r\n                      >Sign Up</button>\r\n                      <input\r\n                        name=\"login\"\r\n                        id=\"login\"\r\n                        className=\"btn login-btn\"\r\n                        type=\"button\"\r\n                        value=\"Login\"\r\n                        onClick={() => this.displayLogIn()}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n\r\n              {/* <!--Form Forgot Password--> */}\r\n              <div className=\"forgot-wrapper my-auto\" id=\"forgotPassword\" onSubmit={this.contactSubmitForgotPass.bind(this)}>\r\n                <h1 className=\"form-title\">Forgot Password</h1>\r\n                <p className=\"form-subtitle\">\r\n                  Forgot your password? Don't worry, we got you covered.\r\n                </p>\r\n\r\n                <form action=\"#\" id=\"formForgot\">\r\n                  <div className=\"container-form\">\r\n                    <div className=\"login form-group bottom-label\">\r\n                      <label for=\"inputUsername\" className=\"label-login\">\r\n                        Username\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"userNameForgotPass\"\r\n                        className=\"form-control custom-form\"\r\n                        id=\"inputUsername\"\r\n                        placeholder=\"Enter username\"\r\n                        autocomplete=\"off\"\r\n                        onChange={this.handleChangeSignUp.bind(this, \"userNameForgotPass\")}\r\n                        value={this.state.fields[\"userNameForgotPass\"]}\r\n                      />\r\n                      <span style={{color: \"red\", marginLeft: \"15px\", fontSize: \"13px\"}}>{this.state.errors[\"userNameForgotPass\"]}</span>\r\n                    </div>\r\n                    <div className=\"login form-group bottom-label\">\r\n                      <label for=\"inputEmail\" className=\"label-login\">\r\n                        Email address\r\n                      </label>\r\n                      <input\r\n                        type=\"email\"\r\n                        name=\"emailForgotPass\"\r\n                        className=\"form-control custom-form\"\r\n                        id=\"inputEmail\"\r\n                        placeholder=\"Enter email\"\r\n                        autocomplete=\"off\"\r\n                        onChange={this.handleChangeSignUp.bind(this, \"emailForgotPass\")}\r\n                        value={this.state.fields[\"emailForgotPass\"]}\r\n                      />\r\n                      <span style={{color: \"red\", marginLeft: \"15px\", fontSize: \"13px\"}}>{this.state.errors[\"emailForgotPass\"]}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"container-btn\">\r\n                    <div className=\"row \">\r\n                      <button\r\n                        name=\"submit\"\r\n                        id=\"submit\"\r\n                        className=\"btn submit-btn\"\r\n                        type=\"submit\"\r\n                        value=\"Submit\"\r\n                      >Submit</button>\r\n                      <input\r\n                        name=\"login\"\r\n                        id=\"login\"\r\n                        className=\"btn login-btn\"\r\n                        type=\"button\"\r\n                        value=\"Back to Login\"\r\n                        onClick={() => this.displayLogIn()}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n\r\n              <p className=\"terms\">\r\n                By signing up, you agree to Book’s <br />\r\n                Terms and Conditions & Privacy Policy\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Auth);\r\n",["104","105"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\UserManagement\\UserManagement.js",["106","107","108","109"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\TopUp.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Components\\Datatable\\Action.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\Validate.js",["110","111","112","113","114"],"const Validate = (values) => {\r\n  const errors = {};\r\n  const password = {};  \r\n  const password2 = {};\r\n  if (!values.nominal) {\r\n    errors.nominal = 'Nominal Required';\r\n  }\r\n  // if (values.nominal!=values.nominalany){\r\n  //   values.nominal=values.nominalany\r\n  // }\r\n\r\n  if (!values.payment) {\r\n    errors.payment = 'Payment Required';\r\n  }\r\n  if (!values.confirmpayment) {\r\n    values.confirmpayment=values.payment;\r\n  }  \r\n\r\n  if (values.confirmpayment != values.payment) {\r\n    values.confirmpayment=values.payment;\r\n  }\r\n\r\n  if (!values.confirmnominal != values.nominal){\r\n    values.confirmnominal=values.nominal;\r\n  }\r\n  \r\n  if (!values.passwordconfirm){\r\n    errors.passwordconfirm = 'Password Required';\r\n  } \r\n  // else {\r\n  //   password = values.passwordconfirm\r\n  // }\r\n\r\n  if (!values.passwordconfirm2){\r\n    errors.passwordconfirm2 = 'Password Required';\r\n  } \r\n  // else{\r\n  //   password2 = values.passwordconfirm2\r\n  // }\r\n\r\n  if (values.passwordconfirm != values.passwordconfirm2) {\r\n    errors.passwordconfirm2='Password doesnt match';\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport default Validate;","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUpManagement\\TopUpManagement.js",["115","116","117","118","119","120","121","122","123","124"],"import React, { Component } from 'react';\r\nimport './TopUpManagement.style.css'\r\nimport Swal from 'sweetalert2';\r\nimport { Link } from 'react-router-dom'\r\nimport Card from '../TopUp/Card';\r\nimport \"bootstrap\";\r\nimport DataTable from \"../../../Components/Datatable/Table\";\r\nimport Action from \"../../../Components/Datatable/Action\";\r\nimport $ from 'jquery'\r\nimport Status from '../../../Components/Datatable/Status'\r\nimport Axios from 'axios';\r\n\r\nclass TopUpManagement extends Component {\r\n  constructor(props) {\r\n    super(props);      \r\n    this.state = {\r\n      fields: {},\r\n      errors: {},\r\n      data: [],\r\n      rows: [],\r\n      results: [],\r\n      result: [],\r\n      data: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getAll();\r\n  }\r\n\r\n  async getAll(){\r\n    const getData = await Axios.get('http://localhost:8080/top_up_management/getAll');\r\n    \r\n    const result_topup = getData.data;\r\n    console.log(result_topup);\r\n\r\n    this.setState({ data: result_topup });\r\n    this.fetchData();\r\n  }\r\n\r\n  getId = (id) => {\r\n    Axios.get('http://localhost:8080/top_up_management/getId/' + id)\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.setState({\r\n          nominal:res.data.nominal,\r\n          paymentMethod:res.data.paymentMethod\r\n        })   \r\n    Swal.fire({\r\n      icon: 'warning',\r\n      title: 'Warning!',\r\n      showCancelButton: true,\r\n      text: 'Are you sure want to confirm this?',\r\n    }).then((result) => {\r\n      /* Read more about isConfirmed, isDenied below */\r\n      if (result.isConfirmed) {         \r\n        Axios.put('http://localhost:8080/top_up/accept/' + id, res)\r\n        .then((response) => {\r\n          console.log(response);\r\n        })\r\n        Swal.fire({\r\n        icon: 'success',\r\n        title: 'Success!',\r\n        showCancelButton: false,\r\n        text:  'Confirm Top Up Already Success!',\r\n        }).then((result)=>{\r\n          if(result.isConfirmed){\r\n            window.location.reload(); \r\n          }\r\n        })    \r\n      }                    \r\n    }) \r\n      })\r\n  }\r\n\r\n  getId2 = (id) => {\r\n    Axios.get('http://localhost:8080/top_up_management/getId/' + id)\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.setState({\r\n          nominal:res.data.nominal,\r\n          paymentMethod:res.data.paymentMethod\r\n        })   \r\n    Swal.fire({\r\n      icon: 'warning',\r\n      title: 'Warning!',\r\n      showCancelButton: true,\r\n      text: 'Are you sure want to Cancel this?',\r\n    }).then((result) => {\r\n      /* Read more about isConfirmed, isDenied below */\r\n      if (result.isConfirmed) {         \r\n        Axios.put('http://localhost:8080/top_up/cancel/' + id, res)\r\n        .then((response) => {\r\n          console.log(response);\r\n        })\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Success!',\r\n          showCancelButton: false,\r\n          text:  'Cancel Top Up Already Success!',\r\n          }).then((result)=>{\r\n            if(result.isConfirmed){\r\n              window.location.reload(); \r\n            }\r\n          })\r\n      }             \r\n    }) \r\n      })\r\n  }\r\n\r\n  fetchData() {\r\n    let results = [];    \r\n    let result = this.state.data;\r\n    var no=1;\r\n    \r\n\r\n    result.forEach( topup => {\r\n      var row = [];\r\n      var actVal, statusVal = '';\r\n      if (topup.statusPayment == 'Success') {\r\n        actVal = <td className=\"text-center py-0 align-middle\">\r\n          <div className=\"btn-group btn-group-sm\">\r\n            -\r\n          </div>\r\n        </td>\r\n        statusVal = <Status type=\"success\" val=\"Success\" />\r\n      } else if (topup.statusPayment == 'Cancelled') {\r\n        actVal = <td className=\"text-center py-0 align-middle\">\r\n          <div className=\"btn-group btn-group-sm\">\r\n            -\r\n          </div>\r\n        </td>\r\n        statusVal = <Status type=\"danger\" val=\"Cancelled\" />\r\n      } else {\r\n        actVal = <td className=\"text-center py-0 align-middle\">\r\n          <div className=\"btn-group btn-group-sm\">\r\n            <Action type=\"success\" title=\"Edit\" icon=\"fas fa-check\" onClick={() => this.getId(topup.historyBalanceId)} />\r\n            <Action type=\"danger\" title=\"Delete\" icon=\"fas fa-ban\" onClick={() => this.getId2(topup.historyBalanceId)} />\r\n          </div>\r\n        </td>\r\n        statusVal = <Status type=\"warning\" val=\"Pending\" />\r\n      }\r\n      row.push(<td className=\"text-center\" >{no++}</td>);\r\n      row.push(<td className=\"text-center\" >{topup.historyBalanceId}</td>);\r\n      row.push(<td className=\"text-center\" >{actVal}</td>);\r\n      row.push(<td className=\"text-center\" >{topup.userName}</td>);\r\n      row.push(<td>{topup.nominal}</td>);\r\n      row.push(<td>{topup.paymentMethod}</td>);\r\n      row.push(<td className=\"text-center\" >{statusVal}</td>);\r\n      results.push(row);\r\n    });\r\n    this.setState({ rows: results });\r\n  }\r\n\r\n  handleValidation2() {\r\n    let fields = this.state.fields;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    //Password\r\n    if (!fields[\"PasswordConfirm\"]) {\r\n      formIsValid = false;\r\n      errors[\"PasswordConfirm\"] = \"Password cannot be empty\";\r\n    }\r\n\r\n    //Confrim Password\r\n    if (!fields[\"PasswordConfirm2\"]) {\r\n      formIsValid = false;\r\n      errors[\"PasswordConfirm2\"] = \"Password Confirm cannot be empty\";\r\n    }\r\n\r\n    if (fields[\"PasswordConfirm\"]!=fields[\"PasswordConfirm2\"]){\r\n      formIsValid = false;\r\n      errors[\"PasswordConfirm2\"] = \"Password don't Match\";\r\n    }\r\n\r\n    this.setState({ errors: errors });\r\n    return formIsValid;\r\n  }\r\n\r\n  contactSubmit2(e) {   \r\n    let fields = this.state.fields; \r\n    e.preventDefault();\r\n    if (this.handleValidation2()) {\r\n      $('#passwordModal').modal('hide');     \r\n      const topup = {\r\n        nominal: fields[\"Nominal\"],\r\n        paymentMethod: fields[\"Payment\"],\r\n      }\r\n      console.log(topup)\r\n      Axios.post('http://localhost:8080/top_up/post', topup)\r\n            .then((response) => {\r\n              console.log(response);\r\n            }) \r\n      Swal.fire({\r\n        title: \"Success Save Top Up Data!\",\r\n        text: \"You Already Success to save this data!\",\r\n        icon: \"success\",\r\n        buttons: true,    \r\n      })\r\n      .then((isConfirmed) => {\r\n        if (isConfirmed) {\r\n          window.location.reload();\r\n      } \r\n      })\r\n\r\n    } else {\r\n\r\n    }\r\n  }  \r\n  \r\n  handleChange2(field, e) {\r\n    let fields = this.state.fields;\r\n    fields[field] = e.target.value;\r\n    this.setState({ fields });\r\n  }\r\n\r\n  handleValidation() {\r\n    let fields = this.state.fields;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    //Name\r\n    if (!fields[\"Name\"]) {\r\n      formIsValid = false;\r\n      errors[\"Name\"] = \"Name cannot be empty\";\r\n    }\r\n\r\n    //Nominal\r\n    if (!fields[\"Nominal\"]) {\r\n      formIsValid = false;\r\n      errors[\"Nominal\"] = \"Nominal cannot be empty\";\r\n    }\r\n\r\n    //Payment\r\n    if (!fields[\"Payment\"]) {\r\n      formIsValid = false;\r\n      errors[\"Payment\"] = \"Payment cannot be empty\";\r\n    }\r\n\r\n    this.setState({ errors: errors });\r\n    return formIsValid;\r\n  }\r\n\r\n  contactSubmit(e) {\r\n    e.preventDefault();\r\n    if (this.handleValidation()) {\r\n      $('#topupModal').modal('hide');\r\n      $('#checkModal').modal('show');\r\n      // Swal.fire({\r\n      //   title: \"Success Save Top Up Data!\",\r\n      //   text: \"You Already Success to save this data!\",\r\n      //   icon: \"success\",\r\n      //   buttons: true,    \r\n      // })\r\n      // .then((isConfirmed) => {\r\n      //   if (isConfirmed) {\r\n      //     window.location.reload();\r\n      // } \r\n      // })\r\n\r\n    } else {\r\n\r\n    }\r\n  }  \r\n  \r\n  handleChange(field, e) {\r\n    let fields = this.state.fields;\r\n    fields[field] = e.target.value;\r\n    this.setState({ fields });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { rows } = this.state;\r\n    const headings = [\"No\", \"ID\", \"Action\", \"Username\", \"Total Nominal (Rp)\", \"Payment Method\", \"Status\"];\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        {/* Navbar */}\r\n\r\n        {/* Content Wrapper. Contains page content */}\r\n        <div className=\"content-wrapper\">\r\n          {/* Content Header (Page header) */}\r\n          {/* /.modal */}\r\n          <div className=\"modal fade\" id=\"cancelModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabesl\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                    Do you want to cancel?\r\n                  </h5>\r\n                  <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">×</span>\r\n                  </button>\r\n                </div>\r\n                <div className=\"modal-body\">Are you serious want to cancel?</div>\r\n                <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\">\r\n                    Close\r\n                  </button>\r\n                  <a className=\"btn btn-danger\" id=\"btn-delete\" href=\"#\" data-dismiss=\"modal\" data-toggle=\"modal\" data-target=\"#CancelModal\" onclick=\"cancelstatus()\">Cancel</a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal fade\" id=\"topupModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabesl\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                    Top Up\r\n                  </h5>\r\n                  <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">×</span>\r\n                  </button>\r\n                </div>\r\n                <form\r\n                role=\"form\"\r\n                id=\"addtopup\"\r\n                onSubmit={this.contactSubmit.bind(this)}\r\n              >\r\n                <div className=\"modal-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-5\">\r\n                      <label className=\"title-module\">Username:</label>\r\n                    </div>\r\n                    <div className=\"col-md-7\">\r\n                      <input type=\"text\" id=\"topup-user\" name=\"name\" className=\"form-control\" placeholder=\"Enter Username\" onChange={this.handleChange.bind(this, \"Name\")} value={this.state.fields[\"Name\"]} />\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"divider\" />\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-5\">\r\n                      <label className=\"title-module\">Total Nominal:</label>\r\n                    </div>\r\n                    <div className=\"col-lg-7\">\r\n                      <div className=\"form-group\">\r\n                        <div className=\"radio-group\">\r\n                          <div className=\"row row-cols-md-3\" style={{ textAlign: 'center' }}>\r\n                            <div className=\"icheck-primary\">\r\n                              <input type=\"radio\" name=\"option\" id=\"option1\" value=\"10000\"  onChange={this.handleChange.bind(this, \"Nominal\")} />\r\n                              <label htmlFor=\"option1\" style={{ fontWeight: 'normal' }}>Rp. 10000</label>\r\n                            </div>\r\n                            <div className=\"icheck-primary\">\r\n                              <input type=\"radio\" name=\"option\" id=\"option2\" value=\"20000\"  onChange={this.handleChange.bind(this, \"Nominal\")} />\r\n                              <label htmlFor=\"option2\" style={{ fontWeight: 'normal' }}>Rp. 20000</label>\r\n                            </div>\r\n                            <div className=\"icheck-primary\">\r\n                              <input type=\"radio\" name=\"option\" id=\"option3\" value=\"30000\"  onChange={this.handleChange.bind(this, \"Nominal\")} />\r\n                              <label htmlFor=\"option3\" style={{ fontWeight: 'normal' }}>Rp. 30000</label>\r\n                            </div>\r\n                            <div className=\"icheck-primary\">\r\n                              <input type=\"radio\" name=\"option\" id=\"option4\" value=\"50000\"  onChange={this.handleChange.bind(this, \"Nominal\")} />\r\n                              <label htmlFor=\"option4\" style={{ fontWeight: 'normal' }}>Rp. 50000</label>\r\n                            </div>\r\n                            <div className=\"icheck-primary\">\r\n                              <input type=\"radio\" name=\"option\" id=\"option5\" value=\"100000\"  onChange={this.handleChange.bind(this, \"Nominal\")} />\r\n                              <label htmlFor=\"option5\" style={{ fontWeight: 'normal' }}>Rp. 100000</label>\r\n                            </div>\r\n                            <div className=\"icheck-primary\">\r\n                              <input type=\"radio\" name=\"option\" id=\"option6\" value=\"200000\" onChange={this.handleChange.bind(this, \"Nominal\")} />\r\n                              <label htmlFor=\"option6\" style={{ fontWeight: 'normal' }}>Rp. 200000</label>\r\n                            </div>\r\n                          </div>\r\n                        </div>                        \r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"divider\" />\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-5\">\r\n                      <label className=\"title-module\">Payment Method:</label>\r\n                    </div>\r\n                    <div className=\"col-lg-7\">\r\n                      <div className=\"form-group\">\r\n                        <div className=\"radio-group method\">\r\n                          <div className=\"row row-cols-md-3\" style={{ textAlign: 'center' }}>\r\n                            <div className=\"icheck-primary\">\r\n                              <input type=\"radio\" name=\"option2\" id=\"option-method1\" Value=\"Credit Card\" onChange={this.handleChange.bind(this, \"Payment\")} />\r\n                              <label htmlFor=\"option1\" style={{ fontWeight: 'normal' }}>Credit Card</label>\r\n                            </div>\r\n                            <div className=\"icheck-primary\">\r\n                              <input type=\"radio\" name=\"option2\" id=\"option-method2\" Value=\"Paypall\" onChange={this.handleChange.bind(this, \"Payment\")} />\r\n                              <label htmlFor=\"option2\" style={{ fontWeight: 'normal' }}>Paypall</label>\r\n                            </div>\r\n                            <div className=\"icheck-primary\">\r\n                              <input type=\"radio\" name=\"option2\" id=\"option-method3\" Value=\"OVO\" onChange={this.handleChange.bind(this, \"Payment\")} />\r\n                              <label htmlFor=\"option3\" style={{ fontWeight: 'normal' }}>OVO</label>\r\n                            </div>\r\n                            <div className=\"icheck-primary gopay\">\r\n                              <input type=\"radio\" name=\"option2\" id=\"option-method4\" Value=\"Gopay\" onChange={this.handleChange.bind(this, \"Payment\")}  />\r\n                              <label htmlFor=\"option4\" style={{ fontWeight: 'normal' }}>Gopay</label>\r\n                            </div>\r\n                            <div className=\"icheck-primary dana\">\r\n                              <input type=\"radio\" name=\"option2\" id=\"option-method5\" Value=\"Dana\" onChange={this.handleChange.bind(this, \"Payment\")} />\r\n                              <label htmlFor=\"option5\" style={{ fontWeight: 'normal' }}>Dana</label>\r\n                            </div>\r\n                            <div className=\"icheck-primary cash\">\r\n                              <input type=\"radio\" name=\"option2\" id=\"option-method6\" Value=\"Cash\" onChange={this.handleChange.bind(this, \"Payment\")}  />\r\n                              <label htmlFor=\"option6\" style={{ fontWeight: 'normal' }}>Cash</label>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\">\r\n                    Close\r\n                  </button>\r\n                  <button className=\"btn btn-primary\" id=\"btn-delete\" type=\"submit\" >Next</button>\r\n                </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal fade\" id=\"checkModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabesl\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                    Check Data Top Up\r\n                  </h5>\r\n                  <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">×</span>\r\n                  </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-5\">\r\n                      <label className=\"title-module\">Username:</label>\r\n                    </div>\r\n                    <div className=\"col-md-7\">\r\n                      <input type=\"text\" id=\"checkuser\" name=\"name\" className=\"form-control\" value={this.state.fields[\"Name\"]} readOnly placeholder />\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"divider\" />\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-5\">\r\n                      <label className=\"title-module\">Total Nominal:</label>\r\n                    </div>\r\n                    <div className=\"col-md-7\">\r\n                      <input type=\"text\" id=\"checknominal\" name=\"name\" className=\"form-control\" value={this.state.fields[\"Nominal\"]} readOnly placeholder />\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"divider\" />\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-5\">\r\n                      <label className=\"title-module\">Payment Method:</label>\r\n                    </div>\r\n                    <div className=\"col-md-7\">\r\n                      <input type=\"text\" id=\"checkmethod\" name=\"name\" className=\"form-control\" value={this.state.fields[\"Payment\"]} readOnly placeholder />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\" data-target=\"#topupModal\" data-toggle=\"modal\">\r\n                    Back\r\n                  </button>\r\n                  <a className=\"btn btn-primary\" id=\"btn-delete\" href=\"#\" data-dismiss=\"modal\" data-toggle=\"modal\" data-target=\"#passwordModal\">Next</a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal fade\" id=\"passwordModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabesl\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                    Password\r\n                  </h5>\r\n                  <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">×</span>\r\n                  </button>\r\n                </div>\r\n                <form\r\n                role=\"form\"\r\n                id=\"addtopup\"\r\n                onSubmit={this.contactSubmit2.bind(this)}\r\n              >\r\n                <div className=\"modal-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-5\">\r\n                      <label className=\"title-module\">Password:</label>\r\n                    </div>\r\n                    <div className=\"col-md-7\">\r\n                      <input type=\"password\" id=\"passwordconfirm\" name=\"name\" className=\"form-control\" placeholder=\"Password\" onChange={this.handleChange2.bind(this, \"PasswordConfirm\")} value={this.state.fields[\"PasswordConfirm\"]} />\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"divider\" />\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-5\">\r\n                      <label className=\"title-module\">Confirm Password:</label>\r\n                    </div>\r\n                    <div className=\"col-md-7\">\r\n                      <input type=\"password\" id=\"passwordconfirm2\" name=\"name\" className=\"form-control\" placeholder=\"Confirm Password\" onChange={this.handleChange2.bind(this, \"PasswordConfirm2\")} value={this.state.fields[\"PasswordConfirm2\"]} />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\" data-toggle=\"modal\" data-target=\"#checkModal\">\r\n                    Back\r\n                  </button>\r\n                  <button className=\"btn btn-success\" id=\"btn-delete\" type=\"submit\">Confirm</button>\r\n                </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Main content */}\r\n          \r\n          <section className=\"content-header\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row mb-2\">\r\n                <div className=\"col-sm-6\">\r\n                  <h3>Top Up Management</h3>\r\n                </div>\r\n                <div className=\"col-sm-6\">\r\n                  <ol className=\"breadcrumb float-sm-right\">\r\n                    <li className=\"breadcrumb-item\">\r\n                      <a href='/'>Home</a>\r\n                    </li>\r\n                    <li className=\"breadcrumb-item active\">Top Up Management</li>\r\n                  </ol>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* <!-- /.container-fluid --> */}\r\n          </section>\r\n\r\n          <section className=\"content pdg-btm\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12 ctm-responsive\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary add-btn\"\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#topupModal\"\r\n                        style={{ float: \"right\" }}\r\n                      >\r\n                        <i className=\"nav-icon fas fa-plus\"></i>\r\n                      Add Top Up\r\n                    </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <DataTable headings={headings} rows={rows} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          {/* /.content */}\r\n        </div>\r\n        {/* /.content-wrapper */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TopUpManagement;","C:\\Users\\ASUS\\maxwell-library-react\\src\\App.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Components\\Datatable\\Status.js",[],{"ruleId":"125","severity":1,"message":"126","line":104,"column":27,"nodeType":"127","endLine":104,"endColumn":75},{"ruleId":"128","severity":1,"message":"129","line":217,"column":27,"nodeType":"127","endLine":217,"endColumn":74},{"ruleId":"125","severity":1,"message":"126","line":249,"column":27,"nodeType":"127","endLine":249,"endColumn":75},{"ruleId":"125","severity":1,"message":"126","line":397,"column":27,"nodeType":"127","endLine":397,"endColumn":75},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":33,"column":17,"nodeType":"127","endLine":33,"endColumn":112},{"ruleId":"128","severity":1,"message":"136","line":74,"column":17,"nodeType":"127","endLine":74,"endColumn":50},{"ruleId":"130","replacedBy":"137"},{"ruleId":"132","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":47,"column":28,"nodeType":"141","messageId":"142","endLine":47,"endColumn":30},{"ruleId":"125","severity":1,"message":"126","line":67,"column":20,"nodeType":"127","endLine":67,"endColumn":132},{"ruleId":"143","severity":1,"message":"144","line":186,"column":11,"nodeType":"127","endLine":186,"endColumn":88},{"ruleId":"143","severity":1,"message":"144","line":246,"column":11,"nodeType":"127","endLine":246,"endColumn":48},{"ruleId":"125","severity":1,"message":"126","line":317,"column":13,"nodeType":"127","endLine":317,"endColumn":50},{"ruleId":"145","severity":1,"message":"146","line":13,"column":11,"nodeType":"147","messageId":"148","endLine":13,"endColumn":22},{"ruleId":"145","severity":1,"message":"149","line":13,"column":38,"nodeType":"147","messageId":"148","endLine":13,"endColumn":46},{"ruleId":"145","severity":1,"message":"150","line":13,"column":48,"nodeType":"147","messageId":"148","endLine":13,"endColumn":60},{"ruleId":"145","severity":1,"message":"151","line":13,"column":62,"nodeType":"147","messageId":"148","endLine":13,"endColumn":72},{"ruleId":"145","severity":1,"message":"152","line":4,"column":7,"nodeType":"147","messageId":"148","endLine":4,"endColumn":12},{"ruleId":"145","severity":1,"message":"153","line":5,"column":10,"nodeType":"147","messageId":"148","endLine":5,"endColumn":14},{"ruleId":"145","severity":1,"message":"154","line":5,"column":16,"nodeType":"147","messageId":"148","endLine":5,"endColumn":24},{"ruleId":"155","severity":1,"message":"156","line":44,"column":91,"nodeType":"157","messageId":"158","endLine":44,"endColumn":93},{"ruleId":"155","severity":1,"message":"156","line":82,"column":91,"nodeType":"157","messageId":"158","endLine":82,"endColumn":93},{"ruleId":"155","severity":1,"message":"156","line":118,"column":95,"nodeType":"157","messageId":"158","endLine":118,"endColumn":97},{"ruleId":"134","severity":1,"message":"135","line":219,"column":17,"nodeType":"127","endLine":219,"endColumn":81},{"ruleId":"143","severity":1,"message":"144","line":316,"column":17,"nodeType":"127","endLine":316,"endColumn":53},{"ruleId":"130","replacedBy":"159"},{"ruleId":"132","replacedBy":"160"},{"ruleId":"139","severity":1,"message":"140","line":49,"column":23,"nodeType":"141","messageId":"142","endLine":49,"endColumn":25},{"ruleId":"128","severity":1,"message":"136","line":64,"column":15,"nodeType":"127","endLine":64,"endColumn":53},{"ruleId":"128","severity":1,"message":"136","line":67,"column":15,"nodeType":"127","endLine":67,"endColumn":53},{"ruleId":"155","severity":1,"message":"156","line":74,"column":22,"nodeType":"157","messageId":"158","endLine":74,"endColumn":24},{"ruleId":"145","severity":1,"message":"161","line":3,"column":9,"nodeType":"147","messageId":"148","endLine":3,"endColumn":17},{"ruleId":"145","severity":1,"message":"162","line":4,"column":9,"nodeType":"147","messageId":"148","endLine":4,"endColumn":18},{"ruleId":"155","severity":1,"message":"163","line":19,"column":29,"nodeType":"157","messageId":"158","endLine":19,"endColumn":31},{"ruleId":"155","severity":1,"message":"163","line":23,"column":30,"nodeType":"157","messageId":"158","endLine":23,"endColumn":32},{"ruleId":"155","severity":1,"message":"163","line":41,"column":30,"nodeType":"157","messageId":"158","endLine":41,"endColumn":32},{"ruleId":"145","severity":1,"message":"153","line":4,"column":10,"nodeType":"147","messageId":"148","endLine":4,"endColumn":14},{"ruleId":"145","severity":1,"message":"164","line":5,"column":8,"nodeType":"147","messageId":"148","endLine":5,"endColumn":12},{"ruleId":"165","severity":1,"message":"166","line":23,"column":7,"nodeType":"167","messageId":"158","endLine":23,"endColumn":11},{"ruleId":"155","severity":1,"message":"156","line":119,"column":31,"nodeType":"157","messageId":"158","endLine":119,"endColumn":33},{"ruleId":"155","severity":1,"message":"156","line":126,"column":38,"nodeType":"157","messageId":"158","endLine":126,"endColumn":40},{"ruleId":"155","severity":1,"message":"163","line":171,"column":34,"nodeType":"157","messageId":"158","endLine":171,"endColumn":36},{"ruleId":"128","severity":1,"message":"136","line":301,"column":19,"nodeType":"127","endLine":301,"endColumn":167},{"ruleId":"143","severity":1,"message":"144","line":317,"column":17,"nodeType":"127","endLine":321,"endColumn":16},{"ruleId":"128","severity":1,"message":"136","line":462,"column":19,"nodeType":"127","endLine":462,"endColumn":145},{"ruleId":"143","severity":1,"message":"144","line":478,"column":17,"nodeType":"127","endLine":482,"endColumn":16},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-native-reassign",["168"],"no-negated-in-lhs",["169"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["168"],["169"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","no-unused-vars","'handlekeyup' is assigned a value but never used.","Identifier","unusedVar","'pristine' is assigned a value but never used.","'previousPage' is assigned a value but never used.","'submitting' is assigned a value but never used.","'sleep' is assigned a value but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["168"],["169"],"'password' is assigned a value but never used.","'password2' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'Card' is defined but never used.","no-dupe-keys","Duplicate key 'data'.","ObjectExpression","no-global-assign","no-unsafe-negation"]