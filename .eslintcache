[{"C:\\Users\\ASUS\\maxwell-library-react\\src\\reportWebVitals.js":"1","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\NavBar\\NavBar.js":"2","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Footer\\Footer.js":"3","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Profile\\AdminProfile.js":"4","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Payment\\PaymentInvoicePrint.js":"5","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Donation\\Donation.js":"6","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Payment\\PaymentInvoicePrintPaid.js":"7","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\RentManagement\\RentManagement.js":"8","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\SlideShowManagement\\SlideShowManagement.js":"9","C:\\Users\\ASUS\\maxwell-library-react\\src\\Components\\Datatable\\Table.js":"10","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\TopUp3.js":"11","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\Validate.js":"12","C:\\Users\\ASUS\\maxwell-library-react\\src\\Navigations\\AuthRoute.js":"13","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUpManagement\\TopUpManagement.js":"14","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\SideBar\\SideBar.js":"15","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\BookManagement\\BookDetail.js":"16","C:\\Users\\ASUS\\maxwell-library-react\\src\\index.js":"17","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Profile\\Profile.js":"18","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\DetailInvoice\\DetailInvoice.js":"19","C:\\Users\\ASUS\\maxwell-library-react\\src\\Components\\Datatable\\Status.js":"20","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\TopUp2.js":"21","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\FormInput.js":"22","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\BookManagement\\BookManagement.js":"23","C:\\Users\\ASUS\\maxwell-library-react\\src\\Navigations\\MainNavigations.js":"24","C:\\Users\\ASUS\\maxwell-library-react\\src\\App.js":"25","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Payment\\Payment.js":"26","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Author\\Author.js":"27","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\CategoryManagement\\CategoryManagement.js":"28","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\LogManagement\\LogManagement.js":"29"},{"size":375,"mtime":1606198920915,"results":"30","hashOfConfig":"31"},{"size":3815,"mtime":1610092736195,"results":"32","hashOfConfig":"31"},{"size":519,"mtime":1606198920912,"results":"33","hashOfConfig":"31"},{"size":9745,"mtime":1606392264711,"results":"34","hashOfConfig":"31"},{"size":4202,"mtime":1606455043006,"results":"35","hashOfConfig":"31"},{"size":11011,"mtime":1609912342780,"results":"36","hashOfConfig":"31"},{"size":4270,"mtime":1606455043006,"results":"37","hashOfConfig":"31"},{"size":8884,"mtime":1610259575662,"results":"38","hashOfConfig":"31"},{"size":19342,"mtime":1610259575662,"results":"39","hashOfConfig":"31"},{"size":1681,"mtime":1609843597897,"results":"40","hashOfConfig":"31"},{"size":2330,"mtime":1606455043013,"results":"41","hashOfConfig":"31"},{"size":1069,"mtime":1609905735501,"results":"42","hashOfConfig":"31"},{"size":521,"mtime":1609994094142,"results":"43","hashOfConfig":"31"},{"size":28064,"mtime":1610357014710,"results":"44","hashOfConfig":"31"},{"size":10597,"mtime":1610336712067,"results":"45","hashOfConfig":"31"},{"size":19083,"mtime":1610266580658,"results":"46","hashOfConfig":"31"},{"size":937,"mtime":1609682650008,"results":"47","hashOfConfig":"31"},{"size":13392,"mtime":1610259575661,"results":"48","hashOfConfig":"31"},{"size":10396,"mtime":1610259575658,"results":"49","hashOfConfig":"31"},{"size":142,"mtime":1606362277693,"results":"50","hashOfConfig":"31"},{"size":4885,"mtime":1609910658222,"results":"51","hashOfConfig":"31"},{"size":574,"mtime":1609910917430,"results":"52","hashOfConfig":"31"},{"size":30919,"mtime":1610334703554,"results":"53","hashOfConfig":"31"},{"size":7972,"mtime":1610336623946,"results":"54","hashOfConfig":"31"},{"size":282,"mtime":1609682650000,"results":"55","hashOfConfig":"31"},{"size":16240,"mtime":1610259575660,"results":"56","hashOfConfig":"31"},{"size":14957,"mtime":1610348076649,"results":"57","hashOfConfig":"31"},{"size":14055,"mtime":1610345301789,"results":"58","hashOfConfig":"31"},{"size":2968,"mtime":1610357406686,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11ui09a",{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},"C:\\Users\\ASUS\\maxwell-library-react\\src\\reportWebVitals.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\NavBar\\NavBar.js",["131","132","133","134","135"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Footer\\Footer.js",[],["136","137"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Profile\\AdminProfile.js",["138","139","140","141","142","143","144","145"],"import React, { Component, Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport avatarUser from '../../../Assets/Media/admin.png'\r\nimport swal from 'sweetalert'\r\n\r\n\r\nclass Profile extends Component {\r\n\r\n    displayEditForm() {\r\n        const editForm = document.querySelector('#container-editform');\r\n        editForm.style.display = 'block';\r\n\r\n    }\r\n\r\n    hiddenEditForm(){\r\n        const editForm = document.querySelector('#container-editform');\r\n        editForm.style.display = 'none';\r\n    }\r\n\r\n    submitEditProfile() {\r\n        const editButton = document.querySelector('button.edit-profile');\r\n        const editForm = document.querySelector('#container-editform');\r\n        const cancelForm = document.querySelector('.btn-editform button');\r\n        \r\n        editForm.style.display = 'none';\r\n    \r\n        var firstName = document.getElementById('user-firstname').value;\r\n        var lastName = document.getElementById('user-lastname').value;\r\n        var dateOfBirth = document.getElementById('date-birth').value;\r\n        var emailUser = document.getElementById('user-email').value;\r\n        var addressUser = document.getElementById('user-address').value;\r\n        var phoneNumber = document.getElementById('user-number').value;\r\n    \r\n        if (firstName == '' || lastName == '' || dateOfBirth == '' || emailUser == '' || addressUser == '' || phoneNumber == ''){\r\n                swal(\r\n                    'Submit Failed !',\r\n                    'You should fill in the blank',\r\n                    'error'\r\n                );\r\n                editForm.style.display = 'none';\r\n            }else{\r\n                swal(\r\n                    'Submitted !',\r\n                    'You clicked the button!',\r\n                    'success'\r\n                );\r\n    \r\n                document.getElementById('firstname').innerHTML = firstName;\r\n                document.getElementById('lastname').innerHTML = lastName;\r\n                document.getElementById('birthday').innerHTML = dateOfBirth;\r\n                document.getElementById('email').innerHTML = emailUser;\r\n                document.getElementById('address').innerHTML = addressUser;\r\n                document.getElementById('phonenumber').innerHTML = phoneNumber;\r\n                \r\n            }\r\n    \r\n    }\r\n    render(){\r\n        return(\r\n            <Fragment>\r\n            <div className=\"content-wrapper\">\r\n                <section className=\"content-user\">\r\n                    <div className=\"container-profile\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <div className=\"profile-account\">\r\n                                    <div className=\"picture\">\r\n                                        <img src={avatarUser} alt=\"Admin Profile\" width='300' height='300'/>\r\n                                    </div>\r\n                                    <button \r\n                                    type=\"button\" \r\n                                    className=\"btn btn-primary edit-profile\"\r\n                                    name=\"editProfile\"\r\n                                    onClick={() => this.displayEditForm()}\r\n                                    >\r\n                                    Edit Profile\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        \r\n                        </div>\r\n                        <h1 className=\"title-profile\">\r\n                        My Profile\r\n                        </h1>\r\n                        <div className=\"data-user\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-6\">\r\n                                <div className=\"data\">\r\n                                    <h5 >Full Name</h5>\r\n                                    <span id=\"firstname\">Admin</span>\r\n                                    <hr/>\r\n                                </div>\r\n                                <div className=\"data\">\r\n                                    <h5 >ID Admin</h5>\r\n                                    <span id=\"lastname\">01</span>\r\n                                    <hr/>\r\n                                </div>\r\n                                <div className=\"data\">\r\n                                    <h5>Date of Birth</h5>\r\n                                    <span id=\"birthday\">19/06/2020</span>\r\n                                    <hr/>\r\n                                </div>\r\n                                <div className=\"data\">\r\n                                    <h5>Address</h5>\r\n                                    <span id=\"address\">Indonesia</span>\r\n                                    <hr/>\r\n                                </div>\r\n                                </div>\r\n                                <div className=\"col-lg-6\">\r\n                                <div className=\"data\">\r\n                                    <h5>Email</h5>\r\n                                    <span id=\"email\">example@gmail.com</span>\r\n                                    <hr/>\r\n                                </div>\r\n                                <div className=\"data\">\r\n                                    <h5 >Phone Number</h5>\r\n                                    <span id=\"phonenumber\">+628123456789</span>\r\n                                    <hr/>\r\n                                </div>\r\n                                <div className=\"data\">\r\n                                    {/* <a href=\"change_password.html\"><strong><u>Change Password</u></strong></a> */}\r\n                                    <Link to='/ChangePassword'>Change Password</Link>\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>  \r\n                    </div>\r\n                </section>\r\n\r\n                {/* Edit Form  */}\r\n                <section className=\"padding-editform\">\r\n                <div id=\"container-editform\">\r\n                <h3 style={{textAlign: 'center'}}>Edit Admin Profile</h3>\r\n                    <div className=\"form-item\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-8\">\r\n                        <label className=\"input-title\">Full Name</label>\r\n                        </div>\r\n                        <div className=\"col-lg-12\">\r\n                        <input className=\"input-value\" id=\"user-firstname\" type=\"text\" name=\"user-firstname\"/>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-item\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-8\">\r\n                        <label className=\"input-title\">ID Admin</label>\r\n                        </div>\r\n                        <div className=\"col-lg-12\">\r\n                        <input className=\"input-value\" id=\"user-lastname\" type=\"text\" name=\"user-lastname\"/>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-item\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-8\">\r\n                        <label className=\"input-title\">Date of Birth</label>\r\n                        </div>\r\n                        <div className=\"col-lg-12\">\r\n                        <input className=\"input-value\" id=\"date-birth\" type=\"text\" name=\"date-birth\" placeholder=\"dd/mm/yyyy\"/>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-item\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-8\">\r\n                        <label className=\"input-title\">Address</label>\r\n                        </div>\r\n                        <div className=\"col-lg-12\">\r\n                        <input className=\"input-value\" id=\"user-address\" type=\"text\" name=\"user-address\"/>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-item\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-8\">\r\n                        <label className=\"input-title\">Email</label>\r\n                        </div>\r\n                        <div className=\"col-lg-12\">\r\n                        <input className=\"input-value\" id=\"user-email\" type=\"email\" name=\"user-email\" placeholder=\"example@gmail.com\"/>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-item\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-8\">\r\n                        <label className=\"input-title\">Phone Number</label>\r\n                        </div>\r\n                        <div className=\"col-lg-12\">\r\n                        <input className=\"input-value\" id=\"user-number\" type=\"text\" name=\"user-number\" placeholder=\"+62-812-345-6789\"/>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"btn-editform\">\r\n                    <input className=\"btn btn-primary mr-2\" type=\"submit\" value=\"Submit\" onClick={()=> this.submitEditProfile()}/>\r\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={() => this.hiddenEditForm()}>Close</button>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            </div>\r\n            </Fragment>\r\n\r\n        )\r\n    }\r\n}\r\nexport default Profile","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Payment\\PaymentInvoicePrint.js",["146"],"import React, { Component } from \"react\";\r\nimport MaxIcon from '../../Auth/Assets/Images/bookshelf.png'\r\n\r\nclass PaymentInvoicePrint extends Component {\r\n  \r\n  componentDidMount() {\r\n    window.addEventListener(\"load\", window.print());\r\n  }  \r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <section className=\"invoice\">\r\n          {/* <!-- title row --> */}\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <h4>\r\n                <img\r\n                  src={MaxIcon}\r\n                  style={{height: \"2rem\"}}\r\n                />{\" \"}\r\n                Maxwell Library\r\n                <small className=\"float-right\">Date: 19/11/2020</small>\r\n              </h4>\r\n            </div>\r\n            {/* <!-- /.col --> */}\r\n          </div>\r\n          {/* <!-- info row --> */}\r\n          <div className=\"row invoice-info\">\r\n            <div className=\"col-sm-4 invoice-col\">\r\n              From\r\n              <address>\r\n                <strong>Maxwell Library</strong>\r\n                <br />\r\n                795 Folsom Ave, Suite 600\r\n                <br />\r\n                San Francisco, CA 94107\r\n                <br />\r\n                Phone: (804) 123-5432\r\n                <br />\r\n                Email: maxwell@library.com\r\n              </address>\r\n            </div>\r\n            {/* <!-- /.col --> */}\r\n            <div className=\"col-sm-4 invoice-col\">\r\n              To\r\n              <address>\r\n                <strong>Niki Zefanya</strong>\r\n                <br />\r\n                795 Folsom Ave, Suite 600\r\n                <br />\r\n                San Francisco, CA 94107\r\n                <br />\r\n                Phone: (555) 539-1037\r\n                <br />\r\n                Email: john.doe@example.com\r\n              </address>\r\n            </div>\r\n            {/* <!-- /.col --> */}\r\n            <div className=\"col-sm-4 invoice-col\">\r\n              <b>Invoice #007612</b>\r\n              <br />\r\n            </div>\r\n            {/* <!-- /.col --> */}\r\n          </div>\r\n          {/* <!-- /.row --> */}\r\n\r\n          {/* <!-- Table row --> */}\r\n          <div className=\"row\">\r\n            <div className=\"col-12 table-responsive\">\r\n              <table className=\"table table-striped\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>No.</th>\r\n                    <th>Book Title</th>\r\n                    <th>Borrowed On</th>\r\n                    <th>Due On</th>\r\n                    <th>Late By</th>\r\n                    <th>Fine Amount</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>1</td>\r\n                    <td>Dilan 1990</td>\r\n                    <td>16/11/2020</td>\r\n                    <td>18/11/2020</td>\r\n                    <td>2 Days</td>\r\n                    <td>Rp. 10.000</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>2</td>\r\n                    <td>Harry Potter</td>\r\n                    <td>16/11/2020</td>\r\n                    <td>18/11/2020</td>\r\n                    <td>2 Days</td>\r\n                    <td>Rp. 10.000</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            {/* <!-- /.col --> */}\r\n          </div>\r\n          {/* <!-- /.row --> */}\r\n\r\n          <div className=\"row\">\r\n            {/* <!-- accepted payments column --> */}\r\n            <div className=\"col-6\"></div>\r\n            {/* <!-- /.col --> */}\r\n            <div className=\"col-6\">\r\n              <p className=\"lead\" style={{float:\"right\"}}>\r\n                Amount Due 25/11/2020\r\n              </p>\r\n\r\n              <div className=\"table-responsive\">\r\n                <table className=\"table\">\r\n                  <tr>\r\n                    <th style={{width:\"50%\"}}>Subtotal:</th>\r\n                    <td>Rp. 20.000</td>\r\n                  </tr>\r\n                </table>\r\n              </div>\r\n            </div>\r\n            {/* <!-- /.col --> */}\r\n          </div>\r\n          {/* <!-- /.row --> */}\r\n\r\n          {/* <!-- /.row --> */}\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PaymentInvoicePrint;\r\n","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Donation\\Donation.js",["147","148"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Payment\\PaymentInvoicePrintPaid.js",["149"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\RentManagement\\RentManagement.js",["150","151"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\SlideShowManagement\\SlideShowManagement.js",["152","153","154","155"],"import React, { Component } from \"react\";\r\nimport SuccessImg from '../../../Assets/Media/check.png'\r\nimport DataTable from \"../../../Components/Datatable/Table\";\r\nimport Action from \"../../../Components/Datatable/Action\";\r\nimport $ from 'jquery'\r\nimport 'bootstrap'\r\nimport Swal from 'sweetalert2'\r\nimport Axios from '../../../Instances/axios-instances';\r\n\r\nclass SlideShowManagement extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n      fields: {},\r\n      errors: {},\r\n      data: [],\r\n      rows: [],\r\n      results: [],\r\n      isLoading : true,\r\n      statusShow : \"\",\r\n      chooseFile: \"Choose File\",\r\n      uploadImage : \"\"\r\n    };\r\n  }\r\n\r\n  //METHOD TAMBAHAN GET POST UPDATE DELETE  \r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  async fetchData() {\r\n    $('#example1').DataTable().destroy();\r\n    await Axios.get('slideshow/get-all-slideshow')\r\n      .then((fetchedData)=> { \r\n        console.log(fetchedData);\r\n        const resultSlideShow = fetchedData.data;\r\n        this.setState({ data : resultSlideShow });\r\n        const results = [];\r\n        const result = this.state.data;\r\n        var number = 1;\r\n        \r\n        result.map((slideshow) => {\r\n              var row = [];\r\n        \r\n              row.push(<td className=\"text-center\">{number++}</td>);\r\n\r\n              //UNTUK TOMBOL EDIT DAN DELETE\r\n              row.push(\r\n                <td className=\"text-center py-0 align-middle\">\r\n                  <div className=\"btn-group btn-group-sm\">\r\n                    <Action type=\"success\" title=\"Edit\" icon=\"pen\" dataToggle=\"modal\" dataTarget=\"#modal-edit\" onClick={() => this.getSlideShowById(slideshow.slideShowId)}/>\r\n                    <Action type=\"danger\" title=\"Delete\" icon=\"trash\" dataToggle=\"modal\" dataTarget=\"#modal-delete\" onClick={() => this.getSlideShowById(slideshow.slideShowId)}/>\r\n                  </div>\r\n                </td>\r\n              );\r\n\r\n              //UNTUK OPTION ACTIVE DAN INACTIVE\r\n              row.push(\r\n                <td className=\"text-center py-0 align-middle\">\r\n                <select name=\"statusShow\" id=\"dropdown\" className=\"custom-select\"\r\n                  value = {slideshow.statusShow === true ? \"1\" : \"0\"}\r\n                  onChange={(e) => this.handleDropdownChange(slideshow.slideShowId, e)}>\r\n                    <option value='1'>Active</option>\r\n                    <option value='0'>Inactive</option>\r\n                  </select>\r\n                </td>\r\n              );\r\n\r\n              //UNTUK MENAMPILKAN JUDUL\r\n              row.push(\r\n                <td>{slideshow.title}</td>\r\n              );\r\n\r\n              //UNTUK MENAMPILKAN SUBJUDUL\r\n              row.push(\r\n                <td>{slideshow.subTitle}</td>\r\n              );\r\n\r\n              //UNTUK MENAMPILKAN GAMBAR\r\n              row.push(\r\n                <td><img src={slideshow.img} alt =\"gambar buku\" \r\n                style={{width: \"10rem\", display: \"block\", marginLeft: \"auto\", marginRight: \"auto\"}}/>\r\n                </td>\r\n              );\r\n              results.push(row)\r\n            })\r\n\r\n            this.setState({ rows: results });\r\n            $(\"#example1\").DataTable({\r\n              responsive: true,\r\n              autoWidth: false,\r\n          });\r\n        });\r\n  }\r\n\r\n \r\n  //FUNGSI TOMBOL SUBMIT PADA MODAL ADD SLIDESHOW\r\n  submitSlideShow = () => {\r\n    const slideshow = {\r\n        title : this.state.title,\r\n        subTitle : this.state.subTitle,\r\n        img : this.state.uploadImage\r\n      };\r\n\r\n    Axios.post('slideshow/add-slideshow', slideshow)\r\n      .then((response) => {\r\n        console.log(response)\r\n      })\r\n   \r\n    $('#example1').DataTable({\r\n      responsive: true,\r\n      autoWidth: false,\r\n    });\r\n  }\r\n  \r\n  //VALIDASI UNTUK ADD SLIDESHOW\r\n  handleValidation() {\r\n    let fields = this.state.fields;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    //Title\r\n    if (!fields[\"slideshowTitle\"]) {\r\n      formIsValid = false;\r\n      errors[\"slideshowTitle\"] = \"Slideshow Title cannot be empty\";\r\n    }\r\n\r\n    //Subtitle\r\n    if (!fields[\"slideshowSubTitle\"]) {\r\n      formIsValid = false;\r\n      errors[\"slideshowSubTitle\"] = \"Slideshow Subtitle cannot be empty\";\r\n    }\r\n\r\n    // //Image\r\n    // if (!fields[\"slideshowImage\"]) {\r\n    //   formIsValid = false;\r\n    //   errors[\"slideshowImage\"] = \"Image cannot be empty\";\r\n    // }\r\n\r\n    this.setState({ errors: errors });\r\n    return formIsValid;\r\n  }\r\n\r\n  //FUNGSI UNTUK TOMBOL SUMBIT SAAT ADD-SLIDESHOW DITEKAN\r\n  contactSubmit(e){\r\n    e.preventDefault();\r\n    const fields = this.state.fields;\r\n    if (this.handleValidation()) {\r\n      $('#modal-add').modal('toggle');\r\n\r\n      const slideshow = {\r\n        title : fields[\"slideshowTitle\"], \r\n        subTitle : fields[\"slideshowSubTitle\"],\r\n        img : this.state.uploadImage\r\n      }\r\n      console.log(slideshow)\r\n\r\n      let user = JSON.parse(localStorage.getItem('user'))\r\n      const userToken = user.token;\r\n      console.log(userToken);\r\n\r\n      const config = {\r\n        headers : { Authorization : `Bearer ${userToken}`}\r\n      }\r\n      Axios.post('slideshow/add-slideshow', slideshow, config)\r\n          .then((response) => {\r\n            console.log(response)\r\n          })\r\n      Swal.fire({\r\n        icon: 'success',\r\n        title: 'Success',\r\n        text: 'Your Data has been Added',\r\n        confirmButtonText: `OK`\r\n      }).then((result) => {\r\n          if(result.isConfirmed) {\r\n            console.log(result);\r\n            window.location.reload();\r\n          }\r\n      });\r\n      } else {\r\n        Swal.fire({\r\n          icon: 'warning',\r\n          title: 'Sorry !',\r\n          text: 'You Must Fill The Requirement !',\r\n          confirmButtonText: `OK`\r\n        }).then((result) => {\r\n            if(result.isConfirmed) {\r\n              console.log(result);\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  //METHOD UNTUK GET-BY-ID\r\n  getSlideShowById = (id) => {\r\n    let user = JSON.parse( localStorage.getItem('user'))\r\n    const userToken = user.token;\r\n    console.log(userToken);\r\n\r\n    const config = {\r\n      headers : { Authorization : `Bearer ${userToken}`}\r\n    }\r\n\r\n    Axios.get('slideshow/get-slideshow-byId/' + id, config)\r\n      .then((response) => {\r\n        console.log(response.data.data);\r\n        this.setState({\r\n          slideShowId : response.data.data.slideShowId,\r\n          title : response.data.data.title,\r\n          subTitle : response.data.data.subTitle,\r\n          img : response.data.data.uploadImage\r\n        })\r\n      })\r\n  }\r\n\r\n  //METHOD UNTUK UPDATE\r\n  editSlideShow = (id) => {\r\n    \r\n    const slideshow = {\r\n      title : this.state.title,\r\n      subTitle : this.state.subTitle,\r\n      img : this.state.uploadImage\r\n    }\r\n    console.log(slideshow);\r\n\r\n    let user = JSON.parse(localStorage.getItem('user'))\r\n      const userToken = user.token;\r\n      console.log(userToken);\r\n\r\n      const config = {\r\n        headers : { Authorization : `Bearer ${userToken}`}\r\n      }\r\n\r\n    Axios.put('slideshow/update-slideshow/' + id, slideshow, config)\r\n      .then((response) => {\r\n        console.log(response);\r\n    }).then($(\"#modal-edit\").modal(\"toggle\"));\r\n      Swal.fire({\r\n        icon: 'success',\r\n        title: 'Success',\r\n        text: 'Your Data has been Update',\r\n        confirmButtonText: `OK`\r\n      }).then((result) => {\r\n          if(result.isConfirmed) {\r\n            console.log(result);\r\n            window.location.reload();\r\n          }\r\n      })\r\n}\r\n\r\n\r\n  //METHOD DELETE DATA\r\n  deleteDataSlideShow = (id) => {\r\n      let user = JSON.parse(localStorage.getItem('user'))\r\n      const userToken = user.token;\r\n      console.log(userToken);\r\n\r\n      const config = {\r\n        headers : { Authorization : `Bearer ${userToken}`}\r\n      }\r\n    Axios.delete('slideshow/delete-data-slideshow/'+ id, config)\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.fetchData();\r\n      })\r\n  }\r\n  //METHOD Perubahan Inputan di SlideShow\r\n  slideShowChange = (event) => {\r\n      this.setState({\r\n        [event.target.name] : event.target.value\r\n      });\r\n\r\n  }\r\n\r\n  handleChange(field, e) {\r\n    let fields = this.state.fields;\r\n    fields[field] = e.target.value;\r\n    this.setState({ fields });\r\n  }\r\n\r\n   // SAVE STATUS ACTIVE OR INACTIVE\r\n  handleDropdownChange = (id, event) => {\r\n    \r\n    let user = JSON.parse( localStorage.getItem('user'))\r\n    const userToken = user.token;\r\n    console.log(userToken);\r\n\r\n    console.log(id);\r\n    \r\n    const status = event.target.value;\r\n    console.log(status);\r\n    const config = {\r\n      headers : { Authorization : `Bearer ${userToken}`}\r\n    }\r\n\r\n    Axios.put(`slideshow/update-status/${id}/${status}`,null, config)\r\n    .then((response) => {\r\n      console.log(response);\r\n      this.fetchData();\r\n    })\r\n\r\n  }\r\n\r\n  // Handle Upload Slide Show Image\r\n  handleUploadImage = (e) => {\r\n    const file = e.target.files[0];\r\n    this.setState({chooseFile : file.name});\r\n    console.log(this.state.chooseFile);\r\n\r\n    const reader = new FileReader();\r\n    console.log(reader);\r\n    reader.readAsDataURL(file);\r\n    reader.onload = e => {\r\n      let base64Image = e.target.result;\r\n      let base64ImageStrip = base64Image.split(\"base64,\")[1];\r\n\r\n      this.setState({\r\n        uploadImage : base64ImageStrip\r\n      });\r\n      console.log(this.state.uploadImage);\r\n      \r\n    }\r\n  }\r\n\r\n  resetModal() {\r\n    let fields = this.state.fields\r\n    fields[\"slideshowTitle\"] = \"\"\r\n    fields[\"slideshowSubTitle\"] = \"\"\r\n    fields[\"slideshowImage\"] = \"\"\r\n   \r\n\r\n    let errors = {}\r\n    errors[\"slideshowTitle\"] = \"\"\r\n    errors[\"slideshowSubTitle\"] = \"\"\r\n    errors[\"slideshowImage\"] = \"\"\r\n\r\n\r\n    this.setState({fields: fields})\r\n    this.setState({errors: errors})\r\n  }\r\n\r\n  render() {\r\n    const { rows } = this.state\r\n    const headings = [\"No.\", \"Action\", \"Status\", \"Title\", \"Sub Title\", \"Image\"]\r\n    return (\r\n      <div className=\"content-wrapper\">\r\n        {/* <!-- Content Header (Page header) --> */}\r\n        <section className=\"content-header\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col-sm-6\"><h3>Slideshow Management</h3></div>\r\n              <div className=\"col-sm-6\">\r\n                <ol className=\"breadcrumb float-sm-right\">\r\n                  <li className=\"breadcrumb-item\">\r\n                    <a href='/'>Home</a>\r\n                  </li>\r\n                  <li className=\"breadcrumb-item active\">Slideshow</li>\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* <!-- /.container-fluid --> */}\r\n        </section>\r\n\r\n        <section className=\"content pdg-btm\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n\r\n                </div>\r\n                <div className=\"col-md-6 ctm-responsive\">\r\n                  <button type=\"button\" className=\"btn btn-primary add-btn\" data-toggle=\"modal\" data-target=\"#modal-add\"\r\n                    style={{float:\"right\"}}>\r\n                    <i className=\"nav-icon fas fa-plus\"></i>\r\n                      Add Slideshow Photo\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"card-body\">\r\n            <DataTable headings={headings} rows={rows} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n        {/* Modal Add */}\r\n      <div class=\"modal fade\" id=\"modal-add\">\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h4 class=\"modal-title\">Add New Slideshow Image</h4>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <form role=\"form\" id=\"addSlideshow\" onSubmit={this.contactSubmit.bind(this)}>\r\n            <div class=\"modal-body\">\r\n              <div class=\"card-body\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"inputTitle\">Title</label>\r\n                  <input type=\"text\" class=\"form-control\" name=\"slideshowTitle\" id=\"inputTitle\"\r\n                    placeholder=\"Enter Title\" onChange={this.handleChange.bind(this, \"slideshowTitle\")}\r\n                    value={this.state.fields[\"slideshowTitle\"]}/>\r\n                    <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"slideshowTitle\"]}\r\n                      </span>\r\n                </div>\r\n                \r\n                <div class=\"form-group\">\r\n                  <label for=\"inputSubTitle\">Sub Title</label>\r\n                  <input type=\"text\" class=\"form-control\" name=\"slideshowSubTitle\" id=\"inputSubTitle\"\r\n                    placeholder=\"Enter Sub Title\" onChange={this.handleChange.bind(this, \"slideshowSubTitle\")} value={this.state.fields[\"slideshowSubTitle\"]}/>\r\n                    <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"slideshowSubTitle\"]}\r\n                      </span>\r\n                </div>\r\n                \r\n                <div class=\"form-group\">\r\n                  <label for=\"addSlideshowImg\">Choose Image</label>\r\n                  <div class=\"input-group\">\r\n                    <div class=\"custom-file\">\r\n                      <input type=\"file\" accept=\"image/*\" class=\"custom-file-input\" id=\"addSlideshowImg\" name=\"slideshowImage\" onChange={this.handleUploadImage}\r\n                      value={this.state.fields[\"slideshowImage\"]}/>\r\n                      <label class=\"custom-file-label\" for=\"exampleInputFile\">{this.state.chooseFile}</label>                   \r\n                    </div>\r\n                  </div>\r\n                  <span class=\"text-danger\">Minimum size is 300x100 px</span> <br/>\r\n                  <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"slideshowImage\"]}\r\n                      </span>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n            <div class=\"modal-footer justify-content-between\">\r\n              <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" onClick={() => this.resetModal()}>Close</button>\r\n              <button type=\"submit\" class=\"btn btn-warning\">Add</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        {/* <!-- /.modal-content --> */}\r\n      </div>\r\n      {/* <!-- /.modal-dialog --> */}\r\n    </div>\r\n\r\n    {/* <!--Modal Edit--> */}\r\n    <div class=\"modal fade\" id=\"modal-edit\">\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h4 class=\"modal-title\">Edit Slideshow</h4>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <form role=\"form\" id=\"editSlideshow\">\r\n            <div class=\"modal-body\">\r\n              <div class=\"card-body\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"editTitle\">Title</label>\r\n                  <input type=\"text\" class=\"form-control\" name=\"title\" id=\"editTitle\" value ={this.state.title} \r\n                  onChange={this.slideShowChange}/>\r\n                  {/* <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"slideshowTitle\"]}\r\n                  </span> */}\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label for=\"inputSubTitle\">Sub Title</label>\r\n                  <input type=\"text\" class=\"form-control\" name=\"subTitle\" id=\"inputCategoryName\"\r\n                    value={this.state.subTitle} \r\n                    onChange={this.slideShowChange}/>\r\n                  {/* <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"slideshowSubTitle\"]}\r\n                  </span> */}\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label for=\"exampleInputFile\">Change Image</label>\r\n                  <div class=\"input-group\">\r\n                    <div class=\"custom-file\">\r\n                      <input type=\"file\" class=\"custom-file-input\" id=\"exampleInputFile\" name=\"img\" \r\n                      onChange={this.slideShowChange}/>\r\n                      {/* <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"slideshowImage\"]}\r\n                      </span> */}\r\n                      <label class=\"custom-file-label\" for=\"exampleInputFile\">Choose File</label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"modal-footer justify-content-between\">\r\n              <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Cancel</button>\r\n              <button id=\"submitEdit\" type=\"button\" onClick={() => this.editSlideShow(this.state.slideShowId)} class=\"btn btn-warning\">Save changes</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        {/* <!-- /.modal-content --> */}\r\n      </div>\r\n      {/* <!-- /.modal-dialog --> */}\r\n    </div>\r\n\r\n    {/* <!--Modal Delete--> */}\r\n    <div class=\"modal fade\" id=\"modal-delete\">\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h4 class=\"modal-title\">Delete Slideshow</h4>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            If you Delete this, you can't be returned\r\n          </div>\r\n          <div class=\"modal-footer justify-content-between\">\r\n            <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Cancel</button>\r\n            <button class=\"btn btn-warning\" data-toggle=\"modal\" data-target=\"#DeleteSuccess\"\r\n              data-dismiss=\"modal\" onClick={() => this.deleteDataSlideShow(this.state.slideShowId)}>Delete</button>\r\n          </div>\r\n        </div>\r\n        {/* <!-- /.modal-content --> */}\r\n      </div>\r\n      {/* <!-- /.modal-dialog --> */}\r\n    </div>\r\n\r\n    {/* <!--Delete Completed--> */}\r\n    <div class=\"modal fade\" id=\"DeleteSuccess\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabesl\"\r\n      aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\">Delete Complete!</h5>\r\n            <button class=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">×</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <img class=\"check\" src={SuccessImg}/>\r\n            <p>Data has been deleted</p>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button class=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\">Close</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SlideShowManagement;\r\n",["156","157"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Components\\Datatable\\Table.js",["158"],"import React, { Component } from 'react'\r\nimport Cell from './Cell';\r\nimport $ from 'jquery'\r\nimport \"datatables.net-responsive/js/dataTables.responsive\"\r\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\r\n\r\nexport default class Table extends Component {\r\n\r\n    renderHeadingRow = (_cell, cellIndex) => {\r\n        const { headings } = this.props;\r\n        return (\r\n            <Cell\r\n                key={`heading-${cellIndex}`}\r\n                content={headings[cellIndex]}\r\n                header={true}\r\n            />\r\n        )\r\n    };\r\n\r\n    renderRow = (_row, rowIndex) => {\r\n        const { rows } = this.props;\r\n        return (\r\n            <tr key={`row-${rowIndex}`}>\r\n                {rows[rowIndex].map((_cell, cellIndex) => {\r\n                    return (\r\n                        <Cell\r\n                            key={`${rowIndex}-${cellIndex}`}\r\n                            content={rows[rowIndex][cellIndex]}\r\n                        />\r\n                    )\r\n                })}\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    render() {\r\n        const { headings, rows } = this.props;\r\n        this.renderHeadingRow = this.renderHeadingRow.bind(this);\r\n        this.renderRow = this.renderRow.bind(this);\r\n\r\n        const theadMarkup = (\r\n            <tr key=\"heading\">\r\n                {headings.map(this.renderHeadingRow)}\r\n            </tr>\r\n        );\r\n        const tbodyMarkup = rows.map(this.renderRow);\r\n\r\n        return (\r\n            <table id=\"example1\" className=\"table table-bordered table-striped\" >\r\n                <thead>{theadMarkup}</thead>\r\n                <tbody>{tbodyMarkup}</tbody>\r\n            </table>\r\n        )\r\n    }\r\n}\r\n\r\n","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\TopUp3.js",["159","160"],"import React from 'react';\r\nimport './TopUp.style.css'\r\nimport PropTypes from 'prop-types';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport {\r\n  Button\r\n} from 'reactstrap';\r\nimport { ProgressBar } from 'react-bootstrap';\r\n\r\nconst TopUp3 = (props) => {\r\n  // const data =  JSON.parse(values);\r\n  const { handleSubmit, pristine, previousPage, submitting } = props;\r\n  return (\r\n    <form id=\"msform\" onSubmit={handleSubmit}>\r\n      {/* fieldsets */}\r\n      <fieldset>\r\n        <div>\r\n          <ProgressBar variant=\"dark\" now={75} animated/>\r\n        </div>\r\n        <div className=\"form-card\">\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <h5 className=\"fs-title\">Top Up Confirmation:</h5>\r\n            </div>\r\n            <div className=\"col-6\">\r\n              <h5 className=\"steps\">Step 3 - 4</h5>\r\n            </div>\r\n          </div>\r\n          <div className=\"row row-cols-1 row-cols-md-1\">\r\n            <div className=\"form-group\">\r\n              <label style={{marginLeft: \"1rem\"}}>\r\n                Nominal\r\n                {' '}\r\n                <Field name=\"confirmnominal\" component=\"input\" type=\"text\" disabled  />                                \r\n              </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label style={{marginLeft: \"1rem\"}}>\r\n                Payment\r\n                {' '}\r\n                <Field name=\"confirmpayment\" component=\"input\" type=\"text\" disabled  />                \r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Button color=\"dark\" className=\"btn-pill pull-right action-button\" type=\"submit\" style={{}}>\r\n          Next &nbsp;\r\n              <i className=\"fa fa-chevron-right\" />\r\n        </Button>\r\n        <Button color=\"primary\" className=\"btn-pill pull-left action-button-previous  action-button\" onClick={previousPage} >\r\n          <i className=\"fa fa-chevron-left\" />\r\n                &nbsp; Previous\r\n            </Button>\r\n\r\n      </fieldset>\r\n    </form>\r\n  );\r\n};\r\n\r\nTopUp3.propTypes = {\r\n  handleSubmit: PropTypes.func,\r\n  pristine: PropTypes.bool,\r\n  previousPage: PropTypes.func,\r\n  submitting: PropTypes.bool\r\n};\r\n\r\nexport default reduxForm({\r\n  form: 'TopUpForm',\r\n  destroyOnUnmount: false,\r\n  forceUnregisterOnUnmount: true,\r\n})(TopUp3);\r\n","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\Validate.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Navigations\\AuthRoute.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUpManagement\\TopUpManagement.js",["161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\SideBar\\SideBar.js",["179","180","181","182","183","184","185","186"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\BookManagement\\BookDetail.js",["187","188","189"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\index.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Profile\\Profile.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\DetailInvoice\\DetailInvoice.js",["190","191"],"import React, { Component } from 'react'\r\nimport NumberFormat from 'react-number-format';\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport MaxIcon from \"../../Auth/Assets/Images/bookshelf.png\";\r\nimport Axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nclass DetailInvoice extends Component {\r\n    constructor() {\r\n        super();\r\n        let user = JSON.parse(localStorage.getItem('user'))\r\n        const userToken = user.token;\r\n        this.state = {\r\n            invoiceId: '',\r\n            dataInvoice: [],\r\n            dataDetailInvoice: [],\r\n            userToken: userToken\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        const invoiceId = this.props.match.params.invoiceId;\r\n        this.getDetailInvoice(invoiceId);\r\n    }\r\n\r\n    async getDetailInvoice(invoiceId) {\r\n\r\n        const token = this.state.userToken;\r\n        const config = {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n        }\r\n        const getInvoice = await Axios.get(`http://localhost:8080/invoice/get-by-id/${invoiceId}`, config)\r\n        const getInvoiceDetail = await Axios.get(`http://localhost:8080/invoice-detail/get-by-invoice-id/${invoiceId}`, config)\r\n        console.log(getInvoiceDetail);\r\n        this.setState({ dataInvoice: getInvoice.data.data, dataDetailInvoice: getInvoiceDetail.data.data })\r\n    }\r\n\r\n    formatRupiah = (nilai) => {\r\n        return <NumberFormat value={nilai} displayType={'text'} thousandSeparator={true} prefix={'Rp. '} />\r\n    }\r\n    convertToDate = (date) => {\r\n        if (date === null) {\r\n            return \"-\"\r\n        } else {\r\n            return moment.utc(date).format('DD-MM-YYYY hh:mm')\r\n        }\r\n    }\r\n    printStatusPaid = () => {\r\n        if (this.state.dataInvoice.statusInvoice === \"Paid\") {\r\n            return <h2><font color=\"green\">PAID</font></h2>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { dataInvoice, dataDetailInvoice } = this.state;\r\n        let cardBody, action;\r\n\r\n        if (dataInvoice != \"\") {\r\n\r\n            cardBody = <div className=\"card-body\">\r\n                <div>\r\n                    <div className=\"invoice p-3 mb-3\">\r\n                        {/* <!-- title row --> */}\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <h4>\r\n                                    <img src={MaxIcon} style={{ height: '2rem' }} /> Maxwell Library <small className=\"float-right\">Date: {this.convertToDate(dataInvoice.invoiceDate)}</small>\r\n                                </h4>\r\n                            </div>\r\n                            {/* <!-- /.col --> */}\r\n                        </div>\r\n                        {/* <!-- info row --> */}\r\n                        <div className=\"row invoice-info\">\r\n                            <div className=\"col-sm-4 invoice-col\">\r\n                                From\r\n            <address>\r\n                                    <strong>Maxwell Library</strong>\r\n                                    <br />\r\n              795 Folsom Ave, Suite 600\r\n              <br />\r\n              San Francisco, CA 94107\r\n              <br />\r\n              Phone: (804) 123-5432\r\n              <br />\r\n              Email: maxwell@library.com\r\n            </address>\r\n                            </div>\r\n                            {/* <!-- /.col --> */}\r\n                            <div className=\"col-sm-4 invoice-col\">\r\n                                To\r\n                        <address>\r\n                                    <strong>{dataInvoice.borrower}</strong><br />\r\n                                    {dataInvoice.address}<br />\r\n            Phone: {dataInvoice.phone}<br />\r\n            Email: {dataInvoice.email}\r\n                                </address>\r\n                            </div>\r\n                            {/* <!-- /.col --> */}\r\n                            <div className=\"col-sm-4 invoice-col\">\r\n                                <b>Invoice {dataInvoice.noInvoice}</b><br />\r\n                                <br />\r\n                                {this.printStatusPaid()}\r\n                            </div>\r\n                            {/* <!-- /.col --> */}\r\n\r\n                        </div>\r\n                        {/* <!-- /.row --> */}\r\n\r\n                        {/* <!-- Table row --> */}\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 table-responsive\">\r\n                                <table className=\"table table-striped\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>No.</th>\r\n                                            <th>Book Title</th>\r\n                                            <th>Borrowed On</th>\r\n                                            <th>Due On</th>\r\n                                            <th>Type</th>\r\n                                            <th>Fine Amount</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            dataDetailInvoice.map((val, index) => {\r\n                                                return (\r\n                                                    <tr key={index}>\r\n                                                        <td>{index + 1}</td>\r\n                                                        <td>{val.title}</td>\r\n                                                        <td>{this.convertToDate(val.borrowedDate)}</td>\r\n                                                        <td>{this.convertToDate(val.threshold)}</td>\r\n                                                        <td>{val.type}</td>\r\n                                                        <td>{val.grandTotal}</td>\r\n                                                    </tr>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                            {/* <!-- /.col --> */}\r\n                        </div>\r\n                        {/* <!-- /.row --> */}\r\n\r\n                        <div className=\"row\">\r\n                            {/* <!-- accepted payments column --> */}\r\n                            <div className=\"col-6\"></div>\r\n                            {/* <!-- /.col --> */}\r\n                            <div className=\"col-6\">\r\n                                <p className=\"lead\" style={{ float: 'right' }}>Amount Due {this.convertToDate(dataInvoice.threshold)}</p>\r\n                                <div className=\"table-responsive\">\r\n                                    <table className=\"table\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th style={{ width: \"59%\" }}>Total:</th>\r\n                                                <td>{this.formatRupiah(`${dataInvoice.grandTotal}`)}</td>\r\n                                            </tr>\r\n                                        </thead>\r\n\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                            {/* <!-- /.col --> */}\r\n                        </div>\r\n                        {/* <!-- /.row --> */}\r\n\r\n                        {/* <!-- this row will not appear when printing --> */}\r\n                        <div className=\"row no-print\">\r\n                            <div className=\"col-12\">\r\n                                <Link to=\"/PaymentPrint\" target=\"_blank\">\r\n                                    <i className=\"fas fa-print\"></i> Print\r\n                           </Link>\r\n                                {action}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        } else {\r\n            cardBody = \"\";\r\n            action = \"\";\r\n\r\n        }\r\n        return (\r\n            < div className=\"content-wrapper\" >\r\n                {/* Content Header (Page header) */}\r\n                < section className=\"content-header\" >\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-sm-6\">\r\n                                <h1>Detail Invoice</h1>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <ol className=\"breadcrumb float-sm-right\">\r\n                                    <li className=\"breadcrumb-item\"><Link to=\"/\">Home</Link></li>\r\n                                    <li className=\"breadcrumb-item\"><Link to=\"FineManagement\">Fine Management</Link></li>\r\n                                    <li className=\"breadcrumb-item active\">Detail Invoice</li>\r\n                                </ol>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section >\r\n                {/* Main content */}\r\n                < section className=\"content\" >\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header\">\r\n                                        <h3 className=\"card-title\">Detail Invoice</h3>\r\n                                    </div>\r\n                                    {/* /.card-header */}\r\n                                    {cardBody}\r\n                                    {/* /.card-body */}\r\n                                </div>\r\n                                {/* /.card */}\r\n                            </div>\r\n                            {/* /.col */}\r\n                        </div>\r\n                        {/* /.row */}\r\n                    </div>\r\n                    {/* /.container-fluid */}\r\n                </section >\r\n                {/* /.content */}\r\n            </div >\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(DetailInvoice)","C:\\Users\\ASUS\\maxwell-library-react\\src\\Components\\Datatable\\Status.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\TopUp2.js",["192","193"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\FormInput.js",["194"],"import React from 'react';\r\nimport { FormGroup, FormText, Input, Label } from 'reactstrap';\r\nimport { MDBIcon } from \"mdbreact\";\r\n\r\nconst FormInput = ({\r\n  input,\r\n  label,\r\n  type,\r\n  inputPlaceHolder,\r\n  maxDate,\r\n  minDate,\r\n  meta: { touched,error }\r\n}) => (\r\n  <FormGroup>\r\n    <Label>{label}</Label>\r\n    <Input\r\n      {...input}\r\n      type={type}\r\n      placeholder={inputPlaceHolder}      \r\n    />\r\n    <div>    \r\n      {touched && error &&<span><MDBIcon icon=\"exclamation-circle\"/> {error}</span>}\r\n    </div>    \r\n  </FormGroup>\r\n);\r\n\r\nexport default FormInput;\r\n","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\BookManagement\\BookManagement.js",["195"],"import React, { Component } from \"react\";\r\nimport DataTable from \"../../../Components/Datatable/Table\";\r\nimport Action from \"../../../Components/Datatable/Action\";\r\nimport $ from \"jquery\";\r\nimport \"datatables.net-responsive/js/dataTables.responsive\";\r\nimport \"datatables.net-dt/css/jquery.dataTables.css\";\r\nimport Swal from \"sweetalert2\";\r\nimport Axios from '../../../Instances/axios-instances';\r\n\r\nclass BookManagement extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      fields: {},\r\n      errors: {},\r\n      data: [],\r\n      rows: [],\r\n      results: [],\r\n      category: [],\r\n      imgBanner: \"\",\r\n      imgDetail: \"\",\r\n      chooseFileBanner: \"Choose Image Banner\",\r\n      chooseFileDetail: \"Choose Image Detail\"\r\n    };\r\n\r\n    this.bookChange = this.bookChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCategory();\r\n    this.fetchData();\r\n  }\r\n\r\n  async getCategory() {\r\n    let fetchCategory = await Axios.get(\r\n      \"/category/get-all-active\"\r\n    );\r\n    console.log(fetchCategory);\r\n    const resultCategory = fetchCategory.data;\r\n    this.setState({ category: resultCategory });\r\n  }\r\n\r\n  async fetchData() {\r\n    $(\"#example1\").DataTable().destroy();\r\n    let results = [];\r\n\r\n    var no = 1;\r\n\r\n    await Axios.get('/book/get-all-active')\r\n        .then((response) => {\r\n          const result = response.data\r\n          this.setState({data: result})\r\n          result.map((book) => {\r\n            let row = [];\r\n\r\n            row.push(<td className=\"text-center\">{no++}</td>);\r\n            row.push(\r\n              <td className=\"text-center py-0 align-middle\">\r\n                <div className=\"btn-group btn-group-sm\">\r\n                  <Action\r\n                    type=\"success\"\r\n                    title=\"Edit\"\r\n                    icon=\"pen\"\r\n                    dataToggle=\"modal\"\r\n                    dataTarget=\"#modal-edit\"\r\n                    onClick={() => this.getBook(book.bookId)}\r\n                  />\r\n                  <Action\r\n                    type=\"danger\"\r\n                    title=\"Delete\"\r\n                    icon=\"trash\"\r\n                    dataToggle=\"modal\"\r\n                    dataTarget=\"#modal-delete\"\r\n                    onClick={() => this.getBook(book.bookId)}\r\n                  />\r\n                  <Action\r\n                    type=\"info\"\r\n                    title=\"Detail\"\r\n                    icon=\"eye\"\r\n                    link={`BookDetail/${book.bookId}`}\r\n                  />\r\n                </div>\r\n              </td>\r\n            );\r\n            row.push(<td className=\"text-center\">{book.bookCode}</td>);\r\n            row.push(<td className=\"text-center\">{book.title}</td>);\r\n            row.push(<td className=\"text-center\">{book.author}</td>);\r\n            row.push(<td className=\"text-center\"><img src={book.imgBanner} alt=\"placeholder\" style={{width: 146, height: 100}} /></td>);\r\n            row.push(<td className=\"text-center\"><img src={book.imgDetail} alt=\"placeholder\" style={{width: 100, height: 146}} /></td>);\r\n            row.push(<td className=\"text-center\">{book.publishDate}</td>);\r\n            row.push(<td className=\"text-center\">{book.qty}</td>);\r\n            row.push(<td className=\"text-center\">{book.categoryEntity.category}</td>);\r\n            results.push(row);\r\n                })\r\n            this.setState({ rows: results });\r\n\r\n            $(\"#example1\").DataTable({\r\n              responsive: true,\r\n              autoWidth: false,\r\n            });\r\n        })\r\n  }\r\n\r\n  bookChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  resetModal() {\r\n    let fields = this.state.fields\r\n    fields[\"title\"] = \"\"\r\n    fields[\"author\"] = \"\"\r\n    fields[\"categoryId\"] = \"\"\r\n    fields[\"statusBook\"] = \"\"\r\n    fields[\"description\"] = \"\"\r\n    fields[\"publishDate\"] = \"\"\r\n    fields[\"statusBook\"] = \"\"\r\n    fields[\"imgBanner\"] = \"\"\r\n    fields[\"imgDetail\"] = \"\"\r\n    fields[\"title\"] = \"\"\r\n\r\n    let errors = {}\r\n    errors[\"title\"] = \"\"\r\n    errors[\"author\"] = \"\"\r\n    errors[\"categoryId\"] = \"\"\r\n    errors[\"statusBook\"] = \"\"\r\n    errors[\"description\"] = \"\"\r\n    errors[\"publishDate\"] = \"\"\r\n    errors[\"statusBook\"] = \"\"\r\n    errors[\"imgBanner\"] = \"\"\r\n    errors[\"imgDetail\"] = \"\"\r\n    errors[\"title\"] = \"\"\r\n\r\n    this.setState({fields: fields})\r\n    this.setState({errors: errors})\r\n  }\r\n\r\n  getBook = (id) => {\r\n    Axios.get(\"/book/get-by-id/\" + id).then((response) => {\r\n      console.log(response);\r\n\r\n      let imgBannerConvert = this.base64Converter(response.data.imgBanner)\r\n      console.log(\"Convert Base64 Banner: \" + imgBannerConvert)\r\n\r\n      let imgDetailConvert = this.base64Converter(response.data.imgDetail)\r\n      console.log(imgDetailConvert)\r\n\r\n      this.setState({\r\n        author: response.data.author,\r\n        description: response.data.description,\r\n        imgBanner: response.data.imgBanner,\r\n        imgDetail: response.data.imgDetail,\r\n        publishDate: response.data.publishDate,\r\n        qty: response.data.qty,\r\n        statusBook: response.data.statusBook,\r\n        title: response.data.title,\r\n        categoryId: response.data.categoryEntity.categoryId,\r\n        bookId: id,\r\n      });\r\n    });\r\n  };\r\n\r\n  updateBook = (id) => {\r\n    let user = JSON.parse(localStorage.getItem(\"user\"));\r\n    const token = user.token;\r\n    console.log(token)\r\n    const config = {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    };\r\n\r\n    const book = {\r\n      author: this.state.author,\r\n      description: this.state.description,\r\n      imgBanner: this.state.imgBanner,\r\n      imgDetail: this.state.imgDetail,\r\n      publishDate: this.state.publishDate,\r\n      qty: this.state.qty,\r\n      statusBook: this.state.statusBook,\r\n      title: this.state.title,\r\n      categoryId: this.state.categoryId,\r\n    };\r\n\r\n    console.log(book)\r\n\r\n    if(this.handleValidationUpdate()) {\r\n      Axios\r\n      .put(\"/book/update-book/\" + id, book, config)\r\n      .then((response) => {\r\n        console.log(response);\r\n        $(\"#modal-edit\").modal(\"toggle\");\r\n        $('.modal-backdrop').remove();\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          title: \"Success\",\r\n          text: \"Your Data has been Updated\",\r\n          confirmButtonText: `OK`,\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            this.fetchData()\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n  };\r\n\r\n  deleteBook = (id) => {\r\n    Axios\r\n      .put(\"/book/delete-book/\" + id)\r\n      .then((response) => {\r\n        console.log(response);\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          title: \"Success\",\r\n          text: \"Your Data has been Deleted\",\r\n          confirmButtonText: `OK`,\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            this.fetchData()\r\n            \r\n          }\r\n        });\r\n      });\r\n  };\r\n\r\n  handleChange(field, e) {\r\n    let fields = this.state.fields;\r\n    let errors = {}\r\n    errors[\"title\"] = \"\"\r\n    errors[\"author\"] = \"\"\r\n    errors[\"description\"] = \"\"\r\n    errors[\"publishDate\"] = \"\"\r\n    errors[\"categoryId\"] = \"\"\r\n    errors[\"imgBanner\"] = \"\"\r\n    errors[\"imgDetail\"] = \"\"\r\n    fields[field] = e.target.value;\r\n    this.setState({ fields });\r\n    this.setState({errors: errors})\r\n    \r\n  }\r\n\r\n  handleImageDetail = (e) => {\r\n    const fileImg = e.target.files[0]\r\n    this.setState({chooseFileDetail: fileImg.name})\r\n    console.log(this.state.chooseFileDetail)\r\n    const fileReader = new FileReader();\r\n\r\n    fileReader.readAsDataURL(fileImg)\r\n\r\n    fileReader.onload = e => {\r\n      let base64Image = e.target.result\r\n      let base64ImageStrip = base64Image.split(\"base64,\")[1];\r\n      \r\n      this.setState({imgDetail: base64ImageStrip})\r\n      console.log(this.state.imgDetail)\r\n    }\r\n  }\r\n\r\n  base64Converter = (fileImg) =>{\r\n    const data = fileImg\r\n    var base64Convert = btoa(data)\r\n    return base64Convert\r\n  }\r\n\r\n  handleImageBanner = (e) => {\r\n    const fileImg = e.target.files[0]\r\n    this.setState({chooseFileBanner: fileImg.name})\r\n    console.log(this.state.chooseFileBanner)\r\n    const fileReader = new FileReader();\r\n\r\n    fileReader.readAsDataURL(fileImg)\r\n\r\n    fileReader.onload = e => {\r\n      let base64Image = e.target.result\r\n      let base64ImageStrip = base64Image.split(\"base64,\")[1];\r\n      \r\n      this.setState({imgBanner: base64ImageStrip})\r\n      console.log(this.state.imgBanner)\r\n    }\r\n  }\r\n\r\n\r\n  handleValidation() {\r\n    let fields = this.state.fields;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    // Title\r\n    if (!fields[\"title\"]) {\r\n      formIsValid = false;\r\n      errors[\"title\"] = \"Title cannot be empty\";\r\n    }\r\n\r\n    //Author\r\n    if (!fields[\"author\"]) {\r\n      formIsValid = false;\r\n      errors[\"author\"] = \"Author cannot be empty\";\r\n    }\r\n\r\n    //Description\r\n    if (!fields[\"description\"]) {\r\n      formIsValid = false;\r\n      errors[\"description\"] = \"Description cannot be empty\";\r\n    }\r\n\r\n    //Publish Date\r\n    if (!fields[\"publishDate\"]) {\r\n      formIsValid = false;\r\n      errors[\"publishDate\"] = \"Publish Date cannot be empty\";\r\n    }\r\n\r\n    //Category\r\n    if (!fields[\"categoryId\"]) {\r\n      formIsValid = false;\r\n      errors[\"categoryId\"] = \"Please Choose a Category!\";\r\n    }\r\n\r\n    //Image Banner\r\n    if (fields[\"imgBanner\"] === \"\") {\r\n      formIsValid = false;\r\n      errors[\"imgBanner\"] = \"Image Banner cannot be empty!\";\r\n    }\r\n\r\n    //Image Detail\r\n    if (fields[\"imgDetail\"] === \"\") {\r\n      formIsValid = false;\r\n      errors[\"imgDetail\"] = \"Image Detail cannot be empty!\";\r\n    }\r\n\r\n    this.setState({ errors: errors });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleValidationUpdate() {\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    if(this.state.title === \"\") {\r\n      formIsValid = false;\r\n      errors[\"title\"] = \"Title cannot be empty\";\r\n    }\r\n\r\n    if(this.state.author === \"\") {\r\n      formIsValid = false;\r\n      errors[\"author\"] = \"Author cannot be empty\";\r\n    }\r\n\r\n    if(this.state.categoryId === \"\") {\r\n      formIsValid = false;\r\n      errors[\"categoryId\"] = \"Please Choose a Category!\";\r\n    }\r\n\r\n    if(this.state.description === \"\") {\r\n      formIsValid = false;\r\n      errors[\"description\"] = \"Description cannot be empty\";\r\n    }\r\n\r\n    if(this.state.imgBanner === \"\") {\r\n      formIsValid = false;\r\n      errors[\"imgBanner\"] = \"Image Banner cannot be empty!\";\r\n    }\r\n\r\n    if(this.state.imgDetail === \"\") {\r\n      formIsValid = false;\r\n      errors[\"imgDetail\"] = \"Image Detail cannot be empty!\";\r\n    }\r\n\r\n    this.setState({ errors: errors });\r\n    return formIsValid;\r\n  }\r\n\r\n  contactSubmit(e) {\r\n    let fields = this.state.fields;\r\n    let user = JSON.parse(localStorage.getItem(\"user\"));\r\n    const token = user.token;\r\n    console.log(token);\r\n    const config = {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    };\r\n\r\n    e.preventDefault();\r\n    if (this.handleValidation()) {\r\n      $(\"#modal-add\").modal(\"toggle\");\r\n      $('.modal-backdrop').remove();\r\n      const book = {\r\n        author: fields[\"author\"],\r\n        description: fields[\"description\"],\r\n        imgBanner: this.state.imgBanner,\r\n        imgDetail: this.state.imgDetail,\r\n        qty: fields[\"qty\"],\r\n        statusBook: fields[\"statusBook\"],\r\n        title: fields[\"title\"],\r\n        categoryId: fields[\"categoryId\"],\r\n        publishDate: fields[\"publishDate\"],\r\n      };\r\n\r\n      console.log(book);\r\n\r\n      Axios\r\n        .post(\"/book/add-book\", book, config)\r\n        .then((response) => {\r\n          console.log(response);\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: \"Success\",\r\n            text: \"Your Data has been Added\",\r\n            confirmButtonText: `OK`,\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              this.fetchData()\r\n              this.resetModal()\r\n            }\r\n          });\r\n        }).catch((error) =>\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Error\",\r\n          text: \"Book already exist!\",\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            $(\"#modal-add\").modal(\"toggle\");\r\n          }\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { rows, category } = this.state;\r\n    const headings = [\r\n      \"No.\",\r\n      \"Action\",\r\n      \"Book ID\",\r\n      \"Title\",\r\n      \"Author\",\r\n      \"Image Banner\",\r\n      \"Image Detail\",\r\n      \"Publish Date\",\r\n      \"Quantity\",\r\n      \"Category\",\r\n    ];\r\n\r\n    return (\r\n      <div className=\"content-wrapper\">\r\n        <section className=\"content-header\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col-sm-6\">\r\n                <h1>Book Management</h1>\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <ol className=\"breadcrumb float-sm-right\">\r\n                  <li className=\"breadcrumb-item\">\r\n                    <a href=\"index.html\">Home</a>\r\n                  </li>\r\n                  <li className=\"breadcrumb-item active\">Book Management</li>\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/* Main content */}\r\n        <section className=\"content\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12 ctm-responsive\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary add-btn\"\r\n                          data-toggle=\"modal\"\r\n                          data-target=\"#modal-add\"\r\n                          style={{ float: \"right\" }}\r\n                        >\r\n                          <i className=\"nav-icon fas fa-plus\"></i>\r\n                          &nbsp; Add Book\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  {/* /.card-header */}\r\n                  <div className=\"card-body\">\r\n                    <DataTable headings={headings} rows={rows} />\r\n                    {/* /.card-body */}\r\n                  </div>\r\n                </div>\r\n                {/* /.card */}\r\n              </div>\r\n              {/* /.col */}\r\n            </div>\r\n            {/* /.row */}\r\n          </div>\r\n          {/* /.container-fluid */}\r\n        </section>\r\n        {/* /.content */}\r\n\r\n        {/* <!--Modal Add--> */}\r\n        <div className=\"modal fade\" id=\"modal-add\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Add Book</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <form id=\"addBook\" onSubmit={this.contactSubmit.bind(this)}>\r\n                <div className=\"modal-body\">\r\n                  <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-sm-6\">\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"inputTitle\">Title</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"inputTitle\"\r\n                            name=\"title\"\r\n                            placeholder=\"Enter Title\"\r\n                            onChange={this.handleChange.bind(this, \"title\")}\r\n                            value={this.state.fields[\"title\"]}\r\n                          />\r\n                          <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"title\"]}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"col-sm-6\">\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"inputAuthor\">Author</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"inputAuthor\"\r\n                            name=\"author\"\r\n                            placeholder=\"Enter Author\"\r\n                            onChange={this.handleChange.bind(this, \"author\")}\r\n                            value={this.state.fields[\"author\"]}\r\n                          />\r\n                          <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"author\"]}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"inputCategoryId\">Category</label>\r\n                      <select\r\n                        name=\"categoryId\"\r\n                        className=\"form-control\"\r\n                        id=\"inputCategoryId\"\r\n                        value={this.state.fields[\"categoryId\"]}\r\n                        onChange={this.handleChange.bind(this, \"categoryId\")}\r\n                      >\r\n                        <option value=\"null\">Choose Category</option>\r\n                        {category.map((category) => {\r\n                          return (\r\n                            <option value={category.categoryId}>\r\n                              {category.category}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </select>\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"categoryId\"]}\r\n                      </span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"inputDescription\">Description</label>\r\n                      <textarea\r\n                        className=\"form-control\"\r\n                        id=\"inputDescription\"\r\n                        name=\"description\"\r\n                        placeholder=\"Enter Description\"\r\n                        rows=\"4\"\r\n                        cols=\"50\"\r\n                        onChange={this.handleChange.bind(this, \"description\")}\r\n                        value={this.state.fields[\"description\"]}\r\n                      ></textarea>\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"description\"]}\r\n                      </span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                    <label htmlFor=\"inputImgBanner\">Image Banner</label>\r\n                      <div className=\"input-group\">\r\n                        <div className=\"custom-file\">\r\n                          <input type=\"file\" accept=\"image/*\" className=\"custom-file-input\" id=\"inputImgBanner\" name=\"imgBanner\" onChange={this.handleImageBanner}\r\n                        value={this.state.fields[\"imgBanner\"]}/>\r\n                          <label className=\"custom-file-label\" for=\"exampleInputFile\" style={{overflow:\"hidden\"}}>{this.state.chooseFileBanner}</label>                   \r\n                        </div>\r\n                      </div> \r\n                      <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"imgBanner\"]}\r\n                          </span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"inputImgDetail\">Image Detail</label>\r\n                      <div className=\"input-group\">\r\n                        <div className=\"custom-file\">\r\n                          <input type=\"file\" accept=\"image/*\" className=\"custom-file-input\" id=\"inputImgDetail\" name=\"imgDetail\" onChange={this.handleImageDetail}\r\n                        value={this.state.fields[\"imgDetail\"]}/>\r\n                          <label className=\"custom-file-label\" for=\"exampleInputFile\" style={{overflow:\"hidden\"}}>{this.state.chooseFileDetail}</label>                   \r\n                        </div>\r\n                      </div>\r\n                      <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"imgDetail\"]}\r\n                          </span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"inputPublishDate\">Publish Date</label>\r\n                      <input\r\n                        type=\"date\"\r\n                        className=\"form-control\"\r\n                        id=\"inputPublishDate\"\r\n                        name=\"publishDate\"\r\n                        placeholder=\"Enter Publish Date\"\r\n                        onChange={this.handleChange.bind(this, \"publishDate\")}\r\n                        value={this.state.fields[\"publishDate\"]}\r\n                      />\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"publishDate\"]}\r\n                      </span>\r\n                    </div>\r\n\r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer justify-content-between\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-default\"\r\n                    data-dismiss=\"modal\"\r\n                    onClick={() => this.resetModal()}\r\n                  >\r\n                    Close\r\n                  </button>\r\n                  <button type=\"submit\" className=\"btn btn-warning\">\r\n                    Add\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n\r\n        {/* <!--Modal Edit--> */}\r\n        <div className=\"modal fade\" id=\"modal-edit\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Edit Book</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <form id=\"editBook\">\r\n                <div className=\"modal-body\">\r\n                  <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-sm-6\">\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"editTitle\">Title</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"editTitle\"\r\n                            name=\"title\"\r\n                            onChange={this.bookChange}\r\n                            value={this.state.title}\r\n                          />\r\n                          <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"title\"]}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"col-sm-6\">\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"editAuthor\">Author</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"editAuthor\"\r\n                            name=\"author\"\r\n                            placeholder=\"Enter Author\"\r\n                            onChange={this.bookChange}\r\n                            value={this.state.author}\r\n                          />\r\n                          <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"author\"]}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"editCategoryId\">Category</label>\r\n                      <select\r\n                        name=\"categoryId\"\r\n                        className=\"form-control\"\r\n                        id=\"editCategoryId\"\r\n                        value={this.state.categoryId}\r\n                        onChange={this.bookChange}\r\n                      >\r\n                        {category.map((category) => {\r\n                          return (\r\n                            <option value={category.categoryId}>\r\n                              {category.category}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </select>\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"categoryId\"]}\r\n                      </span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"editDescription\">Description</label>\r\n                      <textarea\r\n                        className=\"form-control\"\r\n                        id=\"editDescription\"\r\n                        name=\"description\"\r\n                        placeholder=\"Enter Description\"\r\n                        rows=\"4\"\r\n                        cols=\"50\"\r\n                        onChange={this.bookChange}\r\n                        value={this.state.description}\r\n                      ></textarea>\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"description\"]}\r\n                      </span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                    <label htmlFor=\"editImgBanner\">Image Banner</label>\r\n                      <div className=\"input-group\">\r\n                        <div className=\"custom-file\">\r\n                          <input type=\"file\" accept=\"image/*\" className=\"custom-file-input\" id=\"editImgBanner\" name=\"imgBanner\" onChange={this.handleImageBanner}  />\r\n                          <label className=\"custom-file-label\" for=\"exampleInputFile\" style={{overflow:\"hidden\"}}>{this.state.imgBanner}</label>                   \r\n                        </div>\r\n                      </div> \r\n                      <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"imgBanner\"]}\r\n                          </span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"editImgDetail\">Image Detail</label>\r\n                      <div className=\"input-group\">\r\n                        <div className=\"custom-file\">\r\n                          <input type=\"file\" accept=\"image/*\" className=\"custom-file-input\" id=\"editImgDetail\" name=\"imgDetail\" onChange={this.handleImageDetail}/>\r\n                          <label className=\"custom-file-label\" for=\"exampleInputFile\" style={{overflow:\"hidden\"}}>{this.state.imgDetail}</label>                   \r\n                        </div>\r\n                      </div>\r\n                      <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"imgDetail\"]}\r\n                          </span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"editPublishDate\">Publish Date</label>\r\n                      <input\r\n                        type=\"date\"\r\n                        className=\"form-control\"\r\n                        id=\"editPublishDate\"\r\n                        name=\"publishDate\"\r\n                        placeholder=\"Enter Publish Date\"\r\n                        onChange={this.bookChange}\r\n                        value={this.state.publishDate}\r\n                      />\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"publishDate\"]}\r\n                      </span>\r\n                    </div>\r\n\r\n                   \r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer justify-content-between\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-default\"\r\n                    data-dismiss=\"modal\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => this.updateBook(this.state.bookId)}\r\n                    className=\"btn btn-warning\"\r\n                  >\r\n                    Save changes\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n\r\n        {/* <!--Modal Delete--> */}\r\n        <div className=\"modal fade\" id=\"modal-delete\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Delete Book</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                If you Delete this, you can't be returned\r\n              </div>\r\n              <div className=\"modal-footer justify-content-between\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-default\"\r\n                  data-dismiss=\"modal\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-warning\"\r\n                  type=\"button\"\r\n                  data-dismiss=\"modal\"\r\n                  onClick={() => this.deleteBook(this.state.bookId)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BookManagement;\r\n","C:\\Users\\ASUS\\maxwell-library-react\\src\\Navigations\\MainNavigations.js",["196","197"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\App.js",["198"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Payment\\Payment.js",["199","200"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Author\\Author.js",["201","202","203"],"import React, { Component } from \"react\";\r\nimport \"./customtable.css\";\r\nimport \"bootstrap\";\r\nimport DataTable from \"../../../Components/Datatable/Table\";\r\nimport Action from \"../../../Components/Datatable/Action\";\r\nimport $ from \"jquery\";\r\nimport \"bootstrap\";\r\nimport Swal from \"sweetalert2\";\r\nimport Axios from '../../../Instances/axios-instances';\r\n\r\nclass Author extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      fields: [],\r\n      errors: {},\r\n      data: [],\r\n      rows: [],\r\n      results: [],\r\n    };\r\n\r\n    this.authorChange = this.authorChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  async fetchData() {\r\n    $('#example1').DataTable().destroy();\r\n    const results = [];\r\n    \r\n    var no = 1;\r\n\r\n    await Axios.get('/author/getAll')\r\n          .then((response) => {\r\n            const result = response.data;\r\n            this.setState({data: result})\r\n            result.map((author) => {\r\n              console.log(author)\r\n              var row = [];\r\n              row.push(<td className=\"text-center\">{no++}</td>);\r\n              row.push(\r\n                <td className=\"text-center py-0 align-middle\">\r\n                  <div className=\"btn-group btn-group-sm\">\r\n                    <Action\r\n                      type=\"success\"\r\n                      title=\"Edit\"\r\n                      icon=\"pen\"\r\n                      dataToggle=\"modal\"\r\n                      dataTarget=\"#modal-edit\"\r\n                      onClick={() => this.getAuthor(author.authorId)}\r\n                    />\r\n                    <Action\r\n                      type=\"danger\"\r\n                      title=\"Delete\"\r\n                      icon=\"trash\"\r\n                      dataToggle=\"modal\"\r\n                      dataTarget=\"#modal-delete\"\r\n                      onClick={() => this.getAuthor(author.authorId)}\r\n                    />\r\n                  </div>\r\n                </td>\r\n              );\r\n              row.push(<td>{author.authorId}</td>);\r\n              row.push(<td>{author.authorName}</td>);\r\n              results.push(row);\r\n            })\r\n            this.setState({ rows: results });\r\n\r\n            $(\"#example1\").DataTable({\r\n              responsive: true,\r\n              autoWidth: false,\r\n              });\r\n          })\r\n  }\r\n\r\n  getAuthor(id) {    \r\n    let errors = {}    \r\n    errors[\"AuthorName\"] = \"\";\r\n    this.setState({errors: errors});\r\n    \r\n    Axios\r\n      .get(\"/author/getid/\" + id)\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({\r\n          authorName: response.data.authorName,\r\n          authorId: id,\r\n          name: response.data.authorName\r\n        });\r\n      });\r\n  };\r\n\r\n  updateAuthor = (id) => {\r\n    var name=this.state.name\r\n    console.log(name)\r\n    const author = {\r\n      authorName: this.state.authorName,\r\n\r\n    };\r\n    console.log(author.authorName)\r\n    console.log(author)\r\n    if(this.handleValidationUpdate()) {\r\n    Axios\r\n      .get(\"/author/getAuthor/\" + author.authorName)\r\n      .then((response) => {\r\n        const result2= response.data;\r\n        console.log(result2)\r\n          if(author.authorName==name){\r\n            Swal.fire({\r\n              icon: \"warning\",\r\n              title: \"Warning\",\r\n              text: \"You Enter the same Name\",\r\n              confirmButtonText: `OK`,\r\n            })\r\n          } else if(author.authorName==result2){\r\n            Swal.fire({\r\n              icon: \"warning\",\r\n              title: \"Warning\",\r\n              text: \"Name Already saved\",\r\n              confirmButtonText: `OK`,\r\n            })\r\n          } else{\r\n            Axios\r\n          .put(\"/author/update/\" + id, author)\r\n          .then((response) => {\r\n            console.log(response);\r\n            $(\"#modal-edit\").modal(\"toggle\");\r\n            $('.modal-backdrop').remove();\r\n            Swal.fire({\r\n              icon: \"success\",\r\n              title: \"Success\",\r\n              text: \"Your Data has been Updated\",\r\n              confirmButtonText: `OK`,\r\n            }).then((result) => {\r\n              if (result.isConfirmed) {\r\n                this.fetchData()\r\n              }\r\n            });\r\n          });\r\n          }\r\n          \r\n         \r\n      })\r\n    }\r\n  };\r\n\r\n  handleValidationUpdate() {\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    if(this.state.authorName === \"\") {\r\n      formIsValid = false;\r\n      errors[\"AuthorName\"] = \"Author Name cannot be empty\";\r\n    }\r\n\r\n    this.setState({errors: errors})\r\n    return formIsValid\r\n  }\r\n\r\n  deleteAuthor = (id) => {\r\n    Axios\r\n      .put(\"/author/delete/\" + id)\r\n      .then((response) => {\r\n        console.log(response);\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          title: \"Success\",\r\n          text: \"Your Data has been Deleted\",\r\n          confirmButtonText: `OK`,\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            this.fetchData()\r\n          }\r\n        });\r\n      });\r\n  };\r\n\r\n  authorChange = (event) => {    \r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });    \r\n  };\r\n\r\n  resetModal() {\r\n    let fields = this.state.fields;\r\n    let errors = {}\r\n    fields[\"AuthorName\"] = \"\";\r\n    errors[\"AuthorName\"] = \"\";\r\n\r\n    this.setState({fields: fields});\r\n    this.setState({errors: errors});\r\n  }\r\n\r\n  handleValidation() {\r\n    let fields = this.state.fields;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    //Author Name\r\n    if (!fields[\"AuthorName\"]) {\r\n      formIsValid = false;\r\n      errors[\"AuthorName\"] = \"Author Name cannot be empty\";\r\n    }   \r\n\r\n    this.setState({ errors: errors });\r\n    return formIsValid;\r\n  }\r\n\r\n  contactSubmit(e) {\r\n    let fields = this.state.fields;\r\n    e.preventDefault();\r\n    if (this.handleValidation()) {\r\n      $(\"#modal-add\").modal(\"hide\");\r\n      $('.modal-backdrop').remove();\r\n      const author = {\r\n        authorName: fields[\"AuthorName\"],\r\n      };      \r\n      console.log(author)\r\n      Axios\r\n        .post(\"/author/post\", author)\r\n        .then((response) => {\r\n          console.log(response);\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: \"Success\",\r\n            text: \"Your Data has been Added\",\r\n            confirmButtonText: `OK`,\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              this.fetchData()\r\n              this.resetModal()\r\n            }\r\n          });\r\n        })\r\n        .catch((error) =>\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Error\",\r\n            text: \"Author already exist!\",\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              $(\"#modal-add\").modal(\"toggle\");\r\n            }\r\n          })\r\n        );\r\n    }\r\n  }\r\n\r\n  handleChange(field, e) {\r\n    let fields = this.state.fields;\r\n    let errors = {}\r\n    errors[\"AuthorName\"] = \"\";\r\n    fields[field] = e.target.value;\r\n    this.setState({ fields });\r\n    this.setState({ errors: errors})\r\n  }\r\n\r\n  render() {\r\n    const { rows } = this.state;\r\n    const headings = [\"No\", \"Action\", \"Author ID(s)\", \"Author Name\"];\r\n    return (\r\n      <div className=\"content-wrapper\">\r\n        {/* <!-- Content Header (Page header) --> */}\r\n        <section className=\"content-header\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col-sm-6\">\r\n                <h3>Author Management</h3>\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <ol className=\"breadcrumb float-sm-right\">\r\n                  <li className=\"breadcrumb-item\">\r\n                    <a href=\"/\">Home</a>\r\n                  </li>\r\n                  <li className=\"breadcrumb-item active\">Author</li>\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* <!-- /.container-fluid --> */}\r\n        </section>\r\n\r\n        <section className=\"content pdg-btm\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12 ctm-responsive\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-primary add-btn\"\r\n                      data-toggle=\"modal\"\r\n                      data-target=\"#modal-add\"\r\n                      onClick={()=>{this.resetModal()}}\r\n                      style={{ float: \"right\" }}\r\n                    >\r\n                      <i className=\"nav-icon fas fa-plus\"></i>\r\n                      &nbsp; Add Author\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card-body\">\r\n                <DataTable headings={headings} rows={rows} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* <!--Modal Add--> */}\r\n        <div className=\"modal fade\" id=\"modal-add\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Add Author</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <form id=\"addAuthor\" onSubmit={this.contactSubmit.bind(this)}>\r\n                <div className=\"modal-body\">\r\n                  <div className=\"card-body\">\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"inputAuthorName\">Author Name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"inputAuthorName\"\r\n                        name=\"author\"\r\n                        placeholder=\"Enter Author Name\"\r\n                        onChange={this.handleChange.bind(this, \"AuthorName\")}\r\n                        value={this.state.fields[\"AuthorName\"]}\r\n                      />\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"AuthorName\"]}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer justify-content-between\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-default\"\r\n                    data-dismiss=\"modal\"\r\n                    onClick={() => this.resetModal()}\r\n                  >\r\n                    Close\r\n                  </button>\r\n                  <button type=\"submit\" className=\"btn btn-warning\">\r\n                    Add\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n\r\n        {/* <!--Modal Edit--> */}\r\n        <div className=\"modal fade\" id=\"modal-edit\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Edit Author</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <form id=\"editAuthor\">\r\n                <div className=\"modal-body\">\r\n                  <div className=\"card-body\">\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"editAuthorName\">Author Name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"authorName\"\r\n                        id=\"editAuthorName\"\r\n                        value={this.state.authorName}\r\n                        onChange={this.authorChange}\r\n                      />\r\n                      <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"AuthorName\"]}\r\n                          </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer justify-content-between\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-default\"\r\n                    data-dismiss=\"modal\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => this.updateAuthor(this.state.authorId)}\r\n                    className=\"btn btn-warning\"\r\n                  >\r\n                    Save changes\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n\r\n        {/* <!--Modal Delete--> */}\r\n        <div className=\"modal fade\" id=\"modal-delete\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Delete Author</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                If you Delete this, you can't be returned\r\n              </div>\r\n              <div className=\"modal-footer justify-content-between\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-default\"\r\n                  data-dismiss=\"modal\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-warning\"\r\n                  data-dismiss=\"modal\"\r\n                  onClick={() => this.deleteAuthor(this.state.authorId)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Author;\r\n","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\CategoryManagement\\CategoryManagement.js",["204"],"import React, { Component } from \"react\";\r\nimport \"./customtable.css\";\r\nimport \"bootstrap\";\r\nimport DataTable from \"../../../Components/Datatable/Table\";\r\nimport Action from \"../../../Components/Datatable/Action\";\r\nimport $ from \"jquery\";\r\nimport \"bootstrap\";\r\nimport Swal from \"sweetalert2\";\r\nimport Axios from '../../../Instances/axios-instances';\r\n\r\nclass CategoryManagement extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      fields: [],\r\n      errors: {},\r\n      data: [],\r\n      rows: [],\r\n      results: [],\r\n    };\r\n\r\n    this.categoryChange = this.categoryChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  async fetchData() {\r\n    $('#example1').DataTable().destroy();\r\n    const results = [];\r\n    \r\n    var no = 1;\r\n\r\n    await Axios.get('/category/get-all-active')\r\n          .then((response) => {\r\n            const result = response.data;\r\n            this.setState({data: result})\r\n            result.map((category) => {\r\n              console.log(category)\r\n              var row = [];\r\n              row.push(<td className=\"text-center\">{no++}</td>);\r\n              row.push(\r\n                <td className=\"text-center py-0 align-middle\">\r\n                  <div className=\"btn-group btn-group-sm\">\r\n                    <Action\r\n                      type=\"success\"\r\n                      title=\"Edit\"\r\n                      icon=\"pen\"\r\n                      dataToggle=\"modal\"\r\n                      dataTarget=\"#modal-edit\"\r\n                      onClick={() => this.getCategory(category.categoryId)}\r\n                    />\r\n                    <Action\r\n                      type=\"danger\"\r\n                      title=\"Delete\"\r\n                      icon=\"trash\"\r\n                      dataToggle=\"modal\"\r\n                      dataTarget=\"#modal-delete\"\r\n                      onClick={() => this.getCategory(category.categoryId)}\r\n                    />\r\n                  </div>\r\n                </td>\r\n              );\r\n              row.push(<td>{category.categoryId}</td>);\r\n              row.push(<td>{category.category}</td>);\r\n              results.push(row);\r\n            })\r\n            this.setState({ rows: results });\r\n\r\n            $(\"#example1\").DataTable({\r\n              responsive: true,\r\n              autoWidth: false,\r\n              });\r\n          })\r\n  }\r\n\r\n  getCategory = (id) => {\r\n    Axios\r\n      .get(\"/category/get-by-id/\" + id)\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({\r\n          category: response.data.category,\r\n          categoryId: id,\r\n        });\r\n      });\r\n  };\r\n\r\n  updateCategory = (id) => {\r\n\r\n    const category = {\r\n      category: this.state.category,\r\n    };\r\n\r\n    console.log(category)\r\n\r\n    if(this.handleValidationUpdate()) {\r\n      Axios\r\n      .put(\"/category/update-category/\" + id, category)\r\n      .then((response) => {\r\n        console.log(response);\r\n        $(\"#modal-edit\").modal(\"toggle\");\r\n        $('.modal-backdrop').remove();\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          title: \"Success\",\r\n          text: \"Your Data has been Updated\",\r\n          confirmButtonText: `OK`,\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            this.fetchData()\r\n          }\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  handleValidationUpdate() {\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    if(this.state.category === \"\") {\r\n      formIsValid = false;\r\n      errors[\"categoryName\"] = \"Category cannot be empty\";\r\n    }\r\n\r\n    this.setState({errors: errors})\r\n    return formIsValid\r\n  }\r\n\r\n  deleteCategory = (id) => {\r\n    Axios\r\n      .put(\"/category/delete-category/\" + id)\r\n      .then((response) => {\r\n        console.log(response);\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          title: \"Success\",\r\n          text: \"Your Data has been Deleted\",\r\n          confirmButtonText: `OK`,\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            this.fetchData()\r\n          }\r\n        });\r\n      });\r\n  };\r\n\r\n  categoryChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  resetModal() {\r\n    let fields = this.state.fields;\r\n    let errors = {}\r\n    fields[\"CategoryName\"] = \"\";\r\n    errors[\"CategoryName\"] = \"\";\r\n\r\n    this.setState({fields: fields});\r\n    this.setState({errors: errors});\r\n  }\r\n\r\n  handleValidation() {\r\n    let fields = this.state.fields;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    //Category Name\r\n    if (!fields[\"CategoryName\"]) {\r\n      formIsValid = false;\r\n      errors[\"CategoryName\"] = \"Category Name cannot be empty\";\r\n    }\r\n\r\n    this.setState({ errors: errors });\r\n    return formIsValid;\r\n  }\r\n\r\n  contactSubmit(e) {\r\n    let fields = this.state.fields;\r\n    e.preventDefault();\r\n    if (this.handleValidation()) {\r\n      $(\"#modal-add\").modal(\"hide\");\r\n      $('.modal-backdrop').remove();\r\n      const category = {\r\n        category: fields[\"CategoryName\"],\r\n      };\r\n      console.log(category);\r\n      Axios\r\n        .post(\"/category/add-category\", category)\r\n        .then((response) => {\r\n          console.log(response);\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: \"Success\",\r\n            text: \"Your Data has been Added\",\r\n            confirmButtonText: `OK`,\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              this.fetchData()\r\n              this.resetModal()\r\n            }\r\n          });\r\n        })\r\n        .catch((error) =>\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Error\",\r\n            text: \"Category already exist!\",\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              $(\"#modal-add\").modal(\"toggle\");\r\n            }\r\n          })\r\n        );\r\n    }\r\n  }\r\n\r\n  handleChange(field, e) {\r\n    let fields = this.state.fields;\r\n    let errors = {}\r\n    errors[\"CategoryName\"] = \"\";\r\n    fields[field] = e.target.value;\r\n    this.setState({ fields });\r\n    this.setState({ errors: errors})\r\n  }\r\n\r\n  render() {\r\n    const { rows } = this.state;\r\n    const headings = [\"No\", \"Action\", \"Category ID(s)\", \"Category Name\"];\r\n    return (\r\n      <div className=\"content-wrapper\">\r\n        {/* <!-- Content Header (Page header) --> */}\r\n        <section className=\"content-header\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col-sm-6\">\r\n                <h3>Category Management</h3>\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <ol className=\"breadcrumb float-sm-right\">\r\n                  <li className=\"breadcrumb-item\">\r\n                    <a href=\"/\">Home</a>\r\n                  </li>\r\n                  <li className=\"breadcrumb-item active\">Category</li>\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* <!-- /.container-fluid --> */}\r\n        </section>\r\n\r\n        <section className=\"content pdg-btm\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12 ctm-responsive\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-primary add-btn\"\r\n                      data-toggle=\"modal\"\r\n                      data-target=\"#modal-add\"\r\n                      style={{ float: \"right\" }}\r\n                    >\r\n                      <i className=\"nav-icon fas fa-plus\"></i>\r\n                      &nbsp; Add Category\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card-body\">\r\n                <DataTable headings={headings} rows={rows} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* <!--Modal Add--> */}\r\n        <div className=\"modal fade\" id=\"modal-add\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Add Category</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <form id=\"addCategory\" onSubmit={this.contactSubmit.bind(this)}>\r\n                <div className=\"modal-body\">\r\n                  <div className=\"card-body\">\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"inputCategoryName\">Category Name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"inputCategoryName\"\r\n                        name=\"category\"\r\n                        placeholder=\"Enter Category\"\r\n                        onChange={this.handleChange.bind(this, \"CategoryName\")}\r\n                        value={this.state.fields[\"CategoryName\"]}\r\n                      />\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"CategoryName\"]}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer justify-content-between\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-default\"\r\n                    data-dismiss=\"modal\"\r\n                    onClick={() => this.resetModal()}\r\n                  >\r\n                    Close\r\n                  </button>\r\n                  <button type=\"submit\" className=\"btn btn-warning\">\r\n                    Add\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n\r\n        {/* <!--Modal Edit--> */}\r\n        <div className=\"modal fade\" id=\"modal-edit\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Edit Category</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <form id=\"editCategory\">\r\n                <div className=\"modal-body\">\r\n                  <div className=\"card-body\">\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"editCategoryName\">Category Name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"category\"\r\n                        id=\"editCategoryName\"\r\n                        value={this.state.category}\r\n                        onChange={this.categoryChange}\r\n                      />\r\n                      <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"categoryName\"]}\r\n                          </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer justify-content-between\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-default\"\r\n                    data-dismiss=\"modal\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => this.updateCategory(this.state.categoryId)}\r\n                    className=\"btn btn-warning\"\r\n                  >\r\n                    Save changes\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n\r\n        {/* <!--Modal Delete--> */}\r\n        <div className=\"modal fade\" id=\"modal-delete\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Delete Category</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                If you Delete this, you can't be returned\r\n              </div>\r\n              <div className=\"modal-footer justify-content-between\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-default\"\r\n                  data-dismiss=\"modal\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-warning\"\r\n                  data-dismiss=\"modal\"\r\n                  onClick={() => this.deleteCategory(this.state.categoryId)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CategoryManagement;\r\n","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\LogManagement\\LogManagement.js",["205","206"],"import React, { Component } from 'react';\r\nimport DataTable from \"../../../Components/Datatable/Table\";\r\nimport Action from \"../../../Components/Datatable/Action\";\r\nimport $ from 'jquery'\r\nimport 'bootstrap'\r\nimport Axios from '../../../Instances/axios-instances';\r\n\r\nclass LogManagement extends Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      rows: [],\r\n      data: []\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.fetchData();\r\n  }\r\n\r\n  async fetchData(){\r\n    // $(\"#example1\").DataTable.destroy();\r\n\r\n    await Axios.get('log/get-log-lastActivity')\r\n    .then((fetchedData) => {\r\n      console.log(fetchedData);\r\n      const resultLog = fetchedData.data;\r\n      this.setState({\r\n        data : resultLog\r\n      });\r\n      const result = this.state.data;\r\n      const results = [];\r\n      var number = 1;\r\n\r\n      result.map((log) => {\r\n        var row = [];\r\n\r\n        row.push(\r\n          <td className=\"text-center\">{number++}</td>\r\n        );\r\n\r\n        row.push(\r\n          <td>\r\n            {log.dateTime}\r\n          </td>\r\n        );\r\n\r\n        row.push(\r\n          <td>\r\n            {log.action}\r\n          </td>\r\n        );\r\n\r\n        row.push(\r\n          <td>\r\n            {log.description}\r\n          </td>\r\n        );\r\n\r\n        results.push(row)\r\n      })\r\n\r\n      this.setState({\r\n        rows : results\r\n      });\r\n      $(\"#example1\").DataTable({\r\n        responsive: true,\r\n        autoWidth: false,\r\n      });\r\n    });\r\n  }\r\n\r\n    render() {\r\n        const { rows } = this.state\r\n        const headings = [\r\n                \"No.\",\r\n                \"Time\",\r\n                \"Action\",\r\n                \"Description\"\r\n            ]\r\n        return (\r\n            <div className=\"content-wrapper\">\r\n            {/* <!-- Content Header (Page header) --> */}\r\n            <section className=\"content-header\">\r\n              <div className=\"container-fluid\">\r\n                <div className=\"row mb-2\">\r\n                  <div className=\"col-sm-6\"><h3>Last Activity</h3></div>\r\n                  <div className=\"col-sm-6\">\r\n                    <ol className=\"breadcrumb float-sm-right\">\r\n                      <li className=\"breadcrumb-item\">\r\n                        <a href='/'>Home</a>\r\n                      </li>\r\n                      <li className=\"breadcrumb-item active\">Log</li>\r\n                    </ol>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* <!-- /.container-fluid --> */}\r\n            </section>\r\n           \r\n            <section className=\"content pdg-btm\">\r\n                <div className=\"container-fluid\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                    <DataTable headings={headings} rows={rows} />\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </section>\r\n\r\n          </div>      \r\n          );\r\n    }\r\n}\r\n\r\nexport default LogManagement;\r\n",{"ruleId":"207","severity":1,"message":"208","line":2,"column":28,"nodeType":"209","messageId":"210","endLine":2,"endColumn":39},{"ruleId":"207","severity":1,"message":"211","line":4,"column":9,"nodeType":"209","messageId":"210","endLine":4,"endColumn":13},{"ruleId":"212","severity":1,"message":"213","line":30,"column":17,"nodeType":"214","endLine":30,"endColumn":168},{"ruleId":"212","severity":1,"message":"213","line":44,"column":17,"nodeType":"214","endLine":44,"endColumn":168},{"ruleId":"212","severity":1,"message":"213","line":66,"column":21,"nodeType":"214","endLine":66,"endColumn":91},{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","replacedBy":"218"},{"ruleId":"207","severity":1,"message":"219","line":21,"column":15,"nodeType":"209","messageId":"210","endLine":21,"endColumn":25},{"ruleId":"207","severity":1,"message":"220","line":23,"column":15,"nodeType":"209","messageId":"210","endLine":23,"endColumn":25},{"ruleId":"221","severity":1,"message":"222","line":34,"column":23,"nodeType":"223","messageId":"224","endLine":34,"endColumn":25},{"ruleId":"221","severity":1,"message":"222","line":34,"column":41,"nodeType":"223","messageId":"224","endLine":34,"endColumn":43},{"ruleId":"221","severity":1,"message":"222","line":34,"column":62,"nodeType":"223","messageId":"224","endLine":34,"endColumn":64},{"ruleId":"221","severity":1,"message":"222","line":34,"column":81,"nodeType":"223","messageId":"224","endLine":34,"endColumn":83},{"ruleId":"221","severity":1,"message":"222","line":34,"column":102,"nodeType":"223","messageId":"224","endLine":34,"endColumn":104},{"ruleId":"221","severity":1,"message":"222","line":34,"column":123,"nodeType":"223","messageId":"224","endLine":34,"endColumn":125},{"ruleId":"225","severity":1,"message":"226","line":18,"column":17,"nodeType":"214","endLine":21,"endColumn":19},{"ruleId":"207","severity":1,"message":"227","line":6,"column":8,"nodeType":"209","messageId":"210","endLine":6,"endColumn":16},{"ruleId":"212","severity":1,"message":"228","line":282,"column":19,"nodeType":"214","endLine":284,"endColumn":20},{"ruleId":"225","severity":1,"message":"226","line":18,"column":17,"nodeType":"214","endLine":21,"endColumn":19},{"ruleId":"229","severity":1,"message":"230","line":68,"column":35,"nodeType":"231","messageId":"232","endLine":68,"endColumn":37},{"ruleId":"221","severity":1,"message":"222","line":88,"column":82,"nodeType":"223","messageId":"224","endLine":88,"endColumn":84},{"ruleId":"229","severity":1,"message":"230","line":43,"column":32,"nodeType":"231","messageId":"232","endLine":43,"endColumn":34},{"ruleId":"233","severity":1,"message":"234","line":401,"column":11,"nodeType":"214","endLine":401,"endColumn":88},{"ruleId":"233","severity":1,"message":"234","line":461,"column":11,"nodeType":"214","endLine":461,"endColumn":48},{"ruleId":"225","severity":1,"message":"226","line":543,"column":13,"nodeType":"214","endLine":543,"endColumn":50},{"ruleId":"215","replacedBy":"235"},{"ruleId":"217","replacedBy":"236"},{"ruleId":"207","severity":1,"message":"237","line":3,"column":8,"nodeType":"209","messageId":"210","endLine":3,"endColumn":9},{"ruleId":"207","severity":1,"message":"238","line":12,"column":25,"nodeType":"209","messageId":"210","endLine":12,"endColumn":33},{"ruleId":"207","severity":1,"message":"239","line":12,"column":49,"nodeType":"209","messageId":"210","endLine":12,"endColumn":59},{"ruleId":"207","severity":1,"message":"211","line":4,"column":10,"nodeType":"209","messageId":"210","endLine":4,"endColumn":14},{"ruleId":"207","severity":1,"message":"240","line":5,"column":8,"nodeType":"209","messageId":"210","endLine":5,"endColumn":12},{"ruleId":"207","severity":1,"message":"241","line":11,"column":10,"nodeType":"209","messageId":"210","endLine":11,"endColumn":17},{"ruleId":"207","severity":1,"message":"242","line":13,"column":8,"nodeType":"209","messageId":"210","endLine":13,"endColumn":19},{"ruleId":"243","severity":1,"message":"244","line":27,"column":7,"nodeType":"245","messageId":"224","endLine":27,"endColumn":11},{"ruleId":"221","severity":1,"message":"222","line":45,"column":25,"nodeType":"223","messageId":"224","endLine":45,"endColumn":27},{"ruleId":"221","severity":1,"message":"222","line":161,"column":31,"nodeType":"223","messageId":"224","endLine":161,"endColumn":33},{"ruleId":"221","severity":1,"message":"222","line":168,"column":38,"nodeType":"223","messageId":"224","endLine":168,"endColumn":40},{"ruleId":"221","severity":1,"message":"222","line":190,"column":30,"nodeType":"223","messageId":"224","endLine":190,"endColumn":32},{"ruleId":"221","severity":1,"message":"222","line":204,"column":25,"nodeType":"223","messageId":"224","endLine":204,"endColumn":27},{"ruleId":"221","severity":1,"message":"222","line":216,"column":26,"nodeType":"223","messageId":"224","endLine":216,"endColumn":28},{"ruleId":"221","severity":1,"message":"222","line":264,"column":15,"nodeType":"223","messageId":"224","endLine":264,"endColumn":17},{"ruleId":"221","severity":1,"message":"222","line":315,"column":26,"nodeType":"223","messageId":"224","endLine":315,"endColumn":28},{"ruleId":"207","severity":1,"message":"246","line":382,"column":35,"nodeType":"209","messageId":"210","endLine":382,"endColumn":39},{"ruleId":"212","severity":1,"message":"213","line":407,"column":19,"nodeType":"214","endLine":407,"endColumn":167},{"ruleId":"233","severity":1,"message":"234","line":423,"column":17,"nodeType":"214","endLine":427,"endColumn":18},{"ruleId":"212","severity":1,"message":"213","line":582,"column":19,"nodeType":"214","endLine":582,"endColumn":107},{"ruleId":"233","severity":1,"message":"234","line":595,"column":17,"nodeType":"214","endLine":599,"endColumn":18},{"ruleId":"207","severity":1,"message":"247","line":9,"column":8,"nodeType":"209","messageId":"210","endLine":9,"endColumn":13},{"ruleId":"243","severity":1,"message":"248","line":39,"column":7,"nodeType":"245","messageId":"224","endLine":39,"endColumn":16},{"ruleId":"221","severity":1,"message":"222","line":47,"column":26,"nodeType":"223","messageId":"224","endLine":47,"endColumn":28},{"ruleId":"243","severity":1,"message":"249","line":48,"column":59,"nodeType":"245","messageId":"224","endLine":48,"endColumn":64},{"ruleId":"243","severity":1,"message":"249","line":50,"column":60,"nodeType":"245","messageId":"224","endLine":50,"endColumn":65},{"ruleId":"207","severity":1,"message":"250","line":86,"column":13,"nodeType":"209","messageId":"210","endLine":86,"endColumn":20},{"ruleId":"251","severity":1,"message":"252","line":111,"column":17,"nodeType":"214","endLine":111,"endColumn":112},{"ruleId":"212","severity":1,"message":"213","line":153,"column":17,"nodeType":"214","endLine":153,"endColumn":50},{"ruleId":"229","severity":1,"message":"230","line":46,"column":35,"nodeType":"231","messageId":"232","endLine":46,"endColumn":37},{"ruleId":"207","severity":1,"message":"253","line":199,"column":13,"nodeType":"209","messageId":"210","endLine":199,"endColumn":29},{"ruleId":"221","severity":1,"message":"222","line":201,"column":70,"nodeType":"223","messageId":"224","endLine":201,"endColumn":72},{"ruleId":"221","severity":1,"message":"254","line":57,"column":25,"nodeType":"223","messageId":"224","endLine":57,"endColumn":27},{"ruleId":"225","severity":1,"message":"226","line":66,"column":37,"nodeType":"214","endLine":66,"endColumn":85},{"ruleId":"207","severity":1,"message":"238","line":21,"column":27,"nodeType":"209","messageId":"210","endLine":21,"endColumn":35},{"ruleId":"207","severity":1,"message":"239","line":21,"column":51,"nodeType":"209","messageId":"210","endLine":21,"endColumn":61},{"ruleId":"207","severity":1,"message":"255","line":2,"column":21,"nodeType":"209","messageId":"210","endLine":2,"endColumn":29},{"ruleId":"229","severity":1,"message":"230","line":53,"column":29,"nodeType":"231","messageId":"232","endLine":53,"endColumn":31},{"ruleId":"207","severity":1,"message":"256","line":2,"column":35,"nodeType":"209","messageId":"210","endLine":2,"endColumn":43},{"ruleId":"207","severity":1,"message":"246","line":59,"column":17,"nodeType":"209","messageId":"210","endLine":59,"endColumn":21},{"ruleId":"207","severity":1,"message":"242","line":4,"column":8,"nodeType":"209","messageId":"210","endLine":4,"endColumn":19},{"ruleId":"221","severity":1,"message":"254","line":159,"column":23,"nodeType":"223","messageId":"224","endLine":159,"endColumn":25},{"ruleId":"225","severity":1,"message":"226","line":181,"column":28,"nodeType":"214","endLine":181,"endColumn":76},{"ruleId":"229","severity":1,"message":"230","line":40,"column":33,"nodeType":"231","messageId":"232","endLine":40,"endColumn":35},{"ruleId":"221","severity":1,"message":"222","line":111,"column":31,"nodeType":"223","messageId":"224","endLine":111,"endColumn":33},{"ruleId":"221","severity":1,"message":"222","line":118,"column":38,"nodeType":"223","messageId":"224","endLine":118,"endColumn":40},{"ruleId":"229","severity":1,"message":"230","line":40,"column":35,"nodeType":"231","messageId":"232","endLine":40,"endColumn":37},{"ruleId":"207","severity":1,"message":"257","line":3,"column":8,"nodeType":"209","messageId":"210","endLine":3,"endColumn":14},{"ruleId":"229","severity":1,"message":"230","line":36,"column":24,"nodeType":"231","messageId":"232","endLine":36,"endColumn":26},"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["258"],"no-negated-in-lhs",["259"],"'editButton' is assigned a value but never used.","'cancelForm' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Reactdom' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.",["258"],["259"],"'$' is defined but never used.","'pristine' is assigned a value but never used.","'submitting' is assigned a value but never used.","'Card' is defined but never used.","'MDBIcon' is defined but never used.","'AuthService' is defined but never used.","no-dupe-keys","Duplicate key 'data'.","ObjectExpression","'user' is assigned a value but never used.","'Axios' is defined but never used.","Duplicate key 'userToken'.","Duplicate key 'role2'.","'balance' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'statusBookDetail' is defined but never used.","Expected '!==' and instead saw '!='.","'FormText' is defined but never used.","'Redirect' is defined but never used.","'Action' is defined but never used.","no-global-assign","no-unsafe-negation"]