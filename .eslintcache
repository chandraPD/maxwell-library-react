[{"C:\\Users\\ASUS\\maxwell-library-react\\src\\Services\\auth.service.js":"1","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Profile\\ChangePassword.js":"2","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\SideBar\\SideBar.js":"3","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\BookManagement\\BookManagement.js":"4","C:\\Users\\ASUS\\maxwell-library-react\\src\\Components\\Datatable\\Cell.js":"5","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Catalogue\\Catalogue.js":"6","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Auth\\Auth.js":"7","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\TopUp1.js":"8","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Home\\Home.js":"9","C:\\Users\\ASUS\\maxwell-library-react\\src\\Navigations\\MainNavigations.js":"10","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Wishlist\\Wishlist.js":"11","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Detail\\Detail.js":"12","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUpManagement\\TopUpManagement.js":"13","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Payment\\Payment.js":"14"},{"size":1195,"mtime":1610359212744,"results":"15","hashOfConfig":"16"},{"size":10606,"mtime":1609682650005,"results":"17","hashOfConfig":"16"},{"size":11190,"mtime":1610371815083,"results":"18","hashOfConfig":"16"},{"size":31306,"mtime":1610370345906,"results":"19","hashOfConfig":"16"},{"size":300,"mtime":1610259575640,"results":"20","hashOfConfig":"16"},{"size":6625,"mtime":1610359212741,"results":"21","hashOfConfig":"16"},{"size":20732,"mtime":1610359212726,"results":"22","hashOfConfig":"16"},{"size":3607,"mtime":1610083734246,"results":"23","hashOfConfig":"16"},{"size":8564,"mtime":1610359867201,"results":"24","hashOfConfig":"16"},{"size":8414,"mtime":1610371198195,"results":"25","hashOfConfig":"16"},{"size":2642,"mtime":1610380996723,"results":"26","hashOfConfig":"16"},{"size":11103,"mtime":1610380097472,"results":"27","hashOfConfig":"16"},{"size":27780,"mtime":1610381388129,"results":"28","hashOfConfig":"16"},{"size":15832,"mtime":1610381825475,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11ui09a",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ASUS\\maxwell-library-react\\src\\Services\\auth.service.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Profile\\ChangePassword.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\SideBar\\SideBar.js",["60","61","62","63","64","65","66","67","68"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\BookManagement\\BookManagement.js",["69"],"import React, { Component } from \"react\";\r\nimport DataTable from \"../../../Components/Datatable/Table\";\r\nimport Action from \"../../../Components/Datatable/Action\";\r\nimport $ from \"jquery\";\r\nimport \"datatables.net-responsive/js/dataTables.responsive\";\r\nimport \"datatables.net-dt/css/jquery.dataTables.css\";\r\nimport Swal from \"sweetalert2\";\r\nimport Axios from '../../../Instances/axios-instances';\r\n\r\nclass BookManagement extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      fields: {},\r\n      errors: {},\r\n      data: [],\r\n      rows: [],\r\n      results: [],\r\n      category: [],\r\n      author: [],\r\n      imgBanner: \"\",\r\n      imgDetail: \"\",\r\n      chooseFileBanner: \"Choose Image Banner\",\r\n      chooseFileDetail: \"Choose Image Detail\"\r\n    };\r\n\r\n    this.bookChange = this.bookChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCategory();\r\n    this.getAuthor();\r\n    this.fetchData();\r\n  }\r\n\r\n  async getCategory() {\r\n    let fetchCategory = await Axios.get(\r\n      \"/category/get-all-active\"\r\n    );\r\n    console.log(fetchCategory);\r\n    const resultCategory = fetchCategory.data;\r\n    this.setState({ category: resultCategory });\r\n  }\r\n\r\n  async getAuthor() {\r\n    let fetchAuthor = await Axios.get('/author/getAll')\r\n    console.log(fetchAuthor)\r\n    const resultAuthor = fetchAuthor.data\r\n    this.setState({author: resultAuthor})\r\n  }\r\n\r\n  async fetchData() {\r\n    $(\"#example1\").DataTable().destroy();\r\n    let results = [];\r\n\r\n    var no = 1;\r\n\r\n    await Axios.get('/book/get-all-active')\r\n        .then((response) => {\r\n          const result = response.data\r\n          console.log(response)\r\n          this.setState({data: result})\r\n          result.map((book) => {\r\n            let row = [];\r\n\r\n            row.push(<td className=\"text-center\">{no++}</td>);\r\n            row.push(\r\n              <td className=\"text-center py-0 align-middle\">\r\n                <div className=\"btn-group btn-group-sm\">\r\n                  <Action\r\n                    type=\"success\"\r\n                    title=\"Edit\"\r\n                    icon=\"pen\"\r\n                    dataToggle=\"modal\"\r\n                    dataTarget=\"#modal-edit\"\r\n                    onClick={() => this.getBook(book.bookId)}\r\n                  />\r\n                  <Action\r\n                    type=\"danger\"\r\n                    title=\"Delete\"\r\n                    icon=\"trash\"\r\n                    dataToggle=\"modal\"\r\n                    dataTarget=\"#modal-delete\"\r\n                    onClick={() => this.getBook(book.bookId)}\r\n                  />\r\n                  <Action\r\n                    type=\"info\"\r\n                    title=\"Detail\"\r\n                    icon=\"eye\"\r\n                    link={`BookDetail/${book.bookId}`}\r\n                  />\r\n                </div>\r\n              </td>\r\n            );\r\n            row.push(<td className=\"text-center\">{book.bookCode}</td>);\r\n            row.push(<td className=\"text-center\">{book.title}</td>);\r\n            row.push(<td className=\"text-center\">{book.authorEntity.authorName}</td>);\r\n            row.push(<td className=\"text-center\"><img src={book.imgBanner} alt=\"placeholder\" style={{width: 146, height: 100}} /></td>);\r\n            row.push(<td className=\"text-center\"><img src={book.imgDetail} alt=\"placeholder\" style={{width: 100, height: 146}} /></td>);\r\n            row.push(<td className=\"text-center\">{book.publishDate}</td>);\r\n            row.push(<td className=\"text-center\">{book.qty}</td>);\r\n            row.push(<td className=\"text-center\">{book.categoryEntity.category}</td>);\r\n            results.push(row);\r\n                })\r\n            this.setState({ rows: results });\r\n\r\n            $(\"#example1\").DataTable({\r\n              responsive: true,\r\n              autoWidth: false,\r\n            });\r\n        })\r\n  }\r\n\r\n  bookChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n    let errors = {}\r\n\r\n    errors[\"title\"] = \"\"\r\n    errors[\"author\"] = \"\"\r\n    errors[\"description\"] = \"\"\r\n    errors[\"publishDate\"] = \"\"\r\n    errors[\"categoryId\"] = \"\"\r\n    errors[\"imgBanner\"] = \"\"\r\n    errors[\"imgDetail\"] = \"\"\r\n    this.setState({errors: errors})\r\n  };\r\n\r\n  resetModal() {\r\n    let fields = this.state.fields\r\n    fields[\"title\"] = \"\"\r\n    fields[\"author\"] = \"\"\r\n    fields[\"categoryId\"] = \"\"\r\n    fields[\"statusBook\"] = \"\"\r\n    fields[\"description\"] = \"\"\r\n    fields[\"publishDate\"] = \"\"\r\n    fields[\"statusBook\"] = \"\"\r\n    fields[\"imgBanner\"] = \"\"\r\n    fields[\"imgDetail\"] = \"\"\r\n    fields[\"title\"] = \"\"\r\n\r\n    let errors = {}\r\n    errors[\"title\"] = \"\"\r\n    errors[\"author\"] = \"\"\r\n    errors[\"categoryId\"] = \"\"\r\n    errors[\"statusBook\"] = \"\"\r\n    errors[\"description\"] = \"\"\r\n    errors[\"publishDate\"] = \"\"\r\n    errors[\"statusBook\"] = \"\"\r\n    errors[\"imgBanner\"] = \"\"\r\n    errors[\"imgDetail\"] = \"\"\r\n    errors[\"title\"] = \"\"\r\n\r\n    this.setState({fields: fields})\r\n    this.setState({errors: errors})\r\n    this.setState({imgDetail: \"\"})\r\n    this.setState({imgBanner: \"\"})\r\n    this.setState({chooseFileDetail: \"Choose Image Detail\"})\r\n    this.setState({chooseFileBanner: \"Choose Image Banner\"})\r\n  }\r\n\r\n  getBook = (id) => {\r\n    Axios.get(\"/book/get-by-id/\" + id).then((response) => {\r\n      console.log(response);\r\n\r\n      this.setState({\r\n        authorId: response.data.authorEntity.authorId,\r\n        description: response.data.description,\r\n        imgBanner: response.data.imgBanner,\r\n        imgDetail: response.data.imgDetail,\r\n        publishDate: response.data.publishDate,\r\n        qty: response.data.qty,\r\n        statusBook: response.data.statusBook,\r\n        title: response.data.title,\r\n        categoryId: response.data.categoryEntity.categoryId,\r\n        bookId: id,\r\n      });\r\n    });\r\n  };\r\n\r\n  updateBook = (id) => {\r\n    let user = JSON.parse(localStorage.getItem(\"user\"));\r\n    const token = user.token;\r\n    console.log(token)\r\n    const config = {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    };\r\n\r\n    const book = {\r\n      authorId: this.state.authorId,\r\n      description: this.state.description,\r\n      imgBanner: this.state.imgBanner,\r\n      imgDetail: this.state.imgDetail,\r\n      publishDate: this.state.publishDate,\r\n      qty: this.state.qty,\r\n      statusBook: this.state.statusBook,\r\n      title: this.state.title,\r\n      categoryId: this.state.categoryId,\r\n    };\r\n\r\n    console.log(book)\r\n\r\n    if(this.handleValidationUpdate()) {\r\n      Axios\r\n      .put(\"/book/update-book/\" + id, book, config)\r\n      .then((response) => {\r\n        console.log(response);\r\n        $(\"#modal-edit\").modal(\"toggle\");\r\n        $('.modal-backdrop').remove();\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          title: \"Success\",\r\n          text: \"Your Data has been Updated\",\r\n          confirmButtonText: `OK`,\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            this.fetchData()\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n  };\r\n\r\n  deleteBook = (id) => {\r\n    Axios\r\n      .put(\"/book/delete-book/\" + id)\r\n      .then((response) => {\r\n        console.log(response);\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          title: \"Success\",\r\n          text: \"Your Data has been Deleted\",\r\n          confirmButtonText: `OK`,\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            this.fetchData()\r\n            \r\n          }\r\n        });\r\n      });\r\n  };\r\n\r\n  handleChange(field, e) {\r\n    let fields = this.state.fields;\r\n    let errors = {}\r\n\r\n    errors[\"title\"] = \"\"\r\n    errors[\"author\"] = \"\"\r\n    errors[\"description\"] = \"\"\r\n    errors[\"publishDate\"] = \"\"\r\n    errors[\"categoryId\"] = \"\"\r\n    errors[\"imgBanner\"] = \"\"\r\n    errors[\"imgDetail\"] = \"\"\r\n    fields[field] = e.target.value;\r\n    this.setState({ fields });\r\n    this.setState({errors: errors})\r\n    \r\n  }\r\n\r\n  handleImageDetail = (e) => {\r\n    const fileImg = e.target.files[0]\r\n    this.setState({chooseFileDetail: fileImg.name})\r\n    console.log(this.state.chooseFileDetail)\r\n    const fileReader = new FileReader();\r\n\r\n    fileReader.readAsDataURL(fileImg)\r\n\r\n    fileReader.onload = e => {\r\n      let base64Image = e.target.result\r\n      let base64ImageStrip = base64Image.split(\"base64,\")[1];\r\n      \r\n      this.setState({imgDetail: base64ImageStrip})\r\n      console.log(this.state.imgDetail)\r\n    }\r\n  }\r\n\r\n  handleImageBanner = (e) => {\r\n    const fileImg = e.target.files[0]\r\n    let errors = {}\r\n    errors[\"imgBanner\"] = \"\"\r\n    this.setState({chooseFileBanner: fileImg.name})\r\n    console.log(this.state.chooseFileBanner)\r\n    const fileReader = new FileReader();\r\n\r\n    fileReader.readAsDataURL(fileImg)\r\n\r\n    fileReader.onload = e => {\r\n      let base64Image = e.target.result\r\n      let base64ImageStrip = base64Image.split(\"base64,\")[1];\r\n      \r\n      this.setState({imgBanner: base64ImageStrip})\r\n      console.log(this.state.imgBanner)\r\n    }\r\n    this.setState({errors: errors})\r\n  }\r\n\r\n\r\n  handleValidation() {\r\n    let fields = this.state.fields;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    // Title\r\n    if (!fields[\"title\"]) {\r\n      formIsValid = false;\r\n      errors[\"title\"] = \"Title cannot be empty\";\r\n    }\r\n\r\n    //Author\r\n    if (!fields[\"author\"]) {\r\n      formIsValid = false;\r\n      errors[\"author\"] = \"Author cannot be empty\";\r\n    }\r\n\r\n    //Description\r\n    if (!fields[\"description\"]) {\r\n      formIsValid = false;\r\n      errors[\"description\"] = \"Description cannot be empty\";\r\n    }\r\n\r\n    //Publish Date\r\n    if (!fields[\"publishDate\"]) {\r\n      formIsValid = false;\r\n      errors[\"publishDate\"] = \"Publish Date cannot be empty\";\r\n    }\r\n\r\n    //Category\r\n    if (!fields[\"categoryId\"]) {\r\n      formIsValid = false;\r\n      errors[\"categoryId\"] = \"Please Choose a Category!\";\r\n    }\r\n\r\n    if(this.state.imgBanner === \"\") {\r\n      formIsValid = false;\r\n      errors[\"imgBanner\"] = \"Image Banner cannot be empty!\";\r\n    }\r\n\r\n    if(this.state.imgDetail === \"\") {\r\n      formIsValid = false;\r\n      errors[\"imgDetail\"] = \"Image Detail cannot be empty!\";\r\n    }\r\n\r\n    this.setState({ errors: errors });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleValidationUpdate() {\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    if(this.state.title === \"\") {\r\n      formIsValid = false;\r\n      errors[\"title\"] = \"Title cannot be empty\";\r\n    }\r\n\r\n    if(this.state.authorId === \"\") {\r\n      formIsValid = false;\r\n      errors[\"author\"] = \"Author cannot be empty\";\r\n    }\r\n\r\n    if(this.state.categoryId === \"\") {\r\n      formIsValid = false;\r\n      errors[\"categoryId\"] = \"Please Choose a Category!\";\r\n    }\r\n\r\n    if(this.state.description === \"\") {\r\n      formIsValid = false;\r\n      errors[\"description\"] = \"Description cannot be empty\";\r\n    }\r\n\r\n    this.setState({ errors: errors });\r\n    return formIsValid;\r\n  }\r\n\r\n  contactSubmit(e) {\r\n    let fields = this.state.fields;\r\n    let user = JSON.parse(localStorage.getItem(\"user\"));\r\n    const token = user.token;\r\n    const config = {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    };\r\n\r\n    e.preventDefault();\r\n    if (this.handleValidation()) {\r\n      $(\"#modal-add\").modal(\"toggle\");\r\n      $('.modal-backdrop').remove();\r\n      const book = {\r\n        authorId: fields[\"author\"],\r\n        description: fields[\"description\"],\r\n        imgBanner: this.state.imgBanner,\r\n        imgDetail: this.state.imgDetail,\r\n        qty: fields[\"qty\"],\r\n        statusBook: fields[\"statusBook\"],\r\n        title: fields[\"title\"],\r\n        categoryId: fields[\"categoryId\"],\r\n        publishDate: fields[\"publishDate\"],\r\n      };\r\n\r\n      console.log(book);\r\n\r\n      Axios\r\n        .post(\"/book/add-book\", book, config)\r\n        .then((response) => {\r\n          console.log(response);\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: \"Success\",\r\n            text: \"Your Data has been Added\",\r\n            confirmButtonText: `OK`,\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              this.fetchData()\r\n              this.resetModal()\r\n            }\r\n          });\r\n        }).catch((error) =>\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Error\",\r\n          text: \"Book already exist!\",\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            $(\"#modal-add\").modal(\"toggle\");\r\n          }\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { rows, category, author } = this.state;\r\n    const headings = [\r\n      \"No.\",\r\n      \"Action\",\r\n      \"Book ID\",\r\n      \"Title\",\r\n      \"Author\",\r\n      \"Image Banner\",\r\n      \"Image Detail\",\r\n      \"Publish Date\",\r\n      \"Quantity\",\r\n      \"Category\",\r\n    ];\r\n\r\n    return (\r\n      <div className=\"content-wrapper\">\r\n        <section className=\"content-header\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col-sm-6\">\r\n                <h1>Book Management</h1>\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <ol className=\"breadcrumb float-sm-right\">\r\n                  <li className=\"breadcrumb-item\">\r\n                    <a href=\"index.html\">Home</a>\r\n                  </li>\r\n                  <li className=\"breadcrumb-item active\">Book Management</li>\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/* Main content */}\r\n        <section className=\"content\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12 ctm-responsive\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary add-btn\"\r\n                          data-toggle=\"modal\"\r\n                          data-target=\"#modal-add\"\r\n                          style={{ float: \"right\" }}\r\n                        >\r\n                          <i className=\"nav-icon fas fa-plus\"></i>\r\n                          &nbsp; Add Book\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  {/* /.card-header */}\r\n                  <div className=\"card-body\">\r\n                    <DataTable headings={headings} rows={rows} />\r\n                    {/* /.card-body */}\r\n                  </div>\r\n                </div>\r\n                {/* /.card */}\r\n              </div>\r\n              {/* /.col */}\r\n            </div>\r\n            {/* /.row */}\r\n          </div>\r\n          {/* /.container-fluid */}\r\n        </section>\r\n        {/* /.content */}\r\n\r\n        {/* <!--Modal Add--> */}\r\n        <div className=\"modal fade\" id=\"modal-add\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Add Book</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <form id=\"addBook\" onSubmit={this.contactSubmit.bind(this)}>\r\n                <div className=\"modal-body\">\r\n                  <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-sm-6\">\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"inputTitle\">Title</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"inputTitle\"\r\n                            name=\"title\"\r\n                            placeholder=\"Enter Title\"\r\n                            onChange={this.handleChange.bind(this, \"title\")}\r\n                            value={this.state.fields[\"title\"]}\r\n                          />\r\n                          <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"title\"]}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"col-sm-6\">\r\n                      <div className=\"form-group\">\r\n                      <label htmlFor=\"inputAuthor\">Author</label>\r\n                      <select\r\n                        name=\"authorId\"\r\n                        className=\"form-control\"\r\n                        id=\"inputAuthor\"\r\n                        value={this.state.fields[\"author\"]}\r\n                        onChange={this.handleChange.bind(this, \"author\")}\r\n                      >\r\n                        <option value=\"null\">Choose Author</option>\r\n                        {author.map((author) => {\r\n                          return (\r\n                            <option value={author.authorId}>\r\n                              {author.authorName}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </select>\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"author\"]}\r\n                      </span>\r\n                    </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    \r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"inputCategoryId\">Category</label>\r\n                      <select\r\n                        name=\"categoryId\"\r\n                        className=\"form-control\"\r\n                        id=\"inputCategoryId\"\r\n                        value={this.state.fields[\"categoryId\"]}\r\n                        onChange={this.handleChange.bind(this, \"categoryId\")}\r\n                      >\r\n                        <option value=\"null\">Choose Category</option>\r\n                        {category.map((category) => {\r\n                          return (\r\n                            <option value={category.categoryId}>\r\n                              {category.category}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </select>\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"categoryId\"]}\r\n                      </span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"inputDescription\">Description</label>\r\n                      <textarea\r\n                        className=\"form-control\"\r\n                        id=\"inputDescription\"\r\n                        name=\"description\"\r\n                        placeholder=\"Enter Description\"\r\n                        rows=\"4\"\r\n                        cols=\"50\"\r\n                        onChange={this.handleChange.bind(this, \"description\")}\r\n                        value={this.state.fields[\"description\"]}\r\n                      ></textarea>\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"description\"]}\r\n                      </span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                    <label htmlFor=\"inputImgBanner\">Image Banner</label>\r\n                      <div className=\"input-group\">\r\n                        <div className=\"custom-file\">\r\n                          <input type=\"file\" accept=\"image/*\" className=\"custom-file-input\" id=\"inputImgBanner\" name=\"imgBanner\" onChange={this.handleImageBanner}\r\n                        value={this.state.fields[\"imgBanner\"]}/>\r\n                          <label className=\"custom-file-label\" for=\"exampleInputFile\" style={{overflow:\"hidden\"}}>{this.state.chooseFileBanner}</label>                   \r\n                        </div>\r\n                      </div> \r\n                      <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"imgBanner\"]}\r\n                          </span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"inputImgDetail\">Image Detail</label>\r\n                      <div className=\"input-group\">\r\n                        <div className=\"custom-file\">\r\n                          <input type=\"file\" accept=\"image/*\" className=\"custom-file-input\" id=\"inputImgDetail\" name=\"imgDetail\" onChange={this.handleImageDetail}\r\n                        value={this.state.fields[\"imgDetail\"]}/>\r\n                          <label className=\"custom-file-label\" for=\"exampleInputFile\" style={{overflow:\"hidden\"}}>{this.state.chooseFileDetail}</label>                   \r\n                        </div>\r\n                      </div>\r\n                      <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"imgDetail\"]}\r\n                          </span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"inputPublishDate\">Publish Date</label>\r\n                      <input\r\n                        type=\"date\"\r\n                        className=\"form-control\"\r\n                        id=\"inputPublishDate\"\r\n                        name=\"publishDate\"\r\n                        placeholder=\"Enter Publish Date\"\r\n                        onChange={this.handleChange.bind(this, \"publishDate\")}\r\n                        value={this.state.fields[\"publishDate\"]}\r\n                      />\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"publishDate\"]}\r\n                      </span>\r\n                    </div>\r\n\r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer justify-content-between\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-default\"\r\n                    data-dismiss=\"modal\"\r\n                    onClick={() => this.resetModal()}\r\n                  >\r\n                    Close\r\n                  </button>\r\n                  <button type=\"submit\" className=\"btn btn-warning\">\r\n                    Add\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n\r\n        {/* <!--Modal Edit--> */}\r\n        <div className=\"modal fade\" id=\"modal-edit\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Edit Book</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <form id=\"editBook\">\r\n                <div className=\"modal-body\">\r\n                  <div className=\"card-body\">\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"editTitle\">Title</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"editTitle\"\r\n                            name=\"title\"\r\n                            onChange={this.bookChange}\r\n                            value={this.state.title}\r\n                          />\r\n                          <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"title\"]}\r\n                          </span>\r\n                        </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"editAuthor\">Author</label>\r\n                      <select\r\n                        name=\"authorId\"\r\n                        className=\"form-control\"\r\n                        id=\"editAuthor\"\r\n                        value={this.state.authorId}\r\n                        onChange={this.bookChange}\r\n                      >\r\n                        {author.map((author) => {\r\n                          return (\r\n                            <option value={author.authorId}>\r\n                              {author.authorName}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </select>\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"author\"]}\r\n                      </span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"editCategoryId\">Category</label>\r\n                      <select\r\n                        name=\"categoryId\"\r\n                        className=\"form-control\"\r\n                        id=\"editCategoryId\"\r\n                        value={this.state.categoryId}\r\n                        onChange={this.bookChange}\r\n                      >\r\n                        {category.map((category) => {\r\n                          return (\r\n                            <option value={category.categoryId}>\r\n                              {category.category}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </select>\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"categoryId\"]}\r\n                      </span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"editDescription\">Description</label>\r\n                      <textarea\r\n                        className=\"form-control\"\r\n                        id=\"editDescription\"\r\n                        name=\"description\"\r\n                        placeholder=\"Enter Description\"\r\n                        rows=\"4\"\r\n                        cols=\"50\"\r\n                        onChange={this.bookChange}\r\n                        value={this.state.description}\r\n                      ></textarea>\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"description\"]}\r\n                      </span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                    <label htmlFor=\"editImgBanner\">Image Banner</label>\r\n                      <div className=\"input-group\">\r\n                        <div className=\"custom-file\">\r\n                          <input type=\"file\" accept=\"image/*\" className=\"custom-file-input\" id=\"editImgBanner\" name=\"imgBanner\" onChange={this.handleImageBanner}  />\r\n                          <label className=\"custom-file-label\" for=\"exampleInputFile\" style={{overflow:\"hidden\"}}>{this.state.imgBanner}</label>                   \r\n                        </div>\r\n                      </div> \r\n                      <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"imgBanner\"]}\r\n                          </span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"editImgDetail\">Image Detail</label>\r\n                      <div className=\"input-group\">\r\n                        <div className=\"custom-file\">\r\n                          <input type=\"file\" accept=\"image/*\" className=\"custom-file-input\" id=\"editImgDetail\" name=\"imgDetail\" onChange={this.handleImageDetail}/>\r\n                          <label className=\"custom-file-label\" for=\"exampleInputFile\" style={{overflow:\"hidden\"}}>{this.state.imgDetail}</label>                   \r\n                        </div>\r\n                      </div>\r\n                      <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"imgDetail\"]}\r\n                          </span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"editPublishDate\">Publish Date</label>\r\n                      <input\r\n                        type=\"date\"\r\n                        className=\"form-control\"\r\n                        id=\"editPublishDate\"\r\n                        name=\"publishDate\"\r\n                        placeholder=\"Enter Publish Date\"\r\n                        onChange={this.bookChange}\r\n                        value={this.state.publishDate}\r\n                      />\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"publishDate\"]}\r\n                      </span>\r\n                    </div>\r\n\r\n                   \r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer justify-content-between\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-default\"\r\n                    data-dismiss=\"modal\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => this.updateBook(this.state.bookId)}\r\n                    className=\"btn btn-warning\"\r\n                  >\r\n                    Save changes\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n\r\n        {/* <!--Modal Delete--> */}\r\n        <div className=\"modal fade\" id=\"modal-delete\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Delete Book</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                If you Delete this, you can't be returned\r\n              </div>\r\n              <div className=\"modal-footer justify-content-between\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-default\"\r\n                  data-dismiss=\"modal\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-warning\"\r\n                  type=\"button\"\r\n                  data-dismiss=\"modal\"\r\n                  onClick={() => this.deleteBook(this.state.bookId)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BookManagement;\r\n","C:\\Users\\ASUS\\maxwell-library-react\\src\\Components\\Datatable\\Cell.js",["70"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Catalogue\\Catalogue.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Auth\\Auth.js",["71","72","73","74","75","76","77"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\TopUp1.js",["78","79","80","81","82"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Home\\Home.js",["83","84","85"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Navigations\\MainNavigations.js",["86","87"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Wishlist\\Wishlist.js",["88","89","90","91"],"import React, { Component } from 'react';\r\nimport firstHero from '../../../Assets/Media/books/hero1.png';\r\nimport secondtHero from '../../../Assets/Media/books/hero2.png';\r\nimport thirdHero from '../../../Assets/Media/books/hero3.png';\r\nimport Flickity from 'react-flickity-component';\r\nimport { Link } from 'react-router-dom';\r\nimport Axios from '../../../Instances/axios-instances';\r\n\r\nclass Wishlist extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       \r\n       allBook: []\r\n       \r\n    }\r\n  }\r\n  \r\n\r\n  componentDidMount() {    \r\n    this.getAllWish();\r\n    let user = JSON.parse( localStorage.getItem('user'))\r\n    const userToken = user.token;\r\n    console.log(userToken);\r\n  }\r\n  async getAllWish() {\r\n    let fetchBook = await Axios.get('/wishlist/getAll')\r\n    console.log(fetchBook);\r\n    this.setState({allBook: fetchBook.data})\r\n  }\r\n\r\n  render() {\r\n    const { allBook} = this.state\r\n\r\n    return (\r\n      <div className=\"content-wrapper\">\r\n        <section className=\"content\">        \r\n\r\n          {/* Top picks init */}\r\n          <div className=\"container-fluid book-list\">\r\n            <div className=\"list-book-content\">\r\n              <div className=\"col-12\">\r\n                <div className=\"custom-flex2\">\r\n                  <h2 className=\"title-container\">Wishlist Book</h2>\r\n                  <h4 className=\"title-container\">\r\n                    This is where your favorite book place\r\n                  </h4>\r\n                </div>\r\n                <div className=\"filter-container p-0 row custom-flex\">\r\n\r\n                  {allBook.map((data) => {\r\n                    console.log(data)\r\n                    return (\r\n                      <div className=\"top-seller\">\r\n                        <div className=\"filtr-item list-book\" />\r\n                        <Link to={`Detail/${data.bookEntity.bookId}`}>\r\n                          <img\r\n                            src={data.bookEntity.imgDetail}\r\n                            className=\"img-fluid img-book\"\r\n                            alt=\"white sample\"\r\n                          />                          \r\n                        </Link>\r\n                    </div>\r\n                    )\r\n                  })}\r\n                  \r\n                </div>\r\n                <div className=\"books-nf\" style={{ display: 'none' }}>\r\n                  <h3 className=\"book-not-found\">Oops, Book Not Found</h3>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Top picks ends */}        \r\n        </section>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Wishlist;\r\n","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Detail\\Detail.js",["92","93","94","95","96","97"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUpManagement\\TopUpManagement.js",["98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Payment\\Payment.js",["116","117"],{"ruleId":"118","severity":1,"message":"119","line":4,"column":8,"nodeType":"120","messageId":"121","endLine":4,"endColumn":18},{"ruleId":"118","severity":1,"message":"122","line":9,"column":8,"nodeType":"120","messageId":"121","endLine":9,"endColumn":13},{"ruleId":"123","severity":1,"message":"124","line":39,"column":7,"nodeType":"125","messageId":"126","endLine":39,"endColumn":16},{"ruleId":"127","severity":1,"message":"128","line":48,"column":26,"nodeType":"129","messageId":"126","endLine":48,"endColumn":28},{"ruleId":"123","severity":1,"message":"130","line":49,"column":59,"nodeType":"125","messageId":"126","endLine":49,"endColumn":64},{"ruleId":"123","severity":1,"message":"130","line":51,"column":60,"nodeType":"125","messageId":"126","endLine":51,"endColumn":65},{"ruleId":"118","severity":1,"message":"131","line":99,"column":13,"nodeType":"120","messageId":"121","endLine":99,"endColumn":20},{"ruleId":"132","severity":1,"message":"133","line":124,"column":17,"nodeType":"134","endLine":124,"endColumn":125},{"ruleId":"135","severity":1,"message":"136","line":174,"column":17,"nodeType":"134","endLine":174,"endColumn":50},{"ruleId":"137","severity":1,"message":"138","line":63,"column":29,"nodeType":"139","messageId":"140","endLine":63,"endColumn":31},{"ruleId":"118","severity":1,"message":"141","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":26},{"ruleId":"118","severity":1,"message":"142","line":5,"column":10,"nodeType":"120","messageId":"121","endLine":5,"endColumn":14},{"ruleId":"118","severity":1,"message":"143","line":5,"column":16,"nodeType":"120","messageId":"121","endLine":5,"endColumn":24},{"ruleId":"127","severity":1,"message":"128","line":48,"column":91,"nodeType":"129","messageId":"126","endLine":48,"endColumn":93},{"ruleId":"127","severity":1,"message":"128","line":86,"column":91,"nodeType":"129","messageId":"126","endLine":86,"endColumn":93},{"ruleId":"127","severity":1,"message":"128","line":122,"column":95,"nodeType":"129","messageId":"126","endLine":122,"endColumn":97},{"ruleId":"132","severity":1,"message":"133","line":281,"column":17,"nodeType":"134","endLine":281,"endColumn":81},{"ruleId":"144","severity":1,"message":"145","line":378,"column":17,"nodeType":"134","endLine":378,"endColumn":53},{"ruleId":"118","severity":1,"message":"146","line":14,"column":7,"nodeType":"120","messageId":"121","endLine":14,"endColumn":14},{"ruleId":"118","severity":1,"message":"147","line":24,"column":11,"nodeType":"120","messageId":"121","endLine":24,"endColumn":22},{"ruleId":"118","severity":1,"message":"148","line":24,"column":38,"nodeType":"120","messageId":"121","endLine":24,"endColumn":46},{"ruleId":"118","severity":1,"message":"149","line":24,"column":48,"nodeType":"120","messageId":"121","endLine":24,"endColumn":60},{"ruleId":"118","severity":1,"message":"150","line":24,"column":62,"nodeType":"120","messageId":"121","endLine":24,"endColumn":72},{"ruleId":"118","severity":1,"message":"151","line":3,"column":8,"nodeType":"120","messageId":"121","endLine":3,"endColumn":17},{"ruleId":"118","severity":1,"message":"152","line":4,"column":8,"nodeType":"120","messageId":"121","endLine":4,"endColumn":19},{"ruleId":"118","severity":1,"message":"153","line":5,"column":8,"nodeType":"120","messageId":"121","endLine":5,"endColumn":17},{"ruleId":"118","severity":1,"message":"143","line":2,"column":35,"nodeType":"120","messageId":"121","endLine":2,"endColumn":43},{"ruleId":"118","severity":1,"message":"154","line":61,"column":17,"nodeType":"120","messageId":"121","endLine":61,"endColumn":21},{"ruleId":"118","severity":1,"message":"151","line":2,"column":8,"nodeType":"120","messageId":"121","endLine":2,"endColumn":17},{"ruleId":"118","severity":1,"message":"152","line":3,"column":8,"nodeType":"120","messageId":"121","endLine":3,"endColumn":19},{"ruleId":"118","severity":1,"message":"153","line":4,"column":8,"nodeType":"120","messageId":"121","endLine":4,"endColumn":17},{"ruleId":"118","severity":1,"message":"155","line":5,"column":8,"nodeType":"120","messageId":"121","endLine":5,"endColumn":16},{"ruleId":"127","severity":1,"message":"128","line":38,"column":25,"nodeType":"129","messageId":"126","endLine":38,"endColumn":27},{"ruleId":"123","severity":1,"message":"130","line":39,"column":64,"nodeType":"125","messageId":"126","endLine":39,"endColumn":69},{"ruleId":"123","severity":1,"message":"130","line":41,"column":65,"nodeType":"125","messageId":"126","endLine":41,"endColumn":70},{"ruleId":"127","severity":1,"message":"128","line":150,"column":32,"nodeType":"129","messageId":"126","endLine":150,"endColumn":34},{"ruleId":"156","severity":1,"message":"157","line":219,"column":21,"nodeType":"134","endLine":219,"endColumn":104},{"ruleId":"156","severity":1,"message":"157","line":226,"column":23,"nodeType":"134","endLine":226,"endColumn":77},{"ruleId":"118","severity":1,"message":"142","line":4,"column":10,"nodeType":"120","messageId":"121","endLine":4,"endColumn":14},{"ruleId":"118","severity":1,"message":"158","line":5,"column":8,"nodeType":"120","messageId":"121","endLine":5,"endColumn":12},{"ruleId":"118","severity":1,"message":"159","line":11,"column":10,"nodeType":"120","messageId":"121","endLine":11,"endColumn":17},{"ruleId":"118","severity":1,"message":"160","line":13,"column":8,"nodeType":"120","messageId":"121","endLine":13,"endColumn":19},{"ruleId":"123","severity":1,"message":"161","line":27,"column":7,"nodeType":"125","messageId":"126","endLine":27,"endColumn":11},{"ruleId":"127","severity":1,"message":"128","line":45,"column":25,"nodeType":"129","messageId":"126","endLine":45,"endColumn":27},{"ruleId":"127","severity":1,"message":"128","line":161,"column":31,"nodeType":"129","messageId":"126","endLine":161,"endColumn":33},{"ruleId":"127","severity":1,"message":"128","line":168,"column":38,"nodeType":"129","messageId":"126","endLine":168,"endColumn":40},{"ruleId":"127","severity":1,"message":"128","line":190,"column":30,"nodeType":"129","messageId":"126","endLine":190,"endColumn":32},{"ruleId":"127","severity":1,"message":"128","line":204,"column":25,"nodeType":"129","messageId":"126","endLine":204,"endColumn":27},{"ruleId":"127","severity":1,"message":"128","line":216,"column":26,"nodeType":"129","messageId":"126","endLine":216,"endColumn":28},{"ruleId":"127","severity":1,"message":"128","line":264,"column":15,"nodeType":"129","messageId":"126","endLine":264,"endColumn":17},{"ruleId":"127","severity":1,"message":"128","line":315,"column":26,"nodeType":"129","messageId":"126","endLine":315,"endColumn":28},{"ruleId":"118","severity":1,"message":"154","line":370,"column":35,"nodeType":"120","messageId":"121","endLine":370,"endColumn":39},{"ruleId":"135","severity":1,"message":"136","line":395,"column":19,"nodeType":"134","endLine":395,"endColumn":167},{"ruleId":"144","severity":1,"message":"145","line":411,"column":17,"nodeType":"134","endLine":415,"endColumn":18},{"ruleId":"135","severity":1,"message":"136","line":570,"column":19,"nodeType":"134","endLine":570,"endColumn":145},{"ruleId":"144","severity":1,"message":"145","line":583,"column":17,"nodeType":"134","endLine":587,"endColumn":18},{"ruleId":"127","severity":1,"message":"162","line":141,"column":23,"nodeType":"129","messageId":"126","endLine":141,"endColumn":25},{"ruleId":"156","severity":1,"message":"157","line":163,"column":28,"nodeType":"134","endLine":163,"endColumn":76},"no-unused-vars","'avatarUser' is defined but never used.","Identifier","unusedVar","'Axios' is defined but never used.","no-dupe-keys","Duplicate key 'userToken'.","ObjectExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","Duplicate key 'role2'.","'balance' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Component' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","'refresh' is assigned a value but never used.","'handlekeyup' is assigned a value but never used.","'pristine' is assigned a value but never used.","'previousPage' is assigned a value but never used.","'submitting' is assigned a value but never used.","'firstHero' is defined but never used.","'secondtHero' is defined but never used.","'thirdHero' is defined but never used.","'user' is assigned a value but never used.","'Flickity' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Card' is defined but never used.","'MDBIcon' is defined but never used.","'AuthService' is defined but never used.","Duplicate key 'data'.","Expected '!==' and instead saw '!='."]