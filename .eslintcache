[{"C:\\Users\\ASUS\\maxwell-library-react\\src\\Instances\\axios-instances.js":"1","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\CategoryManagement\\CategoryManagement.js":"2","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\BookManagement\\BookManagement.js":"3","C:\\Users\\ASUS\\maxwell-library-react\\src\\Services\\auth.service.js":"4","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Detail\\Detail.js":"5","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\TopUp1.js":"6","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\Validate.js":"7"},{"size":364,"mtime":1610675970795,"results":"8","hashOfConfig":"9"},{"size":16138,"mtime":1610675941789,"results":"10","hashOfConfig":"9"},{"size":33175,"mtime":1610675941787,"results":"11","hashOfConfig":"9"},{"size":1262,"mtime":1610675964184,"results":"12","hashOfConfig":"9"},{"size":23837,"mtime":1610679123820,"results":"13","hashOfConfig":"9"},{"size":3533,"mtime":1610681332376,"results":"14","hashOfConfig":"9"},{"size":1069,"mtime":1610681326098,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11ui09a",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ASUS\\maxwell-library-react\\src\\Instances\\axios-instances.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\CategoryManagement\\CategoryManagement.js",["31"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\BookManagement\\BookManagement.js",["32","33"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Services\\auth.service.js",[],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\Detail\\Detail.js",["34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49"],"import React, { Component } from 'react';\r\nimport './Detail.style.css'\r\nimport Swal from 'sweetalert2';\r\nimport Date from '../../../Components/Datepicker/Dates'\r\nimport Axios from '../../../Instances/axios-instances';\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport moment from 'moment';\r\nimport Axios2 from '../../../Instances/axios-instances';\r\nimport $ from 'jquery'\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport Rating from 'react-rating'\r\nimport { MDBIcon } from \"mdbreact\";\r\n\r\nclass Detail extends Component {\r\n\r\n  constructor(props) {\r\n    let activeRole\r\n    let user = JSON.parse(localStorage.getItem('user'))\r\n    let userEmail = JSON.parse(localStorage.getItem('user')).userInfo.email\r\n    if (user) {\r\n      activeRole = JSON.parse(localStorage.getItem('user')).userInfo.activeRole\r\n    } else {\r\n      activeRole = false;\r\n    }\r\n    super(props)\r\n    this.state = {\r\n      fields: {},\r\n      errors: {},\r\n      data2: [],\r\n      data: [],\r\n      status: \"\",\r\n      status2: \"\",\r\n      startDate: null,\r\n      show: true,\r\n      endDate: null,\r\n      role: activeRole,\r\n      emailToken: userEmail,\r\n      category: [],\r\n      description: \"\",\r\n      recommendedData: [],\r\n      data3: [],\r\n      star: \"\",\r\n      rate: 0,\r\n      bookId: this.props.match.params.bookId\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const bookId = this.props.match.params.bookId;\r\n    this.getRate(bookId);\r\n    this.getData();\r\n    this.getData2(bookId);\r\n    this.fetchData(bookId);\r\n    this.getStatus(bookId);\r\n    this.getStatus2(bookId);\r\n    this.show();\r\n    this.setState({\r\n      startDate: moment(),\r\n      endDate: moment()\r\n    })\r\n\r\n  }\r\n\r\n  async getRate(id) {\r\n    await Axios2.get('review/rate/' + id).then((getStatus) => {\r\n      if (getStatus.data == null || getStatus.data == \"\") {\r\n        var status = getStatus.data;\r\n        return status\r\n      } else {\r\n        var status = getStatus.data;\r\n        this.setState({ rate: getStatus.data })\r\n        return status\r\n      }\r\n    })\r\n  }\r\n\r\n  handleChange(field, e) {\r\n    let fields = this.state.fields;\r\n    let errors = {}\r\n    errors[\"description\"] = \"\"\r\n    fields[field] = e.target.value;\r\n    this.setState({ fields });\r\n    this.setState({ errors: errors })\r\n\r\n  }\r\n\r\n  async show() {\r\n    if (this.state.role == \"ROLE_USER\") {\r\n      this.setState({ show: true, role2: \"User\", show2: false, role2: \"User\" })\r\n    } else {\r\n      this.setState({ show: false, role2: \"Admin\", show2: true, role2: \"Admin\" })\r\n    }\r\n  }\r\n\r\n\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.match.params.bookId !== this.props.match.params.bookId) {\r\n      this.fetchData(this.props.match.params.bookId)\r\n      window.scrollTo(0, 0)\r\n    }\r\n  }\r\n\r\n  getStartDate = (start) => {\r\n    this.setState({ startDate: start })\r\n  }\r\n\r\n  getEndDate = (end) => {\r\n    this.setState({ endDate: end })\r\n  }\r\n\r\n  borrow = (id) => {\r\n    const dataBorrow = {\r\n      bookId: id,\r\n      borrowedDate: this.state.startDate,\r\n      returnedDate: this.state.endDate,\r\n    }\r\n    Axios.post(\"borrow/save\", dataBorrow)\r\n      .then((data) => {\r\n        const result = data.data;\r\n        if (result.status === 400) {\r\n          Swal.fire(\r\n            'Ups, Sorry',\r\n            result.message,\r\n            'warning'\r\n          )\r\n        } else {\r\n          this.fetchData(id);\r\n          Swal.fire({\r\n            title: \"Berhasil\",\r\n            text: result.message,\r\n            icon: \"success\",\r\n            buttons: true,\r\n          })\r\n        }\r\n      })\r\n\r\n  }\r\n\r\n  bookChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  async getData() {\r\n    await Axios2.get('wishlist/getAll').then((getData) => {\r\n      const result = getData.data;\r\n      $(\"#example1\").DataTable().destroy();\r\n      this.setState({ data2: result });\r\n      $(\"#example1\").DataTable({\r\n        responsive: true,\r\n        autoWidth: false,\r\n      });\r\n    });\r\n  }\r\n\r\n  async getData2(id) {\r\n    await Axios2.get('review/getAll/' + id).then((getData) => {\r\n      const result = getData.data;\r\n      this.setState({ data3: result });\r\n    });\r\n  }\r\n\r\n  async fetchData(bookId) {\r\n    let fetchData = await Axios.get('/book/get-by-id/' + bookId)\r\n    this.setState({ data: fetchData.data })\r\n    this.setState({ category: fetchData.data.categoryEntity })\r\n    this.fetchRecommended(fetchData.data.categoryEntity.categoryId, bookId)\r\n  }\r\n\r\n  handleValidation() {\r\n    let fields = this.state.fields;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n   \r\n\r\n    if (this.state.star == \"\") {\r\n      formIsValid = false;\r\n      errors[\"rate\"] = \"Rate cannot be empty\";\r\n    }\r\n\r\n    this.setState({ errors: errors });\r\n    return formIsValid;\r\n  }\r\n\r\n  async fetchRecommended(categoryId, bookId) {\r\n    let fetchRecommend = await Axios.get('/book/get-rec-detail/' + categoryId + '/' + bookId)\r\n    this.setState({ recommendedData: fetchRecommend.data })\r\n  }\r\n\r\n  async getStatus(id) {\r\n    await Axios2.get('wishlist/get/' + id).then((getStatus) => {\r\n      var status = getStatus.data;\r\n      this.setState({ status: getStatus.data })\r\n      return status\r\n    })\r\n  }\r\n\r\n  async getStatus2(id) {\r\n    await Axios2.get('review/get/' + id).then((getStatus) => {\r\n      var status = getStatus.data;\r\n      this.setState({ status2: getStatus.data })\r\n      return status\r\n    })\r\n  }\r\n\r\n  getId = (id) => {\r\n    Swal.fire({\r\n      icon: 'question',\r\n      title: 'Are you sure?',\r\n      showCancelButton: true,\r\n      text: 'Are you sure want to confirm this?',\r\n    })\r\n      .then((result) => {\r\n        if (result.isConfirmed) {\r\n          if (this.state.status == true) {\r\n            Axios2.post('wishlist/post/' + id)\r\n              .then((res) => {\r\n                this.getStatus(id);\r\n                Swal.fire({\r\n                  icon: 'success',\r\n                  title: 'Success!',\r\n                  showCancelButton: false,\r\n                  text: 'Wishlist Cancel Already Success!',\r\n                })\r\n              })\r\n          } else {\r\n            Axios2.post('wishlist/post/' + id)\r\n              .then((res) => {\r\n\r\n                this.getStatus(id);\r\n                Swal.fire({\r\n                  icon: 'success',\r\n                  title: 'Success!',\r\n                  showCancelButton: false,\r\n                  text: 'Wishlist Already Success!',\r\n                })\r\n              })\r\n          }\r\n\r\n        }\r\n      })\r\n  }\r\n\r\n  getId2 = (id) => {\r\n    $('#RateModal').modal('show');\r\n    let errors = {}\r\n    errors[\"rate\"] = \"\"\r\n    errors[\"description\"] = \"\"\r\n    this.setState({ errors: errors })\r\n    this.setState({ fields: [], userId: \"\", errors: [] })\r\n    $('#editDescription').val('');\r\n\r\n  }\r\n  printStatusBook = (statusBook) => {\r\n    if (statusBook === 'Available') {\r\n      return <h1 className=\"statustextgreen\">{statusBook}</h1>\r\n    } else if (statusBook === 'Unavailable') {\r\n      return <h1 className=\"statustextred\">{statusBook}</h1>\r\n    }\r\n  }\r\n\r\n  printBorrowButton = (statusBook) => {\r\n    if (statusBook === 'Available') {\r\n      return <div className=\"borrowbutton\">\r\n        <button id=\"button_borrow\" value=\"borrow\" className=\"btn btn-warning\" href=\"#\" data-toggle=\"modal\" data-target=\"#BorrowModal\">Borrow</button>\r\n      </div>\r\n    } else {\r\n      // nothing\r\n    }\r\n\r\n  }\r\n\r\n  refresh() {\r\n    let errors = {}\r\n    errors[\"rate\"] = \"\"\r\n    errors[\"description\"] = \"\"\r\n    this.setState({ errors: errors })\r\n    this.setState({ fields: [], userId: \"\", errors: [] })\r\n    $('#editDescription').val('');\r\n  }\r\n\r\n  delete(id) {\r\n    Swal.fire({\r\n      icon: 'warning',\r\n      title: 'Warning!',\r\n      showCancelButton: true,\r\n      text: 'Are you sure want to Delete this?',\r\n    }).then((result) => {\r\n      /* Read more about isConfirmed, isDenied below */\r\n      if (result.isConfirmed) {\r\n        Axios2.put('review/delete/' + id, result)\r\n          .then((response) => {\r\n          })\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Success!',\r\n          showCancelButton: false,\r\n          text: 'Delete Review Already Success!',\r\n        }).then((isConfirmed) => {\r\n          if (isConfirmed) {\r\n            this.getData2(this.state.bookId)\r\n            $('#RateModal').modal('hide');\r\n            $('.modal-backdrop').remove();\r\n            this.refresh();\r\n            this.getRate(this.state.bookId);\r\n            this.getStatus2(this.state.bookId);\r\n          }\r\n        })\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n\r\n  contactSubmit(e) {\r\n    let fields = this.state.fields;\r\n    let user = JSON.parse(localStorage.getItem(\"user\"));\r\n    const token = user.token;\r\n    const config = {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    };\r\n\r\n    e.preventDefault();\r\n    if (this.handleValidation()) {\r\n      $(\"#modal-add\").modal(\"toggle\");\r\n      $('.modal-backdrop').remove();\r\n      const book = {\r\n        rate: this.state.star,\r\n        comment: fields[\"description\"],\r\n        book_id: this.state.bookId\r\n      };      \r\n      if (this.state.status2 == true) {\r\n        \r\n        Swal.fire({\r\n          icon: 'warning',\r\n          title: 'Ooops!',\r\n          showCancelButton: false,\r\n          text: 'Ini akan update data review anda sebelumnya,apakah anda yakin?',\r\n        }).then((isConfirmed) => {\r\n          if (isConfirmed) {\r\n            Axios2.post('review/post/' + this.state.bookId, book)\r\n              .then((res) => {\r\n                this.getStatus2(this.state.bookId);\r\n                this.getData();\r\n                $('#RateModal').modal('hide');\r\n                $('.modal-backdrop').remove();\r\n                this.refresh();\r\n                Swal.fire({\r\n                  icon: 'success',\r\n                  title: 'Success!',\r\n                  showCancelButton: false,\r\n                  text: 'Data Terupdate',\r\n                }).then((isConfirmed) => {\r\n                  if (isConfirmed) {\r\n                    this.getData2(this.state.bookId)\r\n                    $('#RateModal').modal('hide');\r\n                    this.getStatus2(this.state.bookId);                    \r\n                    $('.modal-backdrop').remove();\r\n                    this.refresh();\r\n                    this.getRate(this.state.bookId);\r\n                  }\r\n                })\r\n              })\r\n          }\r\n        })\r\n\r\n      } else {\r\n        Axios2.post('review/post/' + this.state.bookId, book)\r\n          .then((res) => {\r\n            this.getStatus2(this.state.bookId);\r\n            Swal.fire({\r\n              icon: 'success',\r\n              title: 'Success!',\r\n              showCancelButton: false,\r\n              text: 'Review Success!',\r\n            })\r\n              .then((isConfirmed) => {\r\n                if (isConfirmed) {\r\n                  this.getData2(this.state.bookId)\r\n                  $('#RateModal').modal('hide');\r\n                  $('.modal-backdrop').remove();\r\n                  this.getStatus2(this.state.bookId);\r\n                  this.refresh();\r\n                  this.getRate(this.state.bookId);\r\n                }\r\n              })\r\n          })\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const rateStar = {\r\n      size: 25,\r\n      count: 5,\r\n      color: \"black\",\r\n      activeColor: \"yellow\",\r\n      a11y: true,\r\n      isHalf: true,\r\n      emptyIcon: <i className=\"far fa-star\" />,\r\n      halfIcon: <i className=\"fa fa-star-half-alt\" />,\r\n      filledIcon: <i className=\"fa fa-star\" />,\r\n      onChange: (newValue) => {\r\n        this.setState({ star: newValue })\r\n        newValue = 0;\r\n      }\r\n    };\r\n    const rateStar2 = {\r\n      size: 25,\r\n      count: 5,\r\n      color: \"black\",\r\n      edit: false,\r\n      activeColor: \"yellow\",\r\n      value: this.state.rate,\r\n      a11y: true,\r\n      isHalf: true,\r\n      emptyIcon: <i className=\"far fa-star\" />,\r\n      halfIcon: <i className=\"fa fa-star-half-alt\" />,\r\n      filledIcon: <i className=\"fa fa-star\" />,\r\n\r\n    };\r\n    const { data, category, recommendedData, show, star, description, rate, data3 } = this.state\r\n    return (\r\n      <div>\r\n        <div className=\"wrapper\">\r\n          {/* Content Wrapper. Contains page content */}\r\n          <div className=\"content-wrapper\">\r\n            {/* Content Header (Page header) */}\r\n            <section className=\"content-header\">\r\n              <div className=\"container-fluid\">\r\n                <div className=\"button\">\r\n                  <div className=\"back-btn\">\r\n                    <a href=\"/\" className=\"button-arrow\" role=\"button\"><i className=\"fas fa-arrow-left arrow\" /></a>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-12\">\r\n                    <div className=\"fill-detail\">\r\n                    <img src={data.imgBanner} alt=\"\" />\r\n                    </div>\r\n\r\n                    <div className=\"menu-right\">\r\n                      {/* <ul className=\"menuhead\">\r\n                        <li><a href=\"#\" data-toggle=\"modal\" data-target=\"#ModalBook\">Edit</a></li>\r\n                        <li><a href=\"#\" data-toggle=\"modal\" data-target=\"#deleteModal\">Delete</a></li>\r\n                      </ul> */}\r\n                      <img className=\"small-preview\" src={data.imgDetail} />\r\n                    </div>\r\n\r\n                  </div>\r\n\r\n                </div>\r\n              </div>{/* /.container-fluid */}\r\n            </section>\r\n            {/* Main content */}\r\n            <section className=\"content\">\r\n              <div className=\"category\">\r\n                <p>{category.category}</p>\r\n              </div>\r\n\r\n              <div className=\"container-fluid\">\r\n\r\n                <div className=\"star-review\">\r\n                  <Rating\r\n                    initialRating={rate}\r\n                    readonly\r\n                    emptySymbol={<i className=\"far fa-star\" />}\r\n                    fullSymbol={<i className=\"fa fa-star\" />}\r\n                  />\r\n                  {/* {rate}<MDBIcon icon=\"star\"/> */}\r\n                  <br />\r\n                </div>\r\n\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-6\">\r\n                    <h1 className=\"titletext\">{data.title}</h1>\r\n                  </div>\r\n                  <div className=\"col-sm-6\">\r\n                    {this.printStatusBook(data.statusBook)}\r\n                  </div>\r\n\r\n                </div>\r\n\r\n              </div>\r\n              <p className=\"date\">{data.publishDate}</p>\r\n              <p className=\"date\">Available Stock: {data.qty}</p>\r\n              <div className=\"row\">\r\n                <div className=\"col-sm-8\">\r\n                  <p className=\"content\">\r\n                    {data.description}\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  {show ? this.printBorrowButton(data.statusBook) : null}\r\n                </div>\r\n\r\n                <div>\r\n                  {show ? <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-warning add-btn\"\r\n                    onClick={() => { this.getId(data.bookId) }}\r\n                    style={{ float: \"right\" }}\r\n                  >\r\n                    <i className=\"nav-icon fas fa-heart\"></i>\r\n                  </button> : null}\r\n\r\n                </div>\r\n\r\n                <div>\r\n                  {show ? <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-warning add-btn\"\r\n                    onClick={() => { this.getId2(data.bookId) }}\r\n                    style={{ float: \"right\" }}\r\n                  >\r\n                    <i className=\"nav-icon fas fa-star\"></i>\r\n                  </button> : null}\r\n                </div>\r\n              </div>\r\n\r\n\r\n\r\n              <section>\r\n                <div className=\"card shadow mb-4 mr-4\">\r\n                  <a className=\"d-block card-header py-3\" data-toggle=\"collapse\" role=\"button\" aria-expanded=\"true\" aria-controls=\"collapseCardExamplee\">\r\n                    <h6 className=\"m-0 font-weight-bold text-dark\">User Reviews</h6>\r\n                  </a>\r\n                  <div className=\"collapse show\" id=\"collapseCardExamplee\">\r\n                    <div className=\"card-body\">\r\n\r\n\r\n                      <div className=\"p-2 hover\">\r\n                        {data3.length > 0 ? data3.map((person) => {\r\n                          if (person.userEntity.email === this.state.emailToken) {\r\n                            return (\r\n                              <div className=\"row\">\r\n\r\n                                <div className=\"col-sm-6\">\r\n                                  <div className=\"font-weight-bold text-dark\">{person.userEntity.email}</div>\r\n                                  <hr className=\"divider\" />\r\n                                  <div className=\"text-dark mb-5\"><i className=\"nav-icon fas fa-star\"></i> {person.rate} : {person.comment}</div>\r\n                                </div>\r\n\r\n                                <div className=\"col-sm-6\">\r\n\r\n                                  <button type=\"button\" className=\"btn btn-danger float-right\" onClick={() => { this.delete(person.bookEntity.bookId) }}>Delete</button>\r\n\r\n                                </div>\r\n\r\n                              </div>\r\n                            )\r\n                          } else {\r\n                            return (\r\n                              <div className=\"row\">\r\n\r\n                                <div className=\"col-sm-6\">\r\n                                  <div className=\"font-weight-bold text-dark\">{person.userEntity.email}</div>\r\n                                  <hr className=\"divider\" />\r\n                                  <div className=\"text-dark mb-5\"><i className=\"nav-icon fas fa-star\"></i> {person.rate} : {person.comment}</div>\r\n                                </div>\r\n\r\n                                <div className=\"col-sm-6\">\r\n                                </div>\r\n\r\n                              </div>\r\n                            )\r\n                          }\r\n                        }\r\n                        ) : <div className=\"row\">\r\n\r\n                        <div className=\"col-sm-6\">\r\n                          <div className=\"font-weight-bold text-dark\">No Reviews</div>\r\n                          <hr className=\"divider\" />\r\n                          <div className=\"text-dark mb-5\"><i className=\"nav-icon fas fa-star\"></i> 0.0</div>\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-6\">\r\n                        </div>\r\n\r\n                      </div>}\r\n\r\n                        <hr className=\"divider\" />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </section>\r\n            </section>\r\n\r\n            <section>\r\n\r\n              {/*Adding list books*/}\r\n              <div className=\"list-title\">\r\n                <h4>Recommended</h4><br />\r\n              </div>\r\n              <div className=\"row\" id=\"recomended\">\r\n                {recommendedData.map((data, index) => {\r\n                  return (\r\n                    <div key={index} className=\"col-xs-4 col-sm-4 col-lg-4\">\r\n                      <div className=\"card\" id=\"recomendedcard\">\r\n                        <img src={data.imgDetail} className=\"card-img-top\" alt=\"Dilan 1991\" />\r\n                        <div className=\"card-body\">\r\n                          <h5 className=\"recommend-title\">{data.title}</h5>\r\n                          <p className=\"card-text max-desc\">{data.description} </p>\r\n                          <Link to={`${data.bookId}`}>Read More</Link>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                })}\r\n              </div>\r\n            </section>\r\n            {/* /.content */}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"modal fade\" id=\"BorrowModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabesl\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog modal-md\" role=\"document\">\r\n            <div className=\"modal-content\" id=\"edit-module\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Borrow Book</h5>\r\n                <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">×</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-4\">\r\n                    <label className=\"title-module\">Date Borrow </label>\r\n                  </div>\r\n                  <div className=\"col-md-8\">\r\n                    <div className=\"input-group date\" id=\"datetimepicker5\" data-target-input=\"nearest\">\r\n                      <Date startDateCallback={this.getStartDate} endDateCallBack={this.getEndDate} />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\">Close</button>\r\n                  <button type=\"submit\" className=\"btn btn-warning\" id=\"btn-delete\" href=\"#\" data-dismiss=\"modal\" onClick={() => this.borrow(data.bookId)}>Confirm</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"modal fade\" id=\"RateModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabesl\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog modal-md\" role=\"document\">\r\n            <div className=\"modal-content\" id=\"edit-module\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Borrow Book</h5>\r\n                <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">×</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <form id=\"addBook\" onSubmit={this.contactSubmit.bind(this)}>\r\n                  <div>\r\n                    <div >\r\n                      <div className=\"input-group date\" id=\"datetimepicker5\" data-target-input=\"nearest\">\r\n                        <ReactStars {...rateStar} />\r\n                        <span style={{ color: \"red\" }}>\r\n                          {this.state.errors[\"rate\"]}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <br></br>\r\n                    <div className=\"form-group\">\r\n                      <textarea\r\n                        className=\"form-control\"\r\n                        id=\"editDescription\"\r\n                        name=\"description\"\r\n                        placeholder=\"Enter Your Comment Here\"\r\n                        rows=\"4\"\r\n                        cols=\"50\"\r\n                        onChange={this.handleChange.bind(this, \"description\")}\r\n                        value={this.state.fields[\"description\"]}\r\n                      ></textarea>\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"description\"]}\r\n                      </span>\r\n                    </div>\r\n\r\n                  </div>\r\n\r\n                  <div className=\"modal-footer\">\r\n                    <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\" onClick={() => this.refresh()}>Close</button>\r\n                    <button type=\"submit\" className=\"btn btn-warning\">\r\n                      Add\r\n                  </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Detail);","C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\TopUp1.js",["50","51","52","53","54"],"C:\\Users\\ASUS\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\Validate.js",[],{"ruleId":"55","severity":1,"message":"56","line":40,"column":35,"nodeType":"57","messageId":"58","endLine":40,"endColumn":37},{"ruleId":"55","severity":1,"message":"56","line":62,"column":29,"nodeType":"57","messageId":"58","endLine":62,"endColumn":31},{"ruleId":"59","severity":1,"message":"60","line":203,"column":21,"nodeType":"61","messageId":"62","endLine":203,"endColumn":31},{"ruleId":"59","severity":1,"message":"63","line":12,"column":10,"nodeType":"61","messageId":"62","endLine":12,"endColumn":17},{"ruleId":"64","severity":1,"message":"65","line":66,"column":52,"nodeType":"66","messageId":"67","endLine":66,"endColumn":54},{"ruleId":"68","severity":1,"message":"69","line":70,"column":13,"nodeType":"61","messageId":"70","endLine":70,"endColumn":19},{"ruleId":"64","severity":1,"message":"65","line":88,"column":25,"nodeType":"66","messageId":"67","endLine":88,"endColumn":27},{"ruleId":"71","severity":1,"message":"72","line":89,"column":64,"nodeType":"73","messageId":"67","endLine":89,"endColumn":69},{"ruleId":"71","severity":1,"message":"72","line":91,"column":65,"nodeType":"73","messageId":"67","endLine":91,"endColumn":70},{"ruleId":"59","severity":1,"message":"74","line":173,"column":9,"nodeType":"61","messageId":"62","endLine":173,"endColumn":15},{"ruleId":"64","severity":1,"message":"65","line":178,"column":25,"nodeType":"66","messageId":"67","endLine":178,"endColumn":27},{"ruleId":"64","severity":1,"message":"65","line":217,"column":33,"nodeType":"66","messageId":"67","endLine":217,"endColumn":35},{"ruleId":"59","severity":1,"message":"75","line":321,"column":11,"nodeType":"61","messageId":"62","endLine":321,"endColumn":17},{"ruleId":"64","severity":1,"message":"65","line":334,"column":30,"nodeType":"66","messageId":"67","endLine":334,"endColumn":32},{"ruleId":"59","severity":1,"message":"76","line":410,"column":11,"nodeType":"61","messageId":"62","endLine":410,"endColumn":20},{"ruleId":"59","severity":1,"message":"77","line":424,"column":52,"nodeType":"61","messageId":"62","endLine":424,"endColumn":56},{"ruleId":"59","severity":1,"message":"78","line":424,"column":58,"nodeType":"61","messageId":"62","endLine":424,"endColumn":69},{"ruleId":"79","severity":1,"message":"80","line":449,"column":23,"nodeType":"81","endLine":449,"endColumn":77},{"ruleId":"82","severity":1,"message":"83","line":528,"column":19,"nodeType":"81","endLine":528,"endColumn":154},{"ruleId":"59","severity":1,"message":"84","line":14,"column":7,"nodeType":"61","messageId":"62","endLine":14,"endColumn":14},{"ruleId":"59","severity":1,"message":"85","line":22,"column":11,"nodeType":"61","messageId":"62","endLine":22,"endColumn":22},{"ruleId":"59","severity":1,"message":"86","line":22,"column":38,"nodeType":"61","messageId":"62","endLine":22,"endColumn":46},{"ruleId":"59","severity":1,"message":"87","line":22,"column":48,"nodeType":"61","messageId":"62","endLine":22,"endColumn":60},{"ruleId":"59","severity":1,"message":"88","line":22,"column":62,"nodeType":"61","messageId":"62","endLine":22,"endColumn":72},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'resultBook' is assigned a value but never used.","Identifier","unusedVar","'MDBIcon' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'status' is already defined.","redeclared","no-dupe-keys","Duplicate key 'role2'.","ObjectExpression","'fields' is assigned a value but never used.","'config' is assigned a value but never used.","'rateStar2' is assigned a value but never used.","'star' is assigned a value but never used.","'description' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'refresh' is assigned a value but never used.","'handlekeyup' is assigned a value but never used.","'pristine' is assigned a value but never used.","'previousPage' is assigned a value but never used.","'submitting' is assigned a value but never used."]