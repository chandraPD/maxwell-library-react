[{"D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Navigations\\MainNavigations.js":"1","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\BookManagement\\BookDetail.js":"2","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\TopUpManagement\\TopUpManagement.js":"3","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\SlideShowManagement\\SlideShowManagement.js":"4","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\index.js":"5","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Auth\\Auth.js":"6","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\Payment\\PaymentInvoicePrintPaid.js":"7","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\DonationManagement\\DonationManagement.js":"8","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\UserManagement\\UserManagement.js":"9","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\DetailInvoice\\DetailInvoice.js":"10","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Components\\Datatable\\Cell.js":"11","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\FormInput.js":"12","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\App.js":"13","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\Detail\\Detail.js":"14","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\Profile\\ChangePassword.js":"15","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\ReturnBook\\ReturnBook.js":"16","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\Payment\\Payment.js":"17","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Components\\Datatable\\Status.js":"18","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\Card.js":"19","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\Validate.js":"20","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\Profile\\Profile.js":"21","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\Donation\\Donation.js":"22","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\showResult.js":"23"},{"size":6537,"mtime":1609921581716,"results":"24","hashOfConfig":"25"},{"size":16428,"mtime":1609921581717,"results":"26","hashOfConfig":"25"},{"size":28193,"mtime":1609921581725,"results":"27","hashOfConfig":"25"},{"size":18689,"mtime":1609983736690,"results":"28","hashOfConfig":"25"},{"size":937,"mtime":1609725081312,"results":"29","hashOfConfig":"25"},{"size":18737,"mtime":1609725081311,"results":"30","hashOfConfig":"25"},{"size":4270,"mtime":1606454300386,"results":"31","hashOfConfig":"25"},{"size":6934,"mtime":1609921581721,"results":"32","hashOfConfig":"25"},{"size":4505,"mtime":1606441198273,"results":"33","hashOfConfig":"25"},{"size":11702,"mtime":1609856420899,"results":"34","hashOfConfig":"25"},{"size":287,"mtime":1606363728707,"results":"35","hashOfConfig":"25"},{"size":574,"mtime":1609921581723,"results":"36","hashOfConfig":"25"},{"size":282,"mtime":1609725081310,"results":"37","hashOfConfig":"25"},{"size":7393,"mtime":1609921581719,"results":"38","hashOfConfig":"25"},{"size":10606,"mtime":1606466300197,"results":"39","hashOfConfig":"25"},{"size":7817,"mtime":1606454300387,"results":"40","hashOfConfig":"25"},{"size":14839,"mtime":1609856420900,"results":"41","hashOfConfig":"25"},{"size":142,"mtime":1606363728707,"results":"42","hashOfConfig":"25"},{"size":2316,"mtime":1609321786467,"results":"43","hashOfConfig":"25"},{"size":1069,"mtime":1609921581725,"results":"44","hashOfConfig":"25"},{"size":10297,"mtime":1606466370500,"results":"45","hashOfConfig":"25"},{"size":11011,"mtime":1609921581720,"results":"46","hashOfConfig":"25"},{"size":1466,"mtime":1609856420902,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"19k8gcz",{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"51"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"51"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"51"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"51"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"65"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"65"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Navigations\\MainNavigations.js",["104"],"import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Footer from '../Screens/Footer/Footer'\r\nimport NavBar from '../Screens/NavBar/NavBar'\r\nimport SideBar from '../Screens/SideBar/SideBar'\r\nimport Profile from '../Screens/Contents/Profile/Profile'\r\nimport ChangePassword from '../Screens/Contents/Profile/ChangePassword'\r\nimport RentManagement from '../Screens/Contents/RentManagement/RentManagement'\r\nimport Home from '../Screens/Contents/Home/Home'\r\nimport Detail from '../Screens/Contents/Detail/Detail'\r\nimport Auth from '../Screens/Auth/Auth'\r\nimport TopUp from '../Screens/Contents/TopUp/TopUp'\r\nimport CategoryManagement from '../Screens/Contents/CategoryManagement/CategoryManagement'\r\nimport SlideShowManagement from '../Screens/Contents/SlideShowManagement/SlideShowManagement'\r\nimport Payment from '../Screens/Contents/Payment/Payment'\r\nimport PaymentInvoicePrint from \"../Screens/Contents/Payment/PaymentInvoicePrint\"\r\nimport PaymentInvoicePrintPaid from \"../Screens/Contents/Payment/PaymentInvoicePrintPaid\"\r\nimport History from '../Screens/Contents/History/History'\r\nimport TopUpManagement from \"../Screens/Contents/TopUpManagement/TopUpManagement\"\r\nimport AdminProfile from '../Screens/Contents/Profile/AdminProfile'\r\nimport UserManagement from '../Screens/Contents/UserManagement/UserManagement'\r\nimport BookManagement from '../Screens/Contents/BookManagement/BookManagement'\r\nimport FineManagement from '../Screens/Contents/FineManagement/FineManagement'\r\nimport DetailInvoice from '../Screens/Contents/DetailInvoice/DetailInvoice'\r\nimport ReturnBook from '../Screens/Contents/ReturnBook/ReturnBook'\r\nimport PaymentDetail from '../Screens/Contents/Payment/PaymentDetail'\r\nimport DonationManagement from '../Screens/Contents/DonationManagement/DonationManagement'\r\nimport Donation from '../Screens/Contents/Donation/Donation'\r\nimport BookDetail from '../Screens/Contents/BookManagement/BookDetail'\r\nimport PrivateRoute from './PrivateRoute'\r\n\r\nclass MainNavigation extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isAuthenticated :  localStorage.getItem('user')\r\n        };\r\n      }\r\n\r\n    render() {\r\n        return ( <Router >\r\n                <Switch>\r\n                    <Route path='/auth'>\r\n                        <Auth />\r\n                    </Route>\r\n                    <Route path='/PaymentPrint'>\r\n                        <PaymentInvoicePrint />\r\n                    </Route>\r\n                    <Route exact path='/PaymentPrintPaid'>\r\n                        <PaymentInvoicePrintPaid />\r\n                    </Route>\r\n                    <Route path='/'>\r\n                            <NavBar />\r\n                            <SideBar />\r\n                            <Switch>\r\n                                <PrivateRoute exact path='/'\r\n                                authenticated={this.state.isAuthenticated}\r\n                                component={Home}>\r\n                                </PrivateRoute>\r\n                                <Route path='/Profile'>\r\n                                    <Profile />\r\n                                </Route>\r\n                                <Route path='/ChangePassword'>\r\n                                    <ChangePassword/>\r\n                                </Route>\r\n                                <Route path='/AdminProfile'>\r\n                                    <AdminProfile/>\r\n                                </Route>\r\n                                <Route path='/Detail/:bookId'>\r\n                                    <Detail />\r\n                                </Route>\r\n                                <Route path='/RentManagement'>\r\n                                    <RentManagement />\r\n                                </Route>\r\n                                <Route path='/FineManagement'>\r\n                                    <FineManagement />\r\n                                </Route>\r\n                                <Route path='/TopUp'>\r\n                                    <TopUp />\r\n                                </Route>\r\n                                <Route path='/CategoryManagement'>\r\n                                    <CategoryManagement />\r\n                                </Route>\r\n                                <Route path='/TopUpManagement'>                                    \r\n                                    <TopUpManagement />\r\n                                </Route>\r\n                                <Route path='/SlideShowManagement'>\r\n                                    <SlideShowManagement />\r\n                                </Route>\r\n                                <Route path='/Payment/:invoiceId?'>\r\n                                    <Payment />\r\n                                </Route>\r\n                                <Route path='/PaymentDetail/:userId'>\r\n                                    <PaymentDetail />\r\n                                </Route>\r\n                                <Route path='/History'>\r\n                                    <History />\r\n                                </Route>\r\n                                <Route path='/usermanagement'>\r\n                                    <UserManagement />\r\n                                </Route>\r\n                                <Route path='/bookmanagement'>\r\n                                    <BookManagement />\r\n                                </Route>\r\n                                <Route path='/bookdetail/:bookId'>\r\n                                    <BookDetail />\r\n                                </Route>\r\n                                <Route path='/DetailInvoice/:invoiceId'>\r\n                                    <DetailInvoice />\r\n                                </Route>\r\n                                <Route path='/ReturnBook'>\r\n                                    <ReturnBook />\r\n                                </Route>\r\n                                <Route path='/DonationManagement'>\r\n                                    <DonationManagement />\r\n                                </Route>\r\n                                 <Route path='/Donation'>\r\n                                    <Donation />\r\n                                </Route>\r\n                            </Switch>\r\n                            <Footer />\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\nexport default MainNavigation\r\n",["105","106"],"D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\BookManagement\\BookDetail.js",["107"],"import React, { Component } from \"react\";\r\nimport DataTable from \"../../../Components/Datatable/Table\";\r\nimport axios from \"axios\";\r\nimport Action from \"../../../Components/Datatable/Action\";\r\nimport $ from \"jquery\";\r\nimport \"datatables.net-responsive/js/dataTables.responsive\";\r\nimport \"datatables.net-dt/css/jquery.dataTables.css\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport SuccessImg from \"../../../Assets/Media/check.png\";\r\n\r\nclass BookDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      bookId: \"\",\r\n      fields: {},\r\n      errors: {},\r\n      data: [],\r\n      rows: [],\r\n      results: [],\r\n      title: \"\",\r\n    };\r\n\r\n    this.detailBookChange = this.detailBookChange.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    const bookId = this.props.match.params.bookId;\r\n    console.log(bookId);\r\n    this.fetchDataBookDetail(bookId);\r\n  }\r\n\r\n  async fetchDataBookDetail(bookId) {\r\n    await axios.get(\r\n      `http://localhost:8080/book-detail/get-by-book-id/${bookId}`\r\n    ).then((response) => {\r\n      this.setState({ data: response.data });\r\n      this.fetchData();\r\n      $(\"#example1\").DataTable({\r\n        responsive: true,\r\n        autoWidth: false,\r\n      });\r\n\r\n      var jumlah = response.data.length\r\n\r\n      const count = {\r\n        qty: jumlah\r\n      }\r\n\r\n      axios.put(\"http://localhost:8080/book/update-qty-book/\" + bookId, count)\r\n        .then((response) => {\r\n          console.log(response)\r\n        })  \r\n\r\n    })\r\n\r\n  }\r\n\r\n  fetchData() {\r\n    let results = [];\r\n    let result = this.state.data;\r\n    var no = 1;\r\n\r\n    result.forEach((detailBook) => {\r\n      let row = [];\r\n\r\n      row.push(<td className=\"text-center\">{no++}</td>);\r\n      row.push(\r\n        <td className=\"text-center py-0 align-middle\">\r\n          <div className=\"btn-group btn-group-sm\">\r\n            <Action\r\n              type=\"success\"\r\n              title=\"Edit\"\r\n              icon=\"pen\"\r\n              dataToggle=\"modal\"\r\n              dataTarget=\"#modal-edit\"\r\n              onClick = {() => this.getDetailBook(detailBook.bookDetailId)}\r\n            />\r\n            <Action\r\n              type=\"danger\"\r\n              title=\"Delete\"\r\n              icon=\"trash\"\r\n              dataToggle=\"modal\"\r\n              dataTarget=\"#modal-delete\"\r\n              onClick = {() => this.getDetailBook(detailBook.bookDetailId)}\r\n            />\r\n          </div>\r\n        </td>\r\n      );\r\n      row.push(<td className=\"text-center\">{detailBook.bookDetailId}</td>);\r\n      row.push(<td className=\"text-center\">{detailBook.typeOfDamage}</td>);\r\n      row.push(<td className=\"text-center\">{detailBook.descOfDamage}</td>);\r\n      this.setState({ title: detailBook.bookEntity.title})\r\n      results.push(row);\r\n    });\r\n    this.setState({ rows: results });\r\n    \r\n  }\r\n\r\n  resetModal() {\r\n    let fields = this.state.fields\r\n    fields[\"typeOfDamage\"] = \"\"\r\n    fields[\"descOfDamage\"] = \"\"\r\n\r\n    this.setState({fields: fields})\r\n  }\r\n\r\n  handleChange(field, e) {\r\n      let fields = this.state.fields\r\n      fields[field] = e.target.value\r\n      this.setState({fields})\r\n  }\r\n\r\n  detailBookChange = (event) => {\r\n      this.setState({\r\n          [event.target.name]: event.target.value\r\n      })\r\n  }\r\n\r\n  updateDetailBook = (id) => {\r\n      const detailBook = {\r\n          typeOfDamage: this.state.typeOfDamage,\r\n          descOfDamage: this.state.descOfDamage,\r\n          bookId: this.props.match.params.bookId\r\n      }\r\n\r\n      axios.put('http://localhost:8080/book-detail/update-detail/' + id, detailBook)\r\n        .then((response) => {\r\n            console.log(response)\r\n            $(\"#modal-edit\").modal(\"toggle\");\r\n            Swal.fire({\r\n              icon: \"success\",\r\n              title: \"Success\",\r\n              text: \"Your Data has been Updated\",\r\n              confirmButtonText: `OK`,\r\n            }).then((result) => {\r\n              if (result.isConfirmed) {\r\n                window.location.reload();\r\n              }\r\n            });\r\n        })\r\n  }\r\n\r\n  deleteDetailBook = (id) => {\r\n    axios.put('http://localhost:8080/book-detail/delete-detail/' + id)\r\n    .then((response) => {\r\n      console.log(response)\r\n      Swal.fire({\r\n        icon: \"success\",\r\n        title: \"Success\",\r\n        text: \"Your Data has been Deleted\",\r\n        confirmButtonText: `OK`,\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          window.location.reload();\r\n        }\r\n      });\r\n    })\r\n  }\r\n\r\n  getDetailBook = (id) => {\r\n      axios.get(\"http://localhost:8080/book-detail/get-detail-book/\" + id)\r\n        .then((response) => {\r\n            console.log(response)\r\n            this.setState({\r\n                typeOfDamage: response.data.typeOfDamage,\r\n                descOfDamage: response.data.descOfDamage,\r\n                bookDetailId: id\r\n            })\r\n        })\r\n  }\r\n\r\n  handleValidation() {\r\n      let fields = this.state.fields\r\n      let errors = {}\r\n      let formIsValid = true\r\n\r\n      // Type of Damage\r\n      if(!fields[\"typeOfDamage\"]) {\r\n          formIsValid = false\r\n          errors[\"typeOfDamage\"] = \"Type of Damage cannot be empty\"\r\n      }\r\n\r\n      this.setState({ errors: errors})\r\n      return formIsValid\r\n  }\r\n\r\n  contactSubmit(e) {\r\n      let fields = this.state.fields\r\n      e.preventDefault()\r\n      if(this.handleValidation()) {\r\n        $(\"#modal-add\").modal(\"toggle\")\r\n\r\n        const detailBook = {\r\n            typeOfDamage: fields[\"typeOfDamage\"],\r\n            descOfDamage: fields[\"descOfDamage\"],\r\n            bookId: this.props.match.params.bookId\r\n        }\r\n\r\n        console.log(detailBook)\r\n\r\n        axios.post(\"http://localhost:8080/book-detail/add-detail\", detailBook)\r\n            .then((response)=> {\r\n                console.log(response)\r\n                Swal.fire({\r\n                  icon: \"success\",\r\n                  title: \"Success\",\r\n                  text: \"Your Data has been Added\",\r\n                  confirmButtonText: `OK`,\r\n                }).then((result) => {\r\n                  if (result.isConfirmed) {\r\n                    window.location.reload();\r\n                  }\r\n                });\r\n            })\r\n      } else {\r\n\r\n      }\r\n  }\r\n\r\n  render() {\r\n    const { rows } = this.state;\r\n    const headings = [\r\n      \"No.\",\r\n      \"Action\",\r\n      \"Book Detail ID\",\r\n      \"Type of Damage\",\r\n      \"Desc of Damage\",\r\n    ];\r\n\r\n    return (\r\n      <div className=\"content-wrapper\">\r\n        <section className=\"content-header\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col-sm-6\">\r\n                <h1>Detail Book</h1>\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <ol className=\"breadcrumb float-sm-right\">\r\n                  <li className=\"breadcrumb-item\">\r\n                    <Link to=\"/\">Home</Link>\r\n                  </li>\r\n                  <li className=\"breadcrumb-item\">\r\n                    <Link to='/BookManagement'>Book Management</Link>\r\n                  </li>\r\n                  <li className=\"breadcrumb-item active\">Detail Book</li>\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/* Main content */}\r\n        <section className=\"content\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-6 ctm-responsive\">\r\n                          <h3>{this.state.title}</h3>\r\n                      </div>\r\n                      <div className=\"col-md-6 ctm-responsive\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary add-btn\"\r\n                          data-toggle=\"modal\"\r\n                          data-target=\"#modal-add\"\r\n                          style={{ float: \"right\" }}\r\n                        >\r\n                          <i className=\"nav-icon fas fa-plus\"></i>\r\n                          &nbsp; Add Detail\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  {/* /.card-header */}\r\n                  <div className=\"card-body\">\r\n                    <DataTable headings={headings} rows={rows} />\r\n                    {/* /.card-body */}\r\n                  </div>\r\n                </div>\r\n                {/* /.card */}\r\n              </div>\r\n              {/* /.col */}\r\n            </div>\r\n            {/* /.row */}\r\n          </div>\r\n          {/* /.container-fluid */}\r\n        </section>\r\n        {/* /.content */}\r\n\r\n        {/* <!--Modal Add--> */}\r\n        <div className=\"modal fade\" id=\"modal-add\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Add Detail</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <form\r\n                id=\"addBookDetail\"\r\n                onSubmit={this.contactSubmit.bind(this)}\r\n              >\r\n                <div className=\"modal-body\">\r\n                  <div className=\"card-body\">\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"inputTypeofDamage\">Type of Damage</label>\r\n                      <select\r\n                        name=\"typeOfDamage\"\r\n                        className=\"form-control\"\r\n                        id=\"inputTypeofDamage\"\r\n                        value={this.state.fields[\"typeOfDamage\"]}\r\n                        onChange={this.handleChange.bind(this, \"typeOfDamage\")}\r\n                      >\r\n                        <option value=\"null\">Choose Type of Damage</option>\r\n                        <option value=\"Minor\">Minor</option>\r\n                        <option value=\"Major\">Major</option>\r\n                      </select>\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"typeOfDamage\"]}\r\n                      </span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"inputDescofDamage\">Description of Damage</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"inputDescofDamage\"\r\n                        name=\"descOfDamage\"\r\n                        placeholder=\"Enter Description of Damage\"\r\n                        onChange={this.handleChange.bind(this, \"descOfDamage\")}\r\n                        value={this.state.fields[\"descOfDamage\"]}\r\n                      />\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"descOfDamage\"]}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer justify-content-between\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-default\"\r\n                    data-dismiss=\"modal\"\r\n                    onClick={() => this.resetModal()}\r\n                  >\r\n                    Close\r\n                  </button>\r\n                  <button type=\"submit\" className=\"btn btn-warning\">\r\n                    Add\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n\r\n        {/* <!--Modal Edit--> */}\r\n        <div className=\"modal fade\" id=\"modal-edit\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Edit Detail Book</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <form id=\"editDetailBook\">\r\n                <div className=\"modal-body\">\r\n                  <div className=\"card-body\">\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"editTypeOfDamage\">Type of Damage</label>\r\n                      <select\r\n                        name=\"typeOfDamage\"\r\n                        className=\"form-control\"\r\n                        id=\"editTypeOfDamage\"\r\n                        value={this.state.typeOfDamage}\r\n                        onChange={this.detailBookChange}\r\n                      >\r\n                        <option value=\"Minor\">Minor</option>\r\n                        <option value=\"Major\">Major</option>\r\n                      </select>\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"typeOfDamage\"]}\r\n                      </span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"editDescOfDamage\">Description Of Damage</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"descOfDamage\"\r\n                        id=\"editDescOfDamage\"\r\n                        value={this.state.descOfDamage}\r\n                        onChange={this.detailBookChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer justify-content-between\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-default\"\r\n                    data-dismiss=\"modal\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button type=\"button\" onClick={() => this.updateDetailBook(this.state.bookDetailId)} className=\"btn btn-warning\">\r\n                    Save changes\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n\r\n        {/* <!--Modal Delete--> */}\r\n        <div className=\"modal fade\" id=\"modal-delete\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Delete Detail Book</h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                If you Delete this, you can't be returned\r\n              </div>\r\n              <div className=\"modal-footer justify-content-between\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-default\"\r\n                  data-dismiss=\"modal\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-warning\"\r\n                  type=\"button\"\r\n                  data-dismiss=\"modal\"\r\n                  onClick={() => this.deleteDetailBook(this.state.bookDetailId)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            </div>\r\n            {/* <!-- /.modal-content --> */}\r\n          </div>\r\n          {/* <!-- /.modal-dialog --> */}\r\n        </div>\r\n        {/* <!-- /.modal --> */}\r\n         \r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(BookDetail);\r\n","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\TopUpManagement\\TopUpManagement.js",["108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124"],"import React, { Component } from 'react';\r\nimport './TopUpManagement.style.css'\r\nimport Swal from 'sweetalert2';\r\nimport { Link } from 'react-router-dom'\r\nimport Card from '../TopUp/Card';\r\nimport \"bootstrap\";\r\nimport DataTable from \"../../../Components/Datatable/Table\";\r\nimport Action from \"../../../Components/Datatable/Action\";\r\nimport $ from 'jquery'\r\nimport Status from '../../../Components/Datatable/Status'\r\nimport Axios from 'axios';\r\nimport { MDBIcon } from \"mdbreact\";\r\nimport NumberFormat from 'react-number-format';\r\nimport AuthService from '../../../Services/auth.service';\r\n\r\nclass TopUpManagement extends Component {\r\n  \r\n  constructor(props) {\r\n  let user = JSON.parse( localStorage.getItem('user'))  \r\n    super(props);    \r\n    this.state = {      \r\n      fields: {},\r\n      errors: {},\r\n      data: [],\r\n      rows: [],\r\n      results: [],\r\n      result: [],\r\n      data: [],        \r\n      headings: [],\r\n      role:\"\",\r\n      show:true,\r\n      password:\"\",\r\n      userToken: user.token\r\n    };\r\n  }\r\n  componentDidMount() {                 \r\n    this.getAll();\r\n    this.show();\r\n    this.getRole();    \r\n  }\r\n\r\n  async getRole(){\r\n    const token=this.state.userToken;\r\n  const config = {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n}\r\n    const getRole = await Axios.get('http://localhost:8080/top_up_management/getRole',config);\r\n    var role=getRole;\r\n    if (role.data==\"[ROLE_ADMIN]\") {      \r\n      this.setState({role: \"[ROLE_ADMIN]\" })\r\n    } else{\r\n      this.setState({role: \"[ROLE_USER]\" })\r\n    } \r\n    if (this.state.role==\"[ROLE_ADMIN]\") {      \r\n      this.setState({headings: [\"No\", \"ID\", \"Action\", \"Email\", \"Total Nominal (Rp)\", \"Payment Method\", \"Status\"] })\r\n    } else{\r\n      this.setState({headings: [\"No\", \"ID\", \"Email\", \"Total Nominal (Rp)\", \"Payment Method\", \"Status\"] })\r\n    } \r\n  }\r\n\r\n  async getAll(){  \r\n  const token=this.state.userToken;\r\n  const config = {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n}    \r\n    const getRole = await Axios.get('http://localhost:8080/top_up_management/getRole',config);\r\n    await Axios.get('http://localhost:8080/top_up_management/getAll',config).then((getData)=>{\r\n      const result_topup = getData.data;\r\n      this.setState({ data: result_topup });\r\n      this.fetchData(getRole);\r\n      $(\"#example1\").DataTable({\r\n        responsive: true,\r\n        autoWidth: false,\r\n      });  \r\n    });    \r\n    console.log(getRole)\r\n   \r\n    var role=getRole;    \r\n    console.log(role.data)\r\n    if (role.data==\"[ROLE_ADMIN]\") {      \r\n      this.setState({role: \"[ROLE_ADMIN]\" })\r\n    } else{\r\n      this.setState({role: \"[ROLE_USER]\" })\r\n    } \r\n\r\n   \r\n            \r\n    // $(\"#example1\").DataTable().destroy();\r\n      \r\n    // this.fetchData();\r\n  }\r\n\r\n  getId = (id) => {\r\n  const token=this.state.userToken;  \r\n  const config = {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n}\r\n    Axios.get('http://localhost:8080/top_up_management/getId/' + id)\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.setState({\r\n          nominal:res.data.nominal,\r\n          paymentMethod:res.data.paymentMethod\r\n        })\r\n    Swal.fire({\r\n      icon: 'warning',\r\n      title: 'Warning!',\r\n      showCancelButton: true,\r\n      text: 'Are you sure want to confirm this?',\r\n    }).then((result) => {\r\n      /* Read more about isConfirmed, isDenied below */\r\n      if (result.isConfirmed) {\r\n        Axios.put('http://localhost:8080/top_up/accept/' + id, res,config)\r\n        .then((response) => {\r\n          console.log(response);\r\n        })\r\n        Swal.fire({\r\n        icon: 'success',\r\n        title: 'Success!',\r\n        showCancelButton: false,\r\n        text:  'Confirm Top Up Already Success!',\r\n        }).then((result)=>{\r\n          if(result.isConfirmed){\r\n            window.location.reload();\r\n          }\r\n        })\r\n      }\r\n    })\r\n      })\r\n  }\r\n\r\n  getId2 = (id) => {\r\n  const token=this.state.userToken;    \r\n    const config = {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n  }\r\n    Axios.get('http://localhost:8080/top_up_management/getId/' + id)\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.setState({\r\n          nominal:res.data.nominal,\r\n          paymentMethod:res.data.paymentMethod\r\n        })\r\n    Swal.fire({\r\n      icon: 'warning',\r\n      title: 'Warning!',\r\n      showCancelButton: true,\r\n      text: 'Are you sure want to Cancel this?',\r\n    }).then((result) => {\r\n      /* Read more about isConfirmed, isDenied below */\r\n      if (result.isConfirmed) {\r\n        Axios.put('http://localhost:8080/top_up/cancel/' + id, res,config)\r\n        .then((response) => {\r\n          console.log(response);\r\n        })\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Success!',\r\n          showCancelButton: false,\r\n          text:  'Cancel Top Up Already Success!',\r\n          }).then((result)=>{\r\n            if(result.isConfirmed){\r\n              window.location.reload();\r\n            }\r\n          })\r\n      }\r\n    })\r\n      })\r\n  }\r\n\r\n  fetchData(getRole) {\r\n    var role=getRole;\r\n    console.log(role.data)\r\n    let results = [];\r\n    let result = this.state.data;\r\n    var no=1;\r\n\r\n\r\n    result.forEach( topup => {\r\n      var row = [];\r\n      var actVal, statusVal = '';\r\n      if (topup.statusPayment == 'Success') {\r\n        actVal = <td className=\"text-center py-0 align-middle\">\r\n          <div className=\"btn-group btn-group-sm\">\r\n            -\r\n          </div>\r\n        </td>\r\n        statusVal = <Status type=\"success\" val=\"Success\" />\r\n      } else if (topup.statusPayment == 'Cancelled') {\r\n        actVal = <td className=\"text-center py-0 align-middle\">\r\n          <div className=\"btn-group btn-group-sm\">\r\n            -\r\n          </div>\r\n        </td>\r\n        statusVal = <Status type=\"danger\" val=\"Cancelled\" />\r\n      } else {\r\n        actVal = <td className=\"text-center py-0 align-middle\">\r\n          <div className=\"btn-group btn-group-sm\">\r\n            <Action type=\"success\" title=\"Edit\" icon=\"fas fa-check\" onClick={() => this.getId(topup.historyBalanceId)} />\r\n            <Action type=\"danger\" title=\"Delete\" icon=\"fas fa-ban\" onClick={() => this.getId2(topup.historyBalanceId)} />\r\n          </div>\r\n        </td>\r\n        statusVal = <Status type=\"warning\" val=\"Pending\" />\r\n      }\r\n      row.push(<td className=\"text-center\" >{no++}</td>);\r\n      row.push(<td className=\"text-center\" >{topup.historyBalanceId}</td>);\r\n      if (role.data===\"[ROLE_ADMIN]\"){\r\n        row.push(<td className=\"text-center\" >{actVal}</td>);\r\n      }      \r\n      // row.push(<td className=\"text-center\" >{actVal}</td>);\r\n      row.push(<td className=\"text-center\" >{topup.userBalanceEntity.userEntity.email}</td>);\r\n      row.push(<td>{<NumberFormat value={topup.nominal} displayType={'text'} thousandSeparator={true} prefix={'Rp. '}/>}</td>);\r\n      row.push(<td>{topup.paymentMethod}</td>);\r\n      row.push(<td className=\"text-center\" >{statusVal}</td>);\r\n      results.push(row);\r\n    });\r\n    this.setState({ rows: results });\r\n  }\r\n\r\n  async show(){\r\n  const token=this.state.userToken;\r\n  const config = {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n}\r\n    const getRole = await Axios.get('http://localhost:8080/top_up_management/getRole',config);\r\n    var role=getRole;\r\n    if (role.data==\"[ROLE_ADMIN]\") {      \r\n      this.setState({role: \"[ROLE_ADMIN]\" })\r\n    } else{\r\n      this.setState({role: \"[ROLE_USER]\" })\r\n    } \r\n    if (this.state.role==\"[ROLE_ADMIN]\") {      \r\n      this.setState({show:true })\r\n    } else{\r\n      this.setState({show:false})\r\n    }\r\n  }\r\n\r\n  handleValidation2() {\r\n    const token=this.state.userToken;\r\n    const config = {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n  }\r\n    var pass=AuthService.getPassword(config);\r\n    let fields = this.state.fields;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    //Password\r\n    if (!fields[\"PasswordConfirm\"]) {\r\n      formIsValid = false;\r\n      errors[\"PasswordConfirm\"] = \"Password cannot be empty\";\r\n    }\r\n\r\n    //Confrim Password\r\n    if (!fields[\"PasswordConfirm2\"]) {\r\n      formIsValid = false;\r\n      errors[\"PasswordConfirm2\"] = \"Password Confirm cannot be empty\";\r\n    }\r\n\r\n    if (fields[\"PasswordConfirm\"]!==fields[\"PasswordConfirm2\"]){\r\n      formIsValid = false;\r\n      errors[\"PasswordConfirm2\"] = \"Password don't Match\";\r\n    }\r\n\r\n    this.setState({ errors: errors });\r\n    return formIsValid;\r\n  }\r\n\r\n  async validatepass(){\r\n    let fields = this.state.fields;\r\n    const token=this.state.userToken;      \r\n    const config = {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n  }\r\n  const topup = {    \r\n    user_balance_id: fields[\"Name\"],\r\n    password: fields[\"PasswordConfirm\"]\r\n  }\r\n    var  match=await Axios.post('http://localhost:8080/top_up_management/getPass',topup,config);    \r\n    return match.data\r\n  }\r\n\r\n  contactSubmit2(e) {\r\n    const token=this.state.userToken;      \r\n    const config = {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n  }\r\n    let fields = this.state.fields;\r\n    e.preventDefault();\r\n    if (this.handleValidation2()) {      \r\n      $('#passwordModal').modal('hide');\r\n      const topup = {\r\n        nominal: fields[\"Nominal\"],\r\n        paymentMethod: fields[\"Payment\"],\r\n        user_balance_id: fields[\"Name\"],\r\n        password: fields[\"PasswordConfirm\"]\r\n      }\r\n      console.log(topup)            \r\n      this.validatepass().then(x => {       \r\n        if (x==true) {\r\n          Axios.post('http://localhost:8080/top_up/post2', topup,config)\r\n              .then((response) => {\r\n                console.log(response);\r\n              })\r\n        Swal.fire({\r\n          title: \"Success Save Top Up Data!\",\r\n          text: \"You Already Success to save this data!\",\r\n          icon: \"success\",\r\n          buttons: true,\r\n        })\r\n        .then((isConfirmed) => {\r\n          if (isConfirmed) {\r\n            window.location.reload();\r\n        }\r\n        })\r\n        } else {\r\n          Swal.fire({\r\n            title: \"Wrong Password\",\r\n            text: \"Failed Wrong Password\",\r\n            icon: \"warning\",\r\n            buttons: true,\r\n          })\r\n          .then((isConfirmed) => {\r\n            if (isConfirmed) {\r\n              window.location.reload();\r\n          }\r\n          })\r\n        }\r\n    })      \r\n      \r\n      \r\n\r\n    } \r\n  }\r\n\r\n  handleChange2(field, e) {\r\n    let fields = this.state.fields;\r\n    fields[field] = e.target.value;\r\n    this.setState({ fields });\r\n  }\r\n\r\n  handleValidation() {\r\n    let fields = this.state.fields;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    //Name\r\n    if (!fields[\"Name\"]) {\r\n      formIsValid = false;\r\n      errors[\"Name\"] = \"Name cannot be empty\";\r\n    }\r\n\r\n    //Nominal\r\n    if (!fields[\"Nominal\"]) {\r\n      formIsValid = false;\r\n      errors[\"Nominal\"] = \"Nominal cannot be empty\";\r\n    }\r\n\r\n    //Payment\r\n    if (!fields[\"Payment\"]) {\r\n      formIsValid = false;\r\n      errors[\"Payment\"] = \"Payment cannot be empty\";\r\n    }\r\n\r\n    this.setState({ errors: errors });\r\n    return formIsValid;\r\n  }\r\n\r\n  contactSubmit(e) {\r\n    e.preventDefault();\r\n    if (this.handleValidation()) {\r\n      $('#topupModal').modal('hide');\r\n      $('#checkModal').modal('show');\r\n    }\r\n  }\r\n\r\n  handleChange(field, e) {\r\n    let fields = this.state.fields;\r\n    fields[field] = e.target.value;\r\n    this.setState({ fields });    \r\n  } \r\n\r\n  refresh(){\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    \r\n    const { rows,headings,show } = this.state;        \r\n    return (            \r\n      <div className=\"wrapper\">\r\n        {/* Navbar */}      \r\n        {/* Content Wrapper. Contains page content */}\r\n        <div className=\"content-wrapper\">\r\n          {/* Content Header (Page header) */}\r\n          {/* /.modal */}\r\n          <div className=\"modal fade\" id=\"cancelModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabesl\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                    Do you want to cancel?\r\n                  </h5>\r\n                  <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">×</span>\r\n                  </button>\r\n                </div>\r\n                <div className=\"modal-body\">Are you serious want to cancel?</div>\r\n                <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\">\r\n                    Close\r\n                  </button>\r\n                  <a className=\"btn btn-danger\" id=\"btn-delete\" href=\"#\" data-dismiss=\"modal\" data-toggle=\"modal\" data-target=\"#CancelModal\" onclick=\"cancelstatus()\">Cancel</a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal fade\" id=\"topupModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabesl\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                    Top Up\r\n                  </h5>\r\n                  <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">×</span>\r\n                  </button>\r\n                </div>\r\n                <form\r\n                role=\"form\"\r\n                id=\"addtopup\"\r\n                onSubmit={this.contactSubmit.bind(this)}\r\n              >\r\n                <div className=\"modal-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-5\">\r\n                      <label className=\"title-module\">ID User:</label>\r\n                    </div>\r\n                    <div className=\"col-md-7\">\r\n                      <input type=\"text\" id=\"topup-user\" name=\"name\" className=\"form-control\" placeholder=\"Enter ID User\" onChange={this.handleChange.bind(this, \"Name\")} value={this.state.fields[\"Name\"]} />\r\n                      <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"Name\"]}\r\n                          </span>\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"divider\" />\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-5\">\r\n                      <label className=\"title-module\">Total Nominal:</label>\r\n                    </div>\r\n                    <div className=\"col-lg-7\">\r\n                      <div className=\"form-group\">\r\n                        <div className=\"radio-group\">\r\n                          <div className=\"row row-cols-md-3\" style={{ textAlign: 'center' }}>\r\n                            <div className=\"icheck-primary\">\r\n                              <input type=\"radio\" name=\"option\" id=\"option1\" value=\"10000\"  onChange={this.handleChange.bind(this, \"Nominal\")} />\r\n                              <label htmlFor=\"option1\" style={{ fontWeight: 'normal' }}>Rp. 10000</label>\r\n                            </div>\r\n                            <div className=\"icheck-primary\">\r\n                              <input type=\"radio\" name=\"option\" id=\"option2\" value=\"20000\"  onChange={this.handleChange.bind(this, \"Nominal\")} />\r\n                              <label htmlFor=\"option2\" style={{ fontWeight: 'normal' }}>Rp. 20000</label>\r\n                            </div>\r\n                            <div className=\"icheck-primary\">\r\n                              <input type=\"radio\" name=\"option\" id=\"option3\" value=\"30000\"  onChange={this.handleChange.bind(this, \"Nominal\")} />\r\n                              <label htmlFor=\"option3\" style={{ fontWeight: 'normal' }}>Rp. 30000</label>\r\n                            </div>\r\n                            <div className=\"icheck-primary\">\r\n                              <input type=\"radio\" name=\"option\" id=\"option4\" value=\"50000\"  onChange={this.handleChange.bind(this, \"Nominal\")} />\r\n                              <label htmlFor=\"option4\" style={{ fontWeight: 'normal' }}>Rp. 50000</label>\r\n                            </div>\r\n                            <div className=\"icheck-primary\">\r\n                              <input type=\"radio\" name=\"option\" id=\"option5\" value=\"100000\"  onChange={this.handleChange.bind(this, \"Nominal\")} />\r\n                              <label htmlFor=\"option5\" style={{ fontWeight: 'normal' }}>Rp. 100000</label>\r\n                            </div>\r\n                            <div className=\"icheck-primary\">\r\n                              <input type=\"radio\" name=\"option\" id=\"option6\" value=\"200000\" onChange={this.handleChange.bind(this, \"Nominal\")} />\r\n                              <label htmlFor=\"option6\" style={{ fontWeight: 'normal' }}>Rp. 200000</label>\r\n                            </div>\r\n                            <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"Nominal\"]}\r\n                          </span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"divider\" />\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-5\">\r\n                      <label className=\"title-module\">Payment Method:</label>\r\n                    </div>\r\n                    <div className=\"col-lg-7\">\r\n                      <div className=\"form-group\">\r\n                        <div className=\"radio-group method\">\r\n                          <div className=\"row row-cols-md-3\" style={{ textAlign: 'center' }}>\r\n                            <div className=\"icheck-primary\">\r\n                              <input type=\"radio\" name=\"option2\" id=\"option-method1\" Value=\"Credit Card\" onChange={this.handleChange.bind(this, \"Payment\")} />\r\n                              <label htmlFor=\"option1\" style={{ fontWeight: 'normal' }}>Credit Card</label>\r\n                            </div>\r\n                            <div className=\"icheck-primary\">\r\n                              <input type=\"radio\" name=\"option2\" id=\"option-method2\" Value=\"Paypall\" onChange={this.handleChange.bind(this, \"Payment\")} />\r\n                              <label htmlFor=\"option2\" style={{ fontWeight: 'normal' }}>Paypall</label>\r\n                            </div>\r\n                            <div className=\"icheck-primary\">\r\n                              <input type=\"radio\" name=\"option2\" id=\"option-method3\" Value=\"OVO\" onChange={this.handleChange.bind(this, \"Payment\")} />\r\n                              <label htmlFor=\"option3\" style={{ fontWeight: 'normal' }}>OVO</label>\r\n                            </div>\r\n                            <div className=\"icheck-primary gopay\">\r\n                              <input type=\"radio\" name=\"option2\" id=\"option-method4\" Value=\"Gopay\" onChange={this.handleChange.bind(this, \"Payment\")}  />\r\n                              <label htmlFor=\"option4\" style={{ fontWeight: 'normal' }}>Gopay</label>\r\n                            </div>\r\n                            <div className=\"icheck-primary dana\">\r\n                              <input type=\"radio\" name=\"option2\" id=\"option-method5\" Value=\"Dana\" onChange={this.handleChange.bind(this, \"Payment\")} />\r\n                              <label htmlFor=\"option5\" style={{ fontWeight: 'normal' }}>Dana</label>\r\n                            </div>\r\n                            <div className=\"icheck-primary cash\">\r\n                              <input type=\"radio\" name=\"option2\" id=\"option-method6\" Value=\"Cash\" onChange={this.handleChange.bind(this, \"Payment\")}  />\r\n                              <label htmlFor=\"option6\" style={{ fontWeight: 'normal' }}>Cash</label>\r\n                            </div>\r\n                            <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"Payment\"]}\r\n                          </span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\">\r\n                    Close\r\n                  </button>\r\n                  <button className=\"btn btn-primary\" id=\"btn-delete\" type=\"submit\" >Next</button>\r\n                </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal fade\" id=\"checkModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabesl\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                    Check Data Top Up\r\n                  </h5>\r\n                  <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">×</span>\r\n                  </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-5\">\r\n                      <label className=\"title-module\">Username:</label>\r\n                    </div>\r\n                    <div className=\"col-md-7\">\r\n                      <input type=\"text\" id=\"checkuser\" name=\"name\" className=\"form-control\" value={this.state.fields[\"Name\"]} readOnly placeholder />\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"divider\" />\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-5\">\r\n                      <label className=\"title-module\">Total Nominal:</label>\r\n                    </div>\r\n                    <div className=\"col-md-7\">\r\n                      <input type=\"text\" id=\"checknominal\" name=\"name\" className=\"form-control\" value={this.state.fields[\"Nominal\"]} readOnly placeholder />\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"divider\" />\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-5\">\r\n                      <label className=\"title-module\">Payment Method:</label>\r\n                    </div>\r\n                    <div className=\"col-md-7\">\r\n                      <input type=\"text\" id=\"checkmethod\" name=\"name\" className=\"form-control\" value={this.state.fields[\"Payment\"]} readOnly placeholder />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\" data-target=\"#topupModal\" data-toggle=\"modal\">\r\n                    Back\r\n                  </button>\r\n                  <a className=\"btn btn-primary\" id=\"btn-delete\" href=\"#\" data-dismiss=\"modal\" data-toggle=\"modal\" data-target=\"#passwordModal\">Next</a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal fade\" id=\"passwordModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabesl\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                    Password\r\n                  </h5>\r\n                  <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">×</span>\r\n                  </button>\r\n                </div>\r\n                <form\r\n                role=\"form\"\r\n                id=\"addtopup\"\r\n                onSubmit={this.contactSubmit2.bind(this)}\r\n              >\r\n                <div className=\"modal-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-5\">\r\n                      <label className=\"title-module\">Password:</label>\r\n                    </div>\r\n                    <div className=\"col-md-7\">\r\n                      <input type=\"password\" id=\"PasswordConfirm\" name=\"PasswordConfirm\" className=\"form-control\" placeholder=\"Password\" onChange={this.handleChange2.bind(this, \"PasswordConfirm\")} value={this.state.fields[\"PasswordConfirm\"]} />\r\n                      <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"PasswordConfirm\"]}\r\n                          </span>\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"divider\" />\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-5\">\r\n                      <label className=\"title-module\">Confirm Password:</label>\r\n                    </div>\r\n                    <div className=\"col-md-7\">\r\n                      <input type=\"password\" id=\"PasswordConfirm2\" name=\"PasswordConfirm2\" className=\"form-control\" placeholder=\"Confirm Password\" onChange={this.handleChange2.bind(this, \"PasswordConfirm2\")} value={this.state.fields[\"PasswordConfirm2\"]} />\r\n                      <span style={{ color: \"red\" }}>\r\n                            {this.state.errors[\"PasswordConfirm2\"]}\r\n                          </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\" data-toggle=\"modal\" data-target=\"#checkModal\">\r\n                    Back\r\n                  </button>\r\n                  <button className=\"btn btn-success\" id=\"btn-delete\" type=\"submit\">Confirm</button>\r\n                </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Main content */}\r\n\r\n          <section className=\"content-header\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row mb-2\">\r\n                <div className=\"col-sm-6\">\r\n                  <h3>Top Up Management</h3>\r\n                </div>\r\n                <div className=\"col-sm-6\">\r\n                  <ol className=\"breadcrumb float-sm-right\">\r\n                    <li className=\"breadcrumb-item\">\r\n                      <a href='/'>Home</a>\r\n                    </li>\r\n                    <li className=\"breadcrumb-item active\">Top Up Management</li>\r\n                  </ol>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* <!-- /.container-fluid --> */}\r\n          </section>\r\n\r\n          <section className=\"content pdg-btm\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12 ctm-responsive\">\r\n                      { show ?  <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary add-btn\"\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#topupModal\"                                                \r\n                        style={{ float: \"right\" }}\r\n                      >\r\n                        <i className=\"nav-icon fas fa-plus\"></i>\r\n                      Add Top Up                 \r\n                    </button> : null}                     \r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"card-body\">                  \r\n                  <DataTable headings={headings} rows={rows} />                    \r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          {/* /.content */}\r\n        </div>\r\n        {/* /.content-wrapper */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TopUpManagement;","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\SlideShowManagement\\SlideShowManagement.js",["125","126","127","128"],"D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\index.js",[],"D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Auth\\Auth.js",["129","130","131","132","133","134","135"],"import React, { Component } from \"react\";\r\nimport \"./Assets/Css/login.css\";\r\nimport LoginImage from \"./Assets/Images/cover.png\";\r\nimport BookShelfImage from \"./Assets/Images/bookshelf.png\";\r\nimport { Link, Redirect, withRouter } from \"react-router-dom\";\r\nimport AuthService from '../../Services/auth.service'\r\nimport Swal from 'sweetalert2'\r\n\r\nclass Auth extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n\r\n    this.state = {\r\n       fields: {},\r\n       errors: {}\r\n    }\r\n  }\r\n\r\n  handleValidationSignUp() {\r\n    let fields = this.state.fields;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    //username\r\n    if(!fields[\"userNameSignUp\"]) {\r\n      formIsValid = false;\r\n      errors[\"userNameSignUp\"] = \"Username cannot be empty\"\r\n    }\r\n\r\n    //name\r\n    if(!fields[\"fullNameSignUp\"]) {\r\n      formIsValid = false;\r\n      errors[\"fullNameSignUp\"] = \"Name cannot be empty\"\r\n    }\r\n\r\n    //email\r\n    if(!fields[\"emailSignUp\"]) {\r\n      formIsValid = false\r\n      errors[\"emailSignUp\"] = \"Cannot be empty\"\r\n    }\r\n\r\n    if(typeof fields[\"emailSignUp\"] !== \"undefined\") {\r\n      let lastAtPos = fields[\"emailSignUp\"].lastIndexOf('@')\r\n      let lastDotPos = fields[\"emailSignUp\"].lastIndexOf('.')\r\n\r\n      if(!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"emailSignUp\"].indexOf('@@') == -1 && lastDotPos > 2 && (fields[\"emailSignUp\"].length - lastDotPos) > 2)) {\r\n        formIsValid = false;\r\n        errors[\"emailSignUp\"] = \"Email is not valid\"\r\n      }\r\n    }\r\n\r\n    if(fields[\"PasswordSignUp\"] != null) {\r\n      let lengthPass = fields[\"PasswordSignUp\"].length\r\n      if(lengthPass < 8) {\r\n        formIsValid = false\r\n        errors[\"PasswordSignUp\"] = \"Your password must be at least 8 characters long\"\r\n      }\r\n    }\r\n\r\n    if(!fields[\"PasswordSignUp\"]) {\r\n      formIsValid = false\r\n      errors[\"PasswordSignUp\"] = \"Password cannot be empty\"\r\n    }\r\n\r\n    this.setState({errors: errors})\r\n    return formIsValid\r\n  }\r\n\r\n  handleValidationSignIn() {\r\n    let fields = this.state.fields;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    //email\r\n    if(!fields[\"emailSignIn\"]) {\r\n      formIsValid = false\r\n      errors[\"emailSignIn\"] = \"Email cannot be empty\"\r\n    }\r\n\r\n    if(typeof fields[\"emailSignIn\"] !== \"undefined\") {\r\n      let lastAtPos = fields[\"emailSignIn\"].lastIndexOf('@')\r\n      let lastDotPos = fields[\"emailSignIn\"].lastIndexOf('.')\r\n\r\n      if(!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"emailSignIn\"].indexOf('@@') == -1 && lastDotPos > 2 && (fields[\"emailSignIn\"].length - lastDotPos) > 2)) {\r\n        formIsValid = false;\r\n        errors[\"emailSignIn\"] = \"Email is not valid\"\r\n      }\r\n    }\r\n\r\n    if(!fields[\"PasswordSignIn\"]) {\r\n      formIsValid = false\r\n      errors[\"PasswordSignIn\"] = \"Password cannot be empty\"\r\n    }\r\n\r\n    this.setState({errors: errors})\r\n    return formIsValid\r\n  }\r\n\r\n  handleValidationForgotPass() {\r\n    let fields = this.state.fields;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    //username\r\n    if(!fields[\"userNameForgotPass\"]) {\r\n      formIsValid = false;\r\n      errors[\"userNameForgotPass\"] = \"Username cannot be empty\"\r\n    }\r\n\r\n    //email\r\n    if(!fields[\"emailForgotPass\"]) {\r\n      formIsValid = false\r\n      errors[\"emailForgotPass\"] = \"Cannot be empty\"\r\n    }\r\n\r\n    if(typeof fields[\"emailForgotPass\"] !== \"undefined\") {\r\n      let lastAtPos = fields[\"emailForgotPass\"].lastIndexOf('@')\r\n      let lastDotPos = fields[\"emailForgotPass\"].lastIndexOf('.')\r\n\r\n      if(!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"emailForgotPass\"].indexOf('@@') == -1 && lastDotPos > 2 && (fields[\"emailForgotPass\"].length - lastDotPos) > 2)) {\r\n        formIsValid = false;\r\n        errors[\"emailForgotPass\"] = \"Email is not valid\"\r\n      }\r\n    }\r\n\r\n    this.setState({errors: errors})\r\n    return formIsValid\r\n  }\r\n\r\n  contactSubmitSignUp(e) {\r\n    e.preventDefault()\r\n\r\n    if(this.handleValidationSignUp()){\r\n      alert(\"Success!\")\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  contactSubmitSignIn(e) {\r\n    e.preventDefault()\r\n\r\n    if(this.handleValidationSignIn()){\r\n      this.props.history.push('/')\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  contactSubmitForgotPass(e) {\r\n    e.preventDefault()\r\n\r\n    if(this.handleValidationForgotPass()){\r\n      alert(\"Success!\")\r\n    } else {\r\n    }\r\n  }\r\n\r\n  handleChangeSignUp(field, e) {\r\n    let fields = this.state.fields\r\n    fields[field] = e.target.value\r\n    this.setState({fields})\r\n  }\r\n\r\n  handleChangeSignIn(field, e) {\r\n    let fields = this.state.fields\r\n    fields[field] = e.target.value\r\n    this.setState({fields})\r\n  }\r\n\r\n  handleChangeForgotPass(field, e) {\r\n    let fields = this.state.fields\r\n    fields[field] = e.target.value\r\n    this.setState({fields})\r\n  }\r\n\r\n\r\n  displaySignUp() {\r\n      var login = document.getElementById(\"login\")\r\n      var register = document.getElementById(\"register\")\r\n      var forgotPassword = document.getElementById(\"forgotPassword\")\r\n\r\n      login.style.display = \"none\"\r\n      register.style.display = \"block\"\r\n      forgotPassword.style.display = \"none\"\r\n  }\r\n\r\n  displayLogIn() {\r\n    var login = document.getElementById(\"login\")\r\n    var register = document.getElementById(\"register\")\r\n    var forgotPassword = document.getElementById(\"forgotPassword\")\r\n\r\n    login.style.display = \"block\";\r\n    register.style.display = \"none\";\r\n    forgotPassword.style.display = \"none\";\r\n  }\r\n\r\n  displayForgotPassword() {\r\n    var login = document.getElementById(\"login\")\r\n    var register = document.getElementById(\"register\")\r\n    var forgotPassword = document.getElementById(\"forgotPassword\")\r\n\r\n    login.style.display = \"none\";\r\n    register.style.display = \"none\";\r\n    forgotPassword.style.display = \"block\";\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault()\r\n\r\n    let email = this.state.fields[\"emailSignIn\"]\r\n    let password = this.state.fields[\"PasswordSignIn\"]\r\n\r\n\r\n    AuthService.login(email, password).then(\r\n      () => {\r\n        this.props.history.push(\"/\");\r\n        window.location.reload();\r\n      }\r\n    ).catch(error => Swal.fire(\r\n      'Login Failed !',\r\n      'Either email or password is incorrect',\r\n      'error'\r\n  ))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main className=\"main-style\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-7 px-0 d-none d-sm-block\">\r\n              <div className=\"main-title\">\r\n                <h1>\r\n                  Book is a window <br />\r\n                  to the world\r\n                </h1>\r\n                <p>Photo by Mark Pan4ratte on Unsplash</p>\r\n                <div className=\"img-cover\"></div>\r\n                <img src={LoginImage} alt=\"login image\" className=\"login-img\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-sm-5 login-section-wrapper\">\r\n              <div className=\"brand-wrapper\">\r\n                <img src={BookShelfImage} alt=\"logo\" className=\"logo\" />\r\n              </div>\r\n\r\n              {/* <!--Login Form--> */}\r\n              <div className=\"login-wrapper my-auto\" id=\"login\" onSubmit={this.handleLogin}>\r\n                <h1 className=\"form-title\">Login</h1>\r\n                <p className=\"form-subtitle\">\r\n                  Welcome Back, Please Login to your Account\r\n                </p>\r\n\r\n                <form action=\"#\" id=\"loginForm\" >\r\n                  <div className=\"container-form\">\r\n                    <div className=\"login form-group bottom-label\">\r\n                      <label for=\"exampleInputEmail1\" className=\"label-login\">\r\n                        Email address\r\n                      </label>\r\n                      <input\r\n                        type=\"email\"\r\n                        name=\"emailSignIn\"\r\n                        className=\"form-control custom-form\"\r\n                        id=\"exampleInputEmail1\"\r\n                        placeholder=\"Enter email\"\r\n                        onChange={this.handleChangeSignUp.bind(this, \"emailSignIn\")}\r\n                        value={this.state.fields[\"emailSignIn\"]}\r\n                      />\r\n                      <span style={{color: \"red\", marginLeft: \"15px\", fontSize: \"13px\"}}>{this.state.errors[\"emailSignIn\"]}</span>\r\n                    </div>\r\n                    <div className=\"login form-group bottom-label\">\r\n                      <label\r\n                        for=\"exampleInputPassword1\"\r\n                        className=\"label-login\"\r\n                      >\r\n                        Password\r\n                      </label>\r\n                      <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        className=\"form-control custom-form\"\r\n                        id=\"exampleInputPassword1\"\r\n                        placeholder=\"Password\"\r\n                        onChange={this.handleChangeSignUp.bind(this, \"PasswordSignIn\")}\r\n                        value={this.state.fields[\"PasswordSignIn\"]}\r\n                      />\r\n                      <span style={{color: \"red\", marginLeft: \"15px\", fontSize: \"13px\"}}>{this.state.errors[\"PasswordSignIn\"]}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"pass-manager\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"rememberPassword\"\r\n                      name=\"rememberPassword\"\r\n                    />\r\n                    <label for=\"rememberPassword\">Remember Password</label>\r\n\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"forgot-btn\"\r\n                      onClick={() => this.displayForgotPassword()}\r\n                    >\r\n                      Forgot Password\r\n                    </button>\r\n\r\n                  </div>\r\n                  <div className=\"container-btn\">\r\n                    <div className=\"row\">\r\n                      <button\r\n                        name=\"login\"\r\n                        id=\"submit\"\r\n                        className=\"btn login-btn\"\r\n                        type=\"submit\"\r\n                        value=\"Login\"\r\n                      >Login</button>\r\n                      <input\r\n                        name=\"signup\"\r\n                        id=\"signup\"\r\n                        className=\"btn signup-btn\"\r\n                        type=\"button\"\r\n                        value=\"Sign Up\"\r\n                        onClick={() => this.displaySignUp()}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n\r\n              {/* <!--Register Form--> */}\r\n              <div className=\"register-wrapper my-auto\" id=\"register\" onSubmit={this.contactSubmitSignUp.bind(this)}>\r\n                <h1 className=\"form-title\">Register</h1>\r\n                <p className=\"form-subtitle\">\r\n                  Welcome! Please Register to your Account\r\n                </p>\r\n\r\n                <form role=\"form\" id=\"formRegister\">\r\n                  <div className=\"container-form\">\r\n                    <div className=\"login form-group bottom-label\">\r\n                      <label for=\"inputUsername\" className=\"label-login\">\r\n                        Username\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"userNameSignUp\"\r\n                        className=\"form-control custom-form\"\r\n                        id=\"inputUsername\"\r\n                        placeholder=\"Enter username\"\r\n                        autocomplete=\"off\"\r\n                        onChange={this.handleChangeSignUp.bind(this, \"userNameSignUp\")}\r\n                        value={this.state.fields[\"userNameSignUp\"]}\r\n                      />\r\n                      <span style={{color: \"red\", marginLeft: \"15px\", fontSize: \"13px\"}}>{this.state.errors[\"userNameSignUp\"]}</span>\r\n                    </div>\r\n                    <div className=\"login form-group bottom-label\">\r\n                      <label for=\"inputFullName\" className=\"label-login\">\r\n                        Full Name\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"fullNameSignUp\"\r\n                        className=\"form-control custom-form\"\r\n                        id=\"inputFullName\"\r\n                        placeholder=\"Enter full name\"\r\n                        autocomplete=\"off\"\r\n                        onChange={this.handleChangeSignUp.bind(this, \"fullNameSignUp\")}\r\n                        value={this.state.fields[\"fullNameSignUp\"]}\r\n                      />\r\n                      <span style={{color: \"red\", marginLeft: \"15px\", fontSize: \"13px\"}}>{this.state.errors[\"fullNameSignUp\"]}</span>\r\n                    </div>\r\n                    <div className=\"login form-group bottom-label\">\r\n                      <label for=\"inputEmail\" className=\"label-login\">\r\n                        Email address\r\n                      </label>\r\n                      <input\r\n                        type=\"email\"\r\n                        name=\"emailSignUp\"\r\n                        className=\"form-control custom-form\"\r\n                        id=\"inputEmail\"\r\n                        placeholder=\"Enter email\"\r\n                        autocomplete=\"off\"\r\n                        onChange={this.handleChangeSignUp.bind(this, \"emailSignUp\")}\r\n                        value={this.state.fields[\"emailSignUp\"]}\r\n                      />\r\n                      <span style={{color: \"red\", marginLeft: \"15px\", fontSize: \"13px\"}}>{this.state.errors[\"emailSignUp\"]}</span>\r\n                    </div>\r\n                    <div className=\"login form-group bottom-label\">\r\n                      <label for=\"inputPassword\" className=\"label-login\">\r\n                        Password\r\n                      </label>\r\n                      <input\r\n                        type=\"password\"\r\n                        name=\"passwordSignUp\"\r\n                        className=\"form-control custom-form\"\r\n                        id=\"exampleInputPassword\"\r\n                        placeholder=\"Password\"\r\n                        onChange={this.handleChangeSignUp.bind(this, \"PasswordSignUp\")}\r\n                        value={this.state.fields[\"PasswordSignUp\"]}\r\n                      />\r\n                      <span style={{color: \"red\", marginLeft: \"15px\", fontSize: \"13px\"}}>{this.state.errors[\"PasswordSignUp\"]}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"container-btn\">\r\n                    <div className=\"row \">\r\n                      <button\r\n                        name=\"signup\"\r\n                        id=\"signup\"\r\n                        className=\"btn signup-btn\"\r\n                        type=\"submit\"\r\n                        value=\"Sign Up\"\r\n                      >Sign Up</button>\r\n                      <input\r\n                        name=\"login\"\r\n                        id=\"login\"\r\n                        className=\"btn login-btn\"\r\n                        type=\"button\"\r\n                        value=\"Login\"\r\n                        onClick={() => this.displayLogIn()}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n\r\n              {/* <!--Form Forgot Password--> */}\r\n              <div className=\"forgot-wrapper my-auto\" id=\"forgotPassword\" onSubmit={this.contactSubmitForgotPass.bind(this)}>\r\n                <h1 className=\"form-title\">Forgot Password</h1>\r\n                <p className=\"form-subtitle\">\r\n                  Forgot your password? Don't worry, we got you covered.\r\n                </p>\r\n\r\n                <form action=\"#\" id=\"formForgot\">\r\n                  <div className=\"container-form\">\r\n                    <div className=\"login form-group bottom-label\">\r\n                      <label for=\"inputUsername\" className=\"label-login\">\r\n                        Username\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"userNameForgotPass\"\r\n                        className=\"form-control custom-form\"\r\n                        id=\"inputUsername\"\r\n                        placeholder=\"Enter username\"\r\n                        autocomplete=\"off\"\r\n                        onChange={this.handleChangeSignUp.bind(this, \"userNameForgotPass\")}\r\n                        value={this.state.fields[\"userNameForgotPass\"]}\r\n                      />\r\n                      <span style={{color: \"red\", marginLeft: \"15px\", fontSize: \"13px\"}}>{this.state.errors[\"userNameForgotPass\"]}</span>\r\n                    </div>\r\n                    <div className=\"login form-group bottom-label\">\r\n                      <label for=\"inputEmail\" className=\"label-login\">\r\n                        Email address\r\n                      </label>\r\n                      <input\r\n                        type=\"email\"\r\n                        name=\"emailForgotPass\"\r\n                        className=\"form-control custom-form\"\r\n                        id=\"inputEmail\"\r\n                        placeholder=\"Enter email\"\r\n                        autocomplete=\"off\"\r\n                        onChange={this.handleChangeSignUp.bind(this, \"emailForgotPass\")}\r\n                        value={this.state.fields[\"emailForgotPass\"]}\r\n                      />\r\n                      <span style={{color: \"red\", marginLeft: \"15px\", fontSize: \"13px\"}}>{this.state.errors[\"emailForgotPass\"]}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"container-btn\">\r\n                    <div className=\"row \">\r\n                      <button\r\n                        name=\"submit\"\r\n                        id=\"submit\"\r\n                        className=\"btn submit-btn\"\r\n                        type=\"submit\"\r\n                        value=\"Submit\"\r\n                      >Submit</button>\r\n                      <input\r\n                        name=\"login\"\r\n                        id=\"login\"\r\n                        className=\"btn login-btn\"\r\n                        type=\"button\"\r\n                        value=\"Back to Login\"\r\n                        onClick={() => this.displayLogIn()}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n\r\n              <p className=\"terms\">\r\n                By signing up, you agree to Book’s <br />\r\n                Terms and Conditions & Privacy Policy\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Auth);\r\n",["136","137"],"D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\Payment\\PaymentInvoicePrintPaid.js",["138"],"import React, { Component } from \"react\";\r\nimport MaxIcon from '../../Auth/Assets/Images/bookshelf.png'\r\n\r\nclass PaymentInvoicePrintPaid extends Component {\r\n  \r\n  componentDidMount() {\r\n    window.addEventListener(\"load\", window.print());\r\n  }  \r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <section className=\"invoice\">\r\n          {/* <!-- title row --> */}\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <h4>\r\n                <img\r\n                  src={MaxIcon}\r\n                  style={{height: \"2rem\"}}\r\n                />{\" \"}\r\n                Maxwell Library\r\n                <small className=\"float-right\">Date: 19/11/2020</small>\r\n              </h4>\r\n            </div>\r\n            {/* <!-- /.col --> */}\r\n          </div>\r\n          {/* <!-- info row --> */}\r\n          <div className=\"row invoice-info\">\r\n            <div className=\"col-sm-4 invoice-col\">\r\n              From\r\n              <address>\r\n                <strong>Maxwell Library</strong>\r\n                <br />\r\n                795 Folsom Ave, Suite 600\r\n                <br />\r\n                San Francisco, CA 94107\r\n                <br />\r\n                Phone: (804) 123-5432\r\n                <br />\r\n                Email: maxwell@library.com\r\n              </address>\r\n            </div>\r\n            {/* <!-- /.col --> */}\r\n            <div className=\"col-sm-4 invoice-col\">\r\n              To\r\n              <address>\r\n                <strong>Niki Zefanya</strong>\r\n                <br />\r\n                795 Folsom Ave, Suite 600\r\n                <br />\r\n                San Francisco, CA 94107\r\n                <br />\r\n                Phone: (555) 539-1037\r\n                <br />\r\n                Email: john.doe@example.com\r\n              </address>\r\n            </div>\r\n            {/* <!-- /.col --> */}\r\n            <div className=\"col-sm-4 invoice-col\">\r\n              <b>Invoice #007612</b>\r\n              <br /><br/>\r\n             <h2><font color=\"green\">PAID</font></h2>\r\n            </div>\r\n            {/* <!-- /.col --> */}\r\n          </div>\r\n          {/* <!-- /.row --> */}\r\n\r\n          {/* <!-- Table row --> */}\r\n          <div className=\"row\">\r\n            <div className=\"col-12 table-responsive\">\r\n              <table className=\"table table-striped\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>No.</th>\r\n                    <th>Book Title</th>\r\n                    <th>Borrowed On</th>\r\n                    <th>Due On</th>\r\n                    <th>Late By</th>\r\n                    <th>Fine Amount</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>1</td>\r\n                    <td>Dilan 1990</td>\r\n                    <td>16/11/2020</td>\r\n                    <td>18/11/2020</td>\r\n                    <td>2 Days</td>\r\n                    <td>Rp. 10.000</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>2</td>\r\n                    <td>Harry Potter</td>\r\n                    <td>16/11/2020</td>\r\n                    <td>18/11/2020</td>\r\n                    <td>2 Days</td>\r\n                    <td>Rp. 10.000</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            {/* <!-- /.col --> */}\r\n          </div>\r\n          {/* <!-- /.row --> */}\r\n\r\n          <div className=\"row\">\r\n            {/* <!-- accepted payments column --> */}\r\n            <div className=\"col-6\"></div>\r\n            {/* <!-- /.col --> */}\r\n            <div className=\"col-6\">\r\n              <p className=\"lead\" style={{float:\"right\"}}>\r\n                Amount Due 25/11/2020\r\n              </p>\r\n\r\n              <div className=\"table-responsive\">\r\n                <table className=\"table\">\r\n                  <tr>\r\n                    <th style={{width:\"50%\"}}>Subtotal:</th>\r\n                    <td>Rp. 20.000</td>\r\n                  </tr>\r\n                </table>\r\n              </div>\r\n            </div>\r\n            {/* <!-- /.col --> */}\r\n          </div>\r\n          {/* <!-- /.row --> */}\r\n\r\n          {/* <!-- /.row --> */}\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PaymentInvoicePrintPaid;\r\n","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\DonationManagement\\DonationManagement.js",["139","140","141"],"import React, { Component } from \"react\";\r\nimport \"bootstrap\";\r\nimport DataTable from \"../../../Components/Datatable/Table\";\r\nimport Action from \"../../../Components/Datatable/Action\";\r\nimport $, { error, event } from 'jquery'\r\nimport 'bootstrap'\r\nimport Swal from 'sweetalert2'\r\nimport axios from 'axios'\r\n\r\n \r\nclass DonationManagement extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n \r\n    this.state = {\r\n      fields: {},\r\n      errors: {},\r\n      data: [],\r\n      rows: [],\r\n      results: [],\r\n      isLoading: true,\r\n    };\r\n  }\r\n \r\n  componentDidMount() {\r\n    this.fetchDataDonate();\r\n    console.log(this.state.data);\r\n  }\r\n \r\n  async fetchDataDonate() {\r\n    let fetchedData = await axios.get(\r\n      'http://localhost:8080/donate'\r\n    );\r\n    console.log(fetchedData.data.data)\r\n    this.setState.isLoading = false;\r\n    const resultDonate = fetchedData.data.data;\r\n    this.setState({ data: resultDonate});\r\n\r\n    $('#example1').DataTable().destroy();\r\n    this.fetchData();\r\n    $(\"#example1\").DataTable({\r\n      responsive: true,\r\n      autoWidth: false,\r\n    });\r\n  }\r\n\r\n  fetchData() {\r\n    const results = [];\r\n    const result = this.state.data\r\n    var no = 1;\r\n\r\n    result.forEach((donate) => {\r\n      this.setState({ isLoading: true });\r\n      var row = [];\r\n\r\n      row.push(<td className=\"text-center\">{donate.donateId}</td>);\r\n      row.push(\r\n        <td className=\"text-center py-0 align-middle\">\r\n          <div className=\"btn-group btn-group-sm\">\r\n                <Action type=\"success\" title=\"Edit\" icon=\"fas fa-check\" onClick={() => \r\n                \r\n                Swal.fire({\r\n \r\n                    icon: 'warning',\r\n                    title: 'Warning!',\r\n                    showCancelButton: true,\r\n                    text: 'Are you sure want to accept this?',\r\n                    }).then((result) => {\r\n \r\n                    if (result.isConfirmed) {\r\n                    this.acceptDonate(donate.donateId)\r\n                    Swal.fire(\r\n                        'Success!',\r\n                        'Accept Donation Already Success!',\r\n                        'success'\r\n                    )\r\n                    }\r\n                    })} />\r\n                <Action type=\"danger\" title=\"Delete\" icon=\"fas fa-ban\" onClick={() => Swal.fire({\r\n \r\n                    icon: 'warning',\r\n                    title: 'Warning!',\r\n                    showCancelButton: true,\r\n                    text: 'Are you sure want to cancel this?',\r\n                    }).then((result) => {\r\n \r\n                    if (result.isConfirmed) {\r\n                    this.rejecttDonate(donate.donateId)\r\n                    Swal.fire(\r\n                        'Success!',\r\n                        'Cancel Donation Already Success!',\r\n                        'success'\r\n                    )\r\n                    }\r\n                    })} />\r\n          </div>\r\n        </td>\r\n      );\r\n      row.push(<td>{donate.email}</td>);\r\n      row.push(<td>{donate.name}</td>);\r\n      row.push(<td>{donate.donationType}</td>);\r\n      row.push(<td>{donate.phoneNumber}</td>);\r\n      row.push(<td>{donate.totalBook}</td>);\r\n      row.push(<td>{donate.statusDonate}</td>);\r\n      results.push(row);\r\n    });\r\n    this.setState({ rows: results });\r\n  }\r\n\r\n\r\n  acceptDonate = (id) => {\r\n    let user = JSON.parse( localStorage.getItem('user'))\r\n    const userToken = user.token;\r\n    const config = {\r\n    headers: { Authorization: `Bearer ${userToken}` }}\r\n    axios.post(`http://localhost:8080/donate/accept/${id}`,null, config )\r\n      .then((response) => {\r\n        console.log(response)\r\n        window.location.reload()\r\n        \r\n      })\r\n\r\n  }\r\n\r\n  rejecttDonate = (id) => {\r\n    let user = JSON.parse( localStorage.getItem('user'))\r\n    const userToken = user.token;\r\n    const config = {\r\n    headers: { Authorization: `Bearer ${userToken}` }}\r\n    axios.post(`http://localhost:8080/donate/reject/${id}`,null, config )\r\n      .then((response) => {\r\n        console.log(response)\r\n        window.location.reload()\r\n        \r\n      })\r\n\r\n  }\r\n\r\n\r\n\r\n  \r\n\r\n  donateChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    })\r\n  }\r\n\r\n  handleValidation() {\r\n    let fields = this.state.fields;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    //Donate Name\r\n    if (!fields[\"DonateName\"]) {\r\n      formIsValid = false;\r\n      errors[\"DonateName\"] = \"Donate Name cannot be empty\";\r\n    }\r\n\r\n    this.setState({ errors: errors });\r\n    return formIsValid;\r\n  }\r\n\r\n  render() {\r\n    const { rows } = this.state;\r\n    const headings = [\r\n      \"No\",\r\n      \"Action\",\r\n      \"Email\",\r\n      \"Name\",\r\n      \"DonationType\",\r\n      \"PhoneNumber\",\r\n      \"TotalBook\",\r\n      \"Status\",\r\n    ];\r\n \r\n    return(\r\n      <div className=\"content-wrapper\">\r\n      <section className=\"content-header\">\r\n          <div className=\"container-fluid\">\r\n              <div className=\"row mb-2\">\r\n                  <div className=\"col-sm-6\">\r\n                      <h1>Donation Management</h1>\r\n                  </div>\r\n                  <div className=\"col-sm-6\">\r\n                                <ol className=\"breadcrumb float-sm-right\">\r\n                                    <li className=\"breadcrumb-item\"><a href=\"index.html\">Home</a></li>\r\n                                    <li className=\"breadcrumb-item active\">Donation Management</li>\r\n                                </ol>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n          {/* Main content */}\r\n          <section className=\"content\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header\">\r\n                                        <h3 className=\"card-title\">Donation List</h3>\r\n                                        <div className=\"card-tools\">\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* /.card-header */}\r\n                                    <div className=\"card-body\">\r\n                                        <DataTable headings={headings} rows={rows} />\r\n                                        {/* /.card-body */}\r\n                                    </div>\r\n                                </div>\r\n                                {/* /.card */}\r\n                            </div>\r\n                            {/* /.col */}\r\n                        </div>\r\n                        {/* /.row */}\r\n                    </div>\r\n                    {/* /.container-fluid */}\r\n                </section>\r\n                {/* /.content */}\r\n            </div>\r\n    )\r\n  }\r\n}\r\n \r\nexport default DonationManagement;","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\UserManagement\\UserManagement.js",["142","143","144","145"],"import React, { Component } from 'react';\r\nimport DataTable from '../../../Components/Datatable/Table';\r\nimport Status from '../../../Components/Datatable/Status';\r\nimport axios from 'axios';\r\nimport './UserManagement.style.css'\r\n\r\nimport $ from 'jquery';\r\nimport \"datatables.net-responsive/js/dataTables.responsive\"\r\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\r\nclass UserManagement extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: [],\r\n      rows: [],\r\n      results: [],\r\n      isLoading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchDataUser();\r\n  }\r\n\r\n  async fetchDataUser() {\r\n    let fetchedData = await axios.get(\r\n      'https://dummyapi.io/data/api/user?limit=100',\r\n      {\r\n        headers: {\r\n          'app-id': '5fb34a83ea9b56971e58ca12',\r\n        },\r\n      }\r\n    );\r\n\r\n    this.setState.isLoading = false;\r\n    const resultUser = fetchedData.data.data;\r\n    this.setState({ data: resultUser });\r\n    $('#example1').DataTable().destroy();\r\n    this.fetchData();\r\n    $(\"#example1\").DataTable({\r\n      responsive: true,\r\n      autoWidth: false,\r\n    });\r\n  }\r\n\r\n  fetchData() {\r\n    let results = [];\r\n    let result = this.state.data;\r\n    result.map((user) => {\r\n      this.setState({ isLoading: true });\r\n      let row = [];\r\n      let statusVal = '';\r\n      let actVal = (\r\n        <div className=\"btn-group btn-group-sm\">\r\n          <div className=\"input-group-prepend\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-default dropdown-toggle\"\r\n              data-toggle=\"dropdown\"\r\n            >\r\n              User\r\n            </button>\r\n            <div className=\"dropdown-menu\">\r\n              <a className=\"dropdown-item\" href=\"#\">\r\n                Librarian\r\n              </a>\r\n              <a className=\"dropdown-item\" href=\"#\">\r\n                Superadmin\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n      if (user.title == 'mr') {\r\n        statusVal = <Status type=\"success\" val=\"active\" />;\r\n      } else {\r\n        statusVal = <Status type=\"danger\" val=\"inactive\" />;\r\n      }\r\n\r\n      row.push(<td className=\"text-center\">{user.id}</td>);\r\n      row.push(\r\n        <td class=\"user-info\">\r\n          <img src={user.picture} alt=\"avatar\" />\r\n        </td>\r\n      );\r\n      row.push(\r\n        <td className=\"text-center\">{`${user.firstName} ${user.lastName}`}</td>\r\n      );\r\n      row.push(<td className=\"text-center\">{user.email}</td>);\r\n      row.push(<td className=\"text-center\">{statusVal}</td>);\r\n      row.push(<td className=\"text-center\">{user.title}</td>);\r\n      row.push(<td className=\"text-center\">{actVal}</td>);\r\n      results.push(row);\r\n    });\r\n    this.setState({ rows: results });\r\n    this.setState({ isLoading: false });\r\n  }\r\n\r\n  render() {\r\n    const { rows } = this.state;\r\n    const headings = [\r\n      'ID',\r\n      'Photo',\r\n      'Fullname',\r\n      'Email',\r\n      'Status',\r\n      'Last Activity',\r\n      'Level',\r\n    ];\r\n\r\n    return (\r\n      <div className=\"content-wrapper\">\r\n        <section className=\"content-header\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col-sm-6\">\r\n                <h1>User Management</h1>\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <ol className=\"breadcrumb float-sm-right\">\r\n                  <li className=\"breadcrumb-item\">\r\n                    <a href=\"index.html\">Home</a>\r\n                  </li>\r\n                  <li className=\"breadcrumb-item active\">User Management</li>\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/* Main content */}\r\n        <section className=\"content\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <div className=\"card\">\r\n                  {/* /.card-header */}\r\n                  <div className=\"card-body\">\r\n                    <DataTable headings={headings} rows={rows} />\r\n                    {/* /.card-body */}\r\n                  </div>\r\n                </div>\r\n                {/* /.card */}\r\n              </div>\r\n              {/* /.col */}\r\n            </div>\r\n            {/* /.row */}\r\n          </div>\r\n          {/* /.container-fluid */}\r\n        </section>\r\n        {/* /.content */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserManagement;\r\n","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\DetailInvoice\\DetailInvoice.js",["146"],"import React, { Component } from 'react'\r\nimport NumberFormat from 'react-number-format';\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport MaxIcon from \"../../Auth/Assets/Images/bookshelf.png\";\r\nimport Axios from 'axios';\r\n\r\nclass DetailInvoice extends Component {\r\n    constructor() {\r\n        super();\r\n        let user = JSON.parse(localStorage.getItem('user'))\r\n        const userToken = user.token;\r\n        this.state = {\r\n            invoiceId: '',\r\n            dataInvoice: [],\r\n            dataDetailInvoice: [],\r\n            userToken : userToken\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        const invoiceId = this.props.match.params.invoiceId;\r\n        this.getDetailInvoice(invoiceId);\r\n    }\r\n\r\n    async getDetailInvoice(invoiceId) {\r\n        \r\n        const token = this.state.userToken;\r\n        const config = {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n      }\r\n        const getInvoice = await Axios.get(`http://localhost:8080/invoice/get-by-id/${invoiceId}`, config)\r\n        const getInvoiceDetail = await Axios.get(`http://localhost:8080/invoice-detail/get-by-invoice-id/${invoiceId}`, config)\r\n        console.log(getInvoiceDetail);\r\n        this.setState({ dataInvoice: getInvoice.data.data, dataDetailInvoice: getInvoiceDetail.data.data })\r\n    }\r\n\r\n    formatRupiah = (nilai)=> {\r\n       return <NumberFormat value={nilai} displayType={'text'} thousandSeparator={true} prefix={'Rp. '} />\r\n    }\r\n\r\n    render() {\r\n        const { dataInvoice, dataDetailInvoice } = this.state;\r\n        console.log(dataDetailInvoice);\r\n        return (\r\n            < div className=\"content-wrapper\" >\r\n                {/* Content Header (Page header) */}\r\n                < section className=\"content-header\" >\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-sm-6\">\r\n                                <h1>Detail Invoice</h1>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <ol className=\"breadcrumb float-sm-right\">\r\n                                    <li className=\"breadcrumb-item\"><Link to=\"/\">Home</Link></li>\r\n                                    <li className=\"breadcrumb-item\"><Link to=\"FineManagement\">Fine Management</Link></li>\r\n                                    <li className=\"breadcrumb-item active\">Detail Invoice</li>\r\n                                </ol>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section >\r\n                {/* Main content */}\r\n                < section className=\"content\" >\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header\">\r\n                                        <h3 className=\"card-title\">Detail Invoice</h3>\r\n                                    </div>\r\n                                    {/* /.card-header */}\r\n                                    <div className=\"card-body\" id=\"DetailInvoice\">\r\n                                        <div className=\"invoice-1 detail\">\r\n                                            <div className=\"invoice p-3 mb-3\">\r\n                                                {/* title row */}\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-12\">\r\n                                                        <h4>\r\n                                                            <img src={MaxIcon} style={{ height: '2rem' }} /> Maxwell Library <small className=\"float-right\">Date: {dataInvoice.invoiceDate}</small>\r\n                                                        </h4>\r\n                                                    </div>\r\n                                                    {/* /.col */}\r\n                                                </div>\r\n                                                {/* info row */}\r\n                                                <div className=\"row invoice-info\">\r\n                                                    <div className=\"col-sm-4 invoice-col\">\r\n                                                        From\r\n                      <address>\r\n                                                            <strong>Maxwell Library</strong><br />\r\n                        795 Folsom Ave, Suite 600<br />\r\n                        San Francisco, CA 94107<br />\r\n                        Phone: (804) 123-5432<br />\r\n                        Email: maxwell@library.com\r\n                      </address>\r\n                                                    </div>\r\n                                                    {/* /.col */}\r\n                                                    <div className=\"col-sm-4 invoice-col\">\r\n                                                        To\r\n                      <address>\r\n                                                            <strong>{dataInvoice.borrower}</strong><br />\r\n                        {dataInvoice.address}<br />\r\n                        Phone: {dataInvoice.phone}<br />\r\n                        Email: {dataInvoice.email}\r\n                      </address>\r\n                                                    </div>\r\n                                                    {/* /.col */}\r\n                                                    <div className=\"col-sm-4 invoice-col\">\r\n                                                        <b>Invoice {dataInvoice.noInvoice}</b><br />\r\n                                                    </div>\r\n                                                    {/* /.col */}\r\n                                                </div>\r\n                                                {/* /.row */}\r\n                                                {/* Table row */}\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-12 table-responsive\">\r\n                                                        <table className=\"table table-striped\">\r\n                                                            <thead>\r\n                                                                <tr>\r\n                                                                    <th>No.</th>\r\n                                                                    <th>Book Title</th>\r\n                                                                    <th>Borrowed On</th>\r\n                                                                    <th>Due On</th>\r\n                                                                    <th>Late By</th>\r\n                                                                    <th>Fine Amount</th>\r\n                                                                </tr>\r\n                                                            </thead>\r\n                                                            <tbody>\r\n                                                                {\r\n                                                                    dataDetailInvoice.map((val, index) =>{\r\n                                                                        return (\r\n                                                                            <tr key={index}>\r\n                                                                                <td>{index+1}</td>\r\n                                                                                <td>{val.title}</td>\r\n                                                                                <td>{val.borrowedDate}</td>\r\n                                                                                <td>{val.treshold}</td>\r\n                                                                                <td>{val.late} Days</td>\r\n                                                                                <td>{val.grandTotal}</td>                                                                                \r\n                                                                            </tr>\r\n                                                                        )\r\n                                                                    })\r\n                                                                }\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </div>\r\n                                                    {/* /.col */}\r\n                                                </div>\r\n                                                {/* /.row */}\r\n                                                <div className=\"row\">\r\n                                                    {/* accepted payments column */}\r\n                                                    <div className=\"col-6\">\r\n                                                    </div>\r\n                                                    {/* /.col */}\r\n                                                    <div className=\"col-6\">\r\n                                                        <p className=\"lead\" style={{ float: 'right' }}>Amount Due {dataInvoice.treshold}</p>\r\n                                                        <div className=\"table-responsive\">\r\n                                                            <table className=\"table\">\r\n                                                                <tbody><tr>\r\n                                                                    <th style={{ width: '59%' }}>Total:</th>\r\n                                                                    <td>{this.formatRupiah(`${dataInvoice.grandTotal}`)}</td>\r\n                                                                </tr>\r\n                                                                </tbody></table>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    {/* /.col */}\r\n                                                </div>\r\n                                                {/* /.row */}\r\n                                                {/* this row will not appear when printing */}\r\n                                                <div className=\"row no-print\">\r\n                                                    <div className=\"col-12\">\r\n                                                        <Link to=\"PaymentPrintPaid\" target=\"_blank\" className=\"btn btn-default\"><i className=\"fas fa-print\" /> Print</Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* /.card-body */}\r\n                                </div>\r\n                                {/* /.card */}\r\n                            </div>\r\n                            {/* /.col */}\r\n                        </div>\r\n                        {/* /.row */}\r\n                    </div>\r\n                    {/* /.container-fluid */}\r\n                </section >\r\n                {/* /.content */}\r\n            </div >\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(DetailInvoice)","D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Components\\Datatable\\Cell.js",["147"],"D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\FormInput.js",["148"],"D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\App.js",["149"],"D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\Detail\\Detail.js",["150","151"],"D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\Profile\\ChangePassword.js",[],"D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\ReturnBook\\ReturnBook.js",[],"D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\Payment\\Payment.js",["152","153"],"D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Components\\Datatable\\Status.js",[],"D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\Card.js",[],"D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\Validate.js",[],"D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\Profile\\Profile.js",["154"],"D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\Donation\\Donation.js",["155","156"],"D:\\BCA IT Intern\\Library Terbaru\\maxwell-library-react\\src\\Screens\\Contents\\TopUp\\showResult.js",["157","158"],{"ruleId":"159","severity":1,"message":"160","line":2,"column":35,"nodeType":"161","messageId":"162","endLine":2,"endColumn":43},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"159","severity":1,"message":"167","line":10,"column":8,"nodeType":"161","messageId":"162","endLine":10,"endColumn":18},{"ruleId":"159","severity":1,"message":"168","line":4,"column":10,"nodeType":"161","messageId":"162","endLine":4,"endColumn":14},{"ruleId":"159","severity":1,"message":"169","line":5,"column":8,"nodeType":"161","messageId":"162","endLine":5,"endColumn":12},{"ruleId":"159","severity":1,"message":"170","line":12,"column":10,"nodeType":"161","messageId":"162","endLine":12,"endColumn":17},{"ruleId":"171","severity":1,"message":"172","line":28,"column":7,"nodeType":"173","messageId":"174","endLine":28,"endColumn":11},{"ruleId":"175","severity":1,"message":"176","line":49,"column":18,"nodeType":"177","messageId":"174","endLine":49,"endColumn":20},{"ruleId":"175","severity":1,"message":"176","line":54,"column":24,"nodeType":"177","messageId":"174","endLine":54,"endColumn":26},{"ruleId":"175","severity":1,"message":"176","line":80,"column":18,"nodeType":"177","messageId":"174","endLine":80,"endColumn":20},{"ruleId":"175","severity":1,"message":"176","line":182,"column":31,"nodeType":"177","messageId":"174","endLine":182,"endColumn":33},{"ruleId":"175","severity":1,"message":"176","line":189,"column":38,"nodeType":"177","messageId":"174","endLine":189,"endColumn":40},{"ruleId":"175","severity":1,"message":"176","line":227,"column":18,"nodeType":"177","messageId":"174","endLine":227,"endColumn":20},{"ruleId":"175","severity":1,"message":"176","line":232,"column":24,"nodeType":"177","messageId":"174","endLine":232,"endColumn":26},{"ruleId":"159","severity":1,"message":"178","line":244,"column":9,"nodeType":"161","messageId":"162","endLine":244,"endColumn":13},{"ruleId":"175","severity":1,"message":"176","line":301,"column":14,"nodeType":"177","messageId":"174","endLine":301,"endColumn":16},{"ruleId":"179","severity":1,"message":"180","line":414,"column":19,"nodeType":"181","endLine":414,"endColumn":167},{"ruleId":"182","severity":1,"message":"183","line":430,"column":17,"nodeType":"181","endLine":434,"endColumn":16},{"ruleId":"179","severity":1,"message":"180","line":584,"column":19,"nodeType":"181","endLine":584,"endColumn":145},{"ruleId":"182","severity":1,"message":"183","line":600,"column":17,"nodeType":"181","endLine":604,"endColumn":16},{"ruleId":"159","severity":1,"message":"184","line":55,"column":11,"nodeType":"161","messageId":"162","endLine":55,"endColumn":17},{"ruleId":"185","severity":1,"message":"186","line":91,"column":28,"nodeType":"187","messageId":"188","endLine":91,"endColumn":30},{"ruleId":"182","severity":1,"message":"183","line":373,"column":11,"nodeType":"181","endLine":373,"endColumn":88},{"ruleId":"189","severity":1,"message":"190","line":503,"column":13,"nodeType":"181","endLine":503,"endColumn":50},{"ruleId":"159","severity":1,"message":"168","line":5,"column":10,"nodeType":"161","messageId":"162","endLine":5,"endColumn":14},{"ruleId":"159","severity":1,"message":"160","line":5,"column":16,"nodeType":"161","messageId":"162","endLine":5,"endColumn":24},{"ruleId":"175","severity":1,"message":"176","line":47,"column":91,"nodeType":"177","messageId":"174","endLine":47,"endColumn":93},{"ruleId":"175","severity":1,"message":"176","line":85,"column":91,"nodeType":"177","messageId":"174","endLine":85,"endColumn":93},{"ruleId":"175","severity":1,"message":"176","line":121,"column":95,"nodeType":"177","messageId":"174","endLine":121,"endColumn":97},{"ruleId":"191","severity":1,"message":"192","line":241,"column":17,"nodeType":"181","endLine":241,"endColumn":81},{"ruleId":"182","severity":1,"message":"183","line":338,"column":17,"nodeType":"181","endLine":338,"endColumn":53},{"ruleId":"163","replacedBy":"193"},{"ruleId":"165","replacedBy":"194"},{"ruleId":"189","severity":1,"message":"190","line":18,"column":17,"nodeType":"181","endLine":21,"endColumn":19},{"ruleId":"159","severity":1,"message":"195","line":5,"column":13,"nodeType":"161","messageId":"162","endLine":5,"endColumn":18},{"ruleId":"159","severity":1,"message":"196","line":5,"column":20,"nodeType":"161","messageId":"162","endLine":5,"endColumn":25},{"ruleId":"159","severity":1,"message":"197","line":50,"column":9,"nodeType":"161","messageId":"162","endLine":50,"endColumn":11},{"ruleId":"185","severity":1,"message":"186","line":49,"column":23,"nodeType":"187","messageId":"188","endLine":49,"endColumn":25},{"ruleId":"179","severity":1,"message":"180","line":64,"column":15,"nodeType":"181","endLine":64,"endColumn":53},{"ruleId":"179","severity":1,"message":"180","line":67,"column":15,"nodeType":"181","endLine":67,"endColumn":53},{"ruleId":"175","severity":1,"message":"176","line":74,"column":22,"nodeType":"177","messageId":"174","endLine":74,"endColumn":24},{"ruleId":"189","severity":1,"message":"190","line":79,"column":61,"nodeType":"181","endLine":79,"endColumn":109},{"ruleId":"159","severity":1,"message":"198","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":26},{"ruleId":"159","severity":1,"message":"199","line":2,"column":21,"nodeType":"161","messageId":"162","endLine":2,"endColumn":29},{"ruleId":"159","severity":1,"message":"200","line":4,"column":8,"nodeType":"161","messageId":"162","endLine":4,"endColumn":19},{"ruleId":"189","severity":1,"message":"190","line":72,"column":21,"nodeType":"181","endLine":72,"endColumn":104},{"ruleId":"189","severity":1,"message":"190","line":79,"column":23,"nodeType":"181","endLine":79,"endColumn":77},{"ruleId":"175","severity":1,"message":"201","line":113,"column":23,"nodeType":"177","messageId":"174","endLine":113,"endColumn":25},{"ruleId":"189","severity":1,"message":"190","line":135,"column":28,"nodeType":"181","endLine":135,"endColumn":76},{"ruleId":"159","severity":1,"message":"202","line":33,"column":15,"nodeType":"161","messageId":"162","endLine":33,"endColumn":25},{"ruleId":"159","severity":1,"message":"203","line":6,"column":8,"nodeType":"161","messageId":"162","endLine":6,"endColumn":16},{"ruleId":"179","severity":1,"message":"204","line":282,"column":19,"nodeType":"181","endLine":284,"endColumn":20},{"ruleId":"159","severity":1,"message":"205","line":5,"column":7,"nodeType":"161","messageId":"162","endLine":5,"endColumn":12},{"ruleId":"175","severity":1,"message":"176","line":24,"column":25,"nodeType":"177","messageId":"174","endLine":24,"endColumn":27},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["206"],"no-negated-in-lhs",["207"],"'SuccessImg' is defined but never used.","'Link' is defined but never used.","'Card' is defined but never used.","'MDBIcon' is defined but never used.","no-dupe-keys","Duplicate key 'data'.","ObjectExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'pass' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","'config' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",["206"],["207"],"'error' is defined but never used.","'event' is defined but never used.","'no' is assigned a value but never used.","'Component' is defined but never used.","'FormText' is defined but never used.","'AuthService' is defined but never used.","Expected '!==' and instead saw '!='.","'cancelForm' is assigned a value but never used.","'Reactdom' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'sleep' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]